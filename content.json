{"meta":{"title":"ÁìúÂ≠êÂ£≥‰∏ìÁî®ÂûÉÂúæÊ°∂","subtitle":"Tech Otaku Save the World","description":"ÊâìÈìÅ$ ACMer $<br>‰∏ªË¶ÅÂèëË°®$ ACM $Áõ∏ÂÖ≥ÔºåÂÅ∂Â∞îÊäΩÈ£é <br> Ÿ©(‡πë>‚ó°<‡πë)€∂ <br> $ From GDUT $","author":"$ \\cal WiLe $","url":"http://WigginsLi.github.io"},"pages":[{"title":"","date":"2019-08-09T07:49:43.709Z","updated":"2019-06-17T12:57:41.966Z","comments":true,"path":"README.html","permalink":"http://WigginsLi.github.io/README.html","excerpt":"","text":"#This WiLe‚Äôs BlogQAQ"},{"title":"about","date":"2018-12-12T22:14:36.000Z","updated":"2019-08-09T10:37:57.928Z","comments":false,"path":"about/index.html","permalink":"http://WigginsLi.github.io/about/index.html","excerpt":"","text":"ËµÑÊñôÂæÖË°•ÂÖÖ(ÂÖ∂ÂÆûÊòØÊàëÊáí) update:19.06.21 ÂãáËÄÖÊñóÊÅ∂Èæô-$QAQ$-&gt;ÈìÅ‚Äî&gt;Èìú‚Äî‚Äî‚Äî‚Äì&gt;Èì∂‚Äî‚Äî‚Äî‚Äî-$DaLao$‚Äî‚Äî‚Äî&gt;Èáë‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî&gt;$FINAL$","keywords":"ÂÖ≥‰∫é"},{"title":"client","date":"2018-12-20T23:13:35.000Z","updated":"2019-05-31T23:21:46.000Z","comments":false,"path":"client/index.html","permalink":"http://WigginsLi.github.io/client/index.html","excerpt":"","text":"Áõ¥Êé•‰∏ãËΩΩ or Êâ´Á†Å‰∏ãËΩΩÔºö","keywords":"AndroidÂÆ¢Êà∑Á´Ø"},{"title":"lab","date":"2019-01-05T21:47:59.000Z","updated":"2019-05-31T23:21:46.000Z","comments":false,"path":"lab/index.html","permalink":"http://WigginsLi.github.io/lab/index.html","excerpt":"","text":"sakura‰∏ªÈ¢òbalabala","keywords":"LabÂÆûÈ™åÂÆ§"},{"title":"","date":"2019-08-09T10:38:45.189Z","updated":"2019-08-09T10:38:45.184Z","comments":true,"path":"bangumi/index.html","permalink":"http://WigginsLi.github.io/bangumi/index.html","excerpt":"","text":"layout: bangumititle: bangumicomments: falsedate: 2019-02-10 21:32:48keywords:description:bangumis: img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpgtitle: ÊúùËä±Â§ïË™ì‚Äî‚Äî‰∫éÁ¶ªÂà´‰πãÊúùÊùüËµ∑Á∫¶ÂÆö‰πãËä±status: Â∑≤ËøΩÂÆåprogress: 100jp: „Åï„Çà„Å™„Çâ„ÅÆÊúù„Å´Á¥ÑÊùü„ÅÆËä±„Çí„Åã„Åñ„Çç„ÅÜtime: 2018-02-24 SUN.desc: ‰ΩèÂú®ËøúÁ¶ªÂ∞òÂö£ÁöÑÂúüÂú∞Ôºå‰∏ÄËæπÂ∞ÜÊØèÂ§©ÁöÑ‰∫ãÊÉÖÁºñÁªáÊàêÂêç‰∏∫Â∏åÊØîÊ¨ßÁöÑÂ∏ÉÔºå‰∏ÄËæπÈùôÈùôÁîüÊ¥ªÁöÑ‰ºäÊ¨ßÂ§´‰∫∫Ê∞ë„ÄÇÂú®15Â≤ÅÂ∑¶Âè≥Â§ñË°®Â∞±ÂÅúÊ≠¢ÊàêÈïøÔºåÊã•ÊúâÊï∞ÁôæÂπ¥ÂØøÂëΩÁöÑ‰ªñ‰ª¨ÔºåË¢´Áß∞‰∏∫‚ÄúÁ¶ªÂà´ÁöÑ‰∏ÄÊóè‚ÄùÔºåÂπ∂Ë¢´ËßÜ‰∏∫Ê¥ªÁùÄÁöÑ‰º†ËØ¥„ÄÇÊ≤°ÊúâÂèå‰∫≤ÁöÑ‰ºäÊ¨ßÂ§´Â∞ëÂ•≥ÁéõÂ•á‰∫öÔºåËøáÁùÄË¢´‰ºô‰º¥ÂåÖÂõ¥ÁöÑÂπ≥Á®≥Êó•Â≠êÔºåÂç¥ÊÄªÊÑüËßâ‚ÄúÂ≠§Ë∫´‰∏Ä‰∫∫‚Äù„ÄÇ‰ªñ‰ª¨ÁöÑËøôÁßçÊó•Â∏∏Ôºå‰∏ÄÁû¨Èó¥Â∞±Â¥©Ê∫ÉÊ∂àÂ§±„ÄÇËøΩÊ±Ç‰ºäÊ¨ßÂ§´ÁöÑÈïøÂØø‰πãË°ÄÔºåÊ¢ÖËê®ËíÇÂÜõ‰πòÂùêÁùÄÂêç‰∏∫Èõ∑Á∫≥ÁâπÁöÑÂè§‰ª£ÂÖΩÂèëÂä®‰∫ÜËøõÊîª„ÄÇÂú®ÁªùÊúõ‰∏éÊ∑∑‰π±‰πã‰∏≠Ôºå‰ºäÊ¨ßÂ§´ÁöÑÁ¨¨‰∏ÄÁæéÂ•≥ËïæËéâ‰∫öË¢´Ê¢ÖËê®ËíÇÂ∏¶Ëµ∞ÔºåËÄåÁéõÂ•á‰∫öÊöóÊÅãÁöÑÂ∞ëÂπ¥ÂÖãÈáåÂßÜ‰πüÂ§±Ë∏™‰∫Ü„ÄÇÁéõÂ•á‰∫öËôΩÁÑ∂ÊÄªÁÆóÈÄÉËÑ±‰∫ÜÔºåÂç¥Â§±Âéª‰∫Ü‰ºô‰º¥ÂíåÂΩíÂéª‰πãÂú∞‚Ä¶‚Ä¶„ÄÇ"},{"title":"donate","date":"2018-12-20T23:13:05.000Z","updated":"2019-05-31T23:21:46.000Z","comments":false,"path":"donate/index.html","permalink":"http://WigginsLi.github.io/donate/index.html","excerpt":"","text":"","keywords":"Ë∞¢Ë∞¢È•≤‰∏ª‰∫ÜÂñµ~"},{"title":"comment","date":"2018-12-20T23:13:48.000Z","updated":"2019-05-31T23:21:46.000Z","comments":true,"path":"comment/index.html","permalink":"http://WigginsLi.github.io/comment/index.html","excerpt":"","text":"Âøµ‰∏§Âè•ËØó ÂèôÂà´Ê¢¶„ÄÅÊâ¨Â∑û‰∏ÄËßâ„ÄÇ „ÄêÂÆã‰ª£„ÄëÂê¥ÊñáËã±„ÄäÂ§úÊ∏∏ÂÆ´¬∑‰∫∫ÂéªË•øÊ•ºÈõÅÊù≥„Äã","keywords":"ÁïôË®ÄÊùø"},{"title":"music","date":"2018-12-20T23:14:28.000Z","updated":"2019-05-31T23:21:46.000Z","comments":false,"path":"music/index.html","permalink":"http://WigginsLi.github.io/music/index.html","excerpt":"","text":"","keywords":"ÂñúÊ¨¢ÁöÑÈü≥‰πê"},{"title":"tags","date":"2018-12-12T22:14:16.000Z","updated":"2019-05-31T23:21:46.000Z","comments":true,"path":"tags/index.html","permalink":"http://WigginsLi.github.io/tags/index.html","excerpt":"","text":""},{"title":"links","date":"2018-12-19T23:11:06.000Z","updated":"2019-08-09T10:47:29.817Z","comments":true,"path":"links/index.html","permalink":"http://WigginsLi.github.io/links/index.html","excerpt":"","text":"","keywords":"Âèã‰∫∫Â∏ê"},{"title":"rss","date":"2018-12-20T23:09:03.000Z","updated":"2019-05-31T23:21:46.000Z","comments":true,"path":"rss/index.html","permalink":"http://WigginsLi.github.io/rss/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T22:53:25.000Z","updated":"2019-05-31T23:21:46.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"http://WigginsLi.github.io/theme-sakura/index.html","excerpt":"","text":"Hexo‰∏ªÈ¢òSakura‰øÆÊîπËá™WordPress‰∏ªÈ¢òSakuraÔºåÊÑüË∞¢Âéü‰ΩúËÄÖMashiro","keywords":"Hexo ‰∏ªÈ¢ò Sakura üå∏"},{"title":"video","date":"2018-12-20T23:14:38.000Z","updated":"2019-05-31T23:21:46.000Z","comments":false,"path":"video/index.html","permalink":"http://WigginsLi.github.io/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: 'ÊúùËä±Â§ïË™ì‚Äî‚Äî‰∫éÁ¶ªÂà´‰πãÊúùÊùüËµ∑Á∫¶ÂÆö‰πãËä±', status: 'Â∑≤ËøΩÂÆå', progress: 100, jp: '„Åï„Çà„Å™„Çâ„ÅÆÊúù„Å´Á¥ÑÊùü„ÅÆËä±„Çí„Åã„Åñ„Çç„ÅÜ', time: 'ÊîæÈÄÅÊó∂Èó¥: 2018-02-24 SUN.', desc: ' ‰ΩèÂú®ËøúÁ¶ªÂ∞òÂö£ÁöÑÂúüÂú∞Ôºå‰∏ÄËæπÂ∞ÜÊØèÂ§©ÁöÑ‰∫ãÊÉÖÁºñÁªáÊàêÂêç‰∏∫Â∏åÊØîÊ¨ßÁöÑÂ∏ÉÔºå‰∏ÄËæπÈùôÈùôÁîüÊ¥ªÁöÑ‰ºäÊ¨ßÂ§´‰∫∫Ê∞ë„ÄÇÂú®15Â≤ÅÂ∑¶Âè≥Â§ñË°®Â∞±ÂÅúÊ≠¢ÊàêÈïøÔºåÊã•ÊúâÊï∞ÁôæÂπ¥ÂØøÂëΩÁöÑ‰ªñ‰ª¨ÔºåË¢´Áß∞‰∏∫‚ÄúÁ¶ªÂà´ÁöÑ‰∏ÄÊóè‚ÄùÔºåÂπ∂Ë¢´ËßÜ‰∏∫Ê¥ªÁùÄÁöÑ‰º†ËØ¥„ÄÇÊ≤°ÊúâÂèå‰∫≤ÁöÑ‰ºäÊ¨ßÂ§´Â∞ëÂ•≥ÁéõÂ•á‰∫öÔºåËøáÁùÄË¢´‰ºô‰º¥ÂåÖÂõ¥ÁöÑÂπ≥Á®≥Êó•Â≠êÔºåÂç¥ÊÄªÊÑüËßâ‚ÄúÂ≠§Ë∫´‰∏Ä‰∫∫‚Äù„ÄÇ‰ªñ‰ª¨ÁöÑËøôÁßçÊó•Â∏∏Ôºå‰∏ÄÁû¨Èó¥Â∞±Â¥©Ê∫ÉÊ∂àÂ§±„ÄÇËøΩÊ±Ç‰ºäÊ¨ßÂ§´ÁöÑÈïøÂØø‰πãË°ÄÔºåÊ¢ÖËê®ËíÇÂÜõ‰πòÂùêÁùÄÂêç‰∏∫Èõ∑Á∫≥ÁâπÁöÑÂè§‰ª£ÂÖΩÂèëÂä®‰∫ÜËøõÊîª„ÄÇÂú®ÁªùÊúõ‰∏éÊ∑∑‰π±‰πã‰∏≠Ôºå‰ºäÊ¨ßÂ§´ÁöÑÁ¨¨‰∏ÄÁæéÂ•≥ËïæËéâ‰∫öË¢´Ê¢ÖËê®ËíÇÂ∏¶Ëµ∞ÔºåËÄåÁéõÂ•á‰∫öÊöóÊÅãÁöÑÂ∞ëÂπ¥ÂÖãÈáåÂßÜ‰πüÂ§±Ë∏™‰∫Ü„ÄÇÁéõÂ•á‰∫öËôΩÁÑ∂ÊÄªÁÆóÈÄÉËÑ±‰∫ÜÔºåÂç¥Â§±Âéª‰∫Ü‰ºô‰º¥ÂíåÂΩíÂéª‰πãÂú∞‚Ä¶‚Ä¶„ÄÇ' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: 'ÊúùËä±Â§ïË™ì‚Äî‚Äî‰∫éÁ¶ªÂà´‰πãÊúùÊùüËµ∑Á∫¶ÂÆö‰πãËä±', status: 'Â∑≤ËøΩÂÆå', progress: 100, jp: '„Åï„Çà„Å™„Çâ„ÅÆÊúù„Å´Á¥ÑÊùü„ÅÆËä±„Çí„Åã„Åñ„Çç„ÅÜ', time: '2018-02-24 SUN.', desc: ' ‰ΩèÂú®ËøúÁ¶ªÂ∞òÂö£ÁöÑÂúüÂú∞Ôºå‰∏ÄËæπÂ∞ÜÊØèÂ§©ÁöÑ‰∫ãÊÉÖÁºñÁªáÊàêÂêç‰∏∫Â∏åÊØîÊ¨ßÁöÑÂ∏ÉÔºå‰∏ÄËæπÈùôÈùôÁîüÊ¥ªÁöÑ‰ºäÊ¨ßÂ§´‰∫∫Ê∞ë„ÄÇÂú®15Â≤ÅÂ∑¶Âè≥Â§ñË°®Â∞±ÂÅúÊ≠¢ÊàêÈïøÔºåÊã•ÊúâÊï∞ÁôæÂπ¥ÂØøÂëΩÁöÑ‰ªñ‰ª¨ÔºåË¢´Áß∞‰∏∫‚ÄúÁ¶ªÂà´ÁöÑ‰∏ÄÊóè‚ÄùÔºåÂπ∂Ë¢´ËßÜ‰∏∫Ê¥ªÁùÄÁöÑ‰º†ËØ¥„ÄÇÊ≤°ÊúâÂèå‰∫≤ÁöÑ‰ºäÊ¨ßÂ§´Â∞ëÂ•≥ÁéõÂ•á‰∫öÔºåËøáÁùÄË¢´‰ºô‰º¥ÂåÖÂõ¥ÁöÑÂπ≥Á®≥Êó•Â≠êÔºåÂç¥ÊÄªÊÑüËßâ‚ÄúÂ≠§Ë∫´‰∏Ä‰∫∫‚Äù„ÄÇ‰ªñ‰ª¨ÁöÑËøôÁßçÊó•Â∏∏Ôºå‰∏ÄÁû¨Èó¥Â∞±Â¥©Ê∫ÉÊ∂àÂ§±„ÄÇËøΩÊ±Ç‰ºäÊ¨ßÂ§´ÁöÑÈïøÂØø‰πãË°ÄÔºåÊ¢ÖËê®ËíÇÂÜõ‰πòÂùêÁùÄÂêç‰∏∫Èõ∑Á∫≥ÁâπÁöÑÂè§‰ª£ÂÖΩÂèëÂä®‰∫ÜËøõÊîª„ÄÇÂú®ÁªùÊúõ‰∏éÊ∑∑‰π±‰πã‰∏≠Ôºå‰ºäÊ¨ßÂ§´ÁöÑÁ¨¨‰∏ÄÁæéÂ•≥ËïæËéâ‰∫öË¢´Ê¢ÖËê®ËíÇÂ∏¶Ëµ∞ÔºåËÄåÁéõÂ•á‰∫öÊöóÊÅãÁöÑÂ∞ëÂπ¥ÂÖãÈáåÂßÜ‰πüÂ§±Ë∏™‰∫Ü„ÄÇÁéõÂ•á‰∫öËôΩÁÑ∂ÊÄªÁÆóÈÄÉËÑ±‰∫ÜÔºåÂç¥Â§±Âéª‰∫Ü‰ºô‰º¥ÂíåÂΩíÂéª‰πãÂú∞‚Ä¶‚Ä¶„ÄÇ' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} Áï™ÁªÑËÆ°Âàí ËøôÈáåÂ∞ÜÊòØÊ∞∏ËøúÁöÑÂõûÂøÜ window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} ÊîæÈÄÅÊó∂Èó¥: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"BÁ´ô"}],"posts":[{"title":"__int128Á±ªÂûãÂ∞èËÆ∞","slug":"int128","date":"2019-07-19T06:31:10.467Z","updated":"2019-08-09T11:06:59.587Z","comments":true,"path":"2019/07/19/int128/","link":"","permalink":"http://WigginsLi.github.io/2019/07/19/int128/","excerpt":"ËåÉÂõ¥ÊòØ $[- 2^{127} , 2^{127}-1]$ Âü∫Êú¨Áî®Ê≥ï‰∏éÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁ±ª‰ººÔºå‰ΩÜ‰∏çËÉΩÁî®$cin,cout$ËØªÂÖ•ËæìÂá∫ ËøôÈáåËÆ∞‰∏ã==ËæìÂÖ•ËæìÂá∫‚ÄúÂ§ñÊåÇ‚Äù==Ôºö","text":"ËåÉÂõ¥ÊòØ $[- 2^{127} , 2^{127}-1]$ Âü∫Êú¨Áî®Ê≥ï‰∏éÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁ±ª‰ººÔºå‰ΩÜ‰∏çËÉΩÁî®$cin,cout$ËØªÂÖ•ËæìÂá∫ ËøôÈáåËÆ∞‰∏ã==ËæìÂÖ•ËæìÂá∫‚ÄúÂ§ñÊåÇ‚Äù==Ôºö ËØªÂÖ•template &lt;typename T&gt; inline void read(T &amp;X) { X = 0; char ch = 0; T op = 1; for(; ch &gt; &#39;9&#39; || ch &lt; &#39;0&#39;; ch = getchar()) if(ch == &#39;-&#39;) op = -1; for(; ch &gt;= &#39;0&#39; &amp;&amp; ch &lt;= &#39;9&#39;; ch = getchar()) X = (X &lt;&lt; 3) + (X &lt;&lt; 1) + ch - 48; X *= op; } ËæìÂá∫void _print(__int128 x) { if(x&gt;9) _print(x/10); putchar(x%10+&#39;0&#39;); } void print(__int128 x) { if(x&lt;0) {x=-x;putchar(&#39;-&#39;);} _print(x); }","categories":[{"name":"Experience","slug":"Experience","permalink":"http://WigginsLi.github.io/categories/Experience/"}],"tags":[{"name":"Êï∞ÊçÆÁ±ªÂûã","slug":"Êï∞ÊçÆÁ±ªÂûã","permalink":"http://WigginsLi.github.io/tags/Êï∞ÊçÆÁ±ªÂûã/"}],"keywords":[{"name":"Experience","slug":"Experience","permalink":"http://WigginsLi.github.io/categories/Experience/"}]},{"title":"Â¶Ç‰ΩïÊõ¥Á®≥ÂÆöÂú∞ÁßëÂ≠¶‰∏äÁΩë-ËÆ∞vultrË¢´Â¢ôÂêéÁöÑv2ray+WebSocket+TLSÈÉ®ÁΩ≤ËøáÁ®ã","slug":"v2ray-deploy","date":"2019-06-16T14:02:20.000Z","updated":"2019-08-09T11:07:06.917Z","comments":true,"path":"2019/06/16/v2ray-deploy/","link":"","permalink":"http://WigginsLi.github.io/2019/06/16/v2ray-deploy/","excerpt":"$Github Page$ Âßë‰∏îÁÆóÊòØÂõΩÂ§ñÁöÑÁΩëÁ´ôÂêßÔºåÂú®‰∏äÈù¢ËÆ∞‰∏Ä‰∏ãÁßëÂ≠¶‰∏äÁΩëÂ∫îËØ•Ê≤°ÈóÆÈ¢òÂêßÔºàÁãóÂ§¥‰øùÂëΩ &lt;Êú¨Êñá‰ªÖ‰∏∫ÊäÄÊúØ‰∫§ÊµÅÔºåËØ∑ÂãøËΩ¨ËΩΩ&gt;","text":"$Github Page$ Âßë‰∏îÁÆóÊòØÂõΩÂ§ñÁöÑÁΩëÁ´ôÂêßÔºåÂú®‰∏äÈù¢ËÆ∞‰∏Ä‰∏ãÁßëÂ≠¶‰∏äÁΩëÂ∫îËØ•Ê≤°ÈóÆÈ¢òÂêßÔºàÁãóÂ§¥‰øùÂëΩ &lt;Êú¨Êñá‰ªÖ‰∏∫ÊäÄÊúØ‰∫§ÊµÅÔºåËØ∑ÂãøËΩ¨ËΩΩ&gt; ÂâçË®ÄÔºöÁªèËøáÂÖ≠ÊúàÁöÑÂ§ß‰∫ã‰ª∂ÔºåÂõΩÂÜÖÂ§ßÂ§öÊï∞VPNË¢´Â∞ÅÁ¶ÅÔºåÂêÑÂ§ßÁü•ÂêçÊúçÂä°Âô®ÂéÇÂïÜÁöÑIP‰πüË¢´GFWÂ¢ô‰∫Ü„ÄÇÁÑ∂ÂêéÂæà‰∏çÂπ∏Âú∞ÔºåÊàë‰ª¨‰π∞ÁöÑvultrÁöÑÊúçÂä°Âô®Â∞±ÊòØÂèóÂÆ≥ËÄÖ‰πã‰∏Ä„ÄÇÊú¨ÁùÄ‰∏çËÉΩÊµ™Ë¥πË¥¶Êà∑ÈáåÂâ©‰∏ãÁöÑ3ÂàÄÁöÑÁ≤æÁ•ûÔºà‰∏ÄÂè∞ÊúçÂä°Âô®‰∏Ä‰∏™ÊúàÊâç5ÂàÄÂëêÔºâÔºåÈÅÇ‰∏äÁΩëÊ±ÇËß£ÔºåÁªà‰∫éÊâæÂà∞Websocket+TLSÁöÑËß£ÂÜ≥ÊñπÊ°àÔºàÂÖ∂ÂÆûË∞∑Ê≠å‰∏Ä‰∏ã‰∏ÄÂ§ßÂ†ÜÔºå‰ΩÜÊòØÈÉΩÊúâ‰∫õÈóÆÈ¢òÔºåËøôÈáåÂÅö‰∏Ä‰∏ãÊï¥ÂêàÔºâ„ÄÇ ÈúÄË¶ÅÂáÜÂ§áÁöÑÔºö ‰∏Ä‰∏™ÊöÇÊó∂ËÉΩÁî®ÁöÑÁæéÂõΩ‰ª£ÁêÜÔºàss,ssr,sockets5,etcÔºâÔºàÁΩë‰∏äÂÖçË¥π‰ª£ÁêÜ‰∏ÄÂ§ßÂ†ÜÔºâ ‰∏Ä‰∏™ÂüüÂêçÔºàÂÖçË¥πÁöÑÂ∞±Ë°åÔºå‰∏ãÊñá‰ºöËÆ≤Ôºâ ‰∏ÄÂè∞ÊúçÂä°Âô® $Xshell$(ÂèØ‰ª•Áî≥ËØ∑ÊïôËÇ≤ÁâàÔºåËøôÈáå‰∏çËµòËø∞) v2rayÂÆ¢Êà∑Á´Ø(https://github.com/2dust/v2rayN/releases),‰∏ãËΩΩÊúÄÂ§ßÁöÑÈÇ£‰∏™Ëß£ÂéãÂ∞±Â•Ω‰∫Ü ÊúçÂä°Âô®ÈÄâÊã©ÊúçÂä°Âô®ÂèØ‰ª•ÈÄâÊã©$vultr$ÔºåÊàñËÄÖÊê¨Áì¶Â∑•ÔºåËøôÈáåÁ¨îËÄÖÁî®ÁöÑ$vultr$„ÄÇÂèØ‰ª•ÁÇπËøô‰∏™ÈìæÊé•Ê≥®ÂÜåÔºåif so,‰Ω†Â∞ÜÂèØ‰ª•ÂæóÂà∞50ÂàÄÔºà‰∏Ä‰∏™ÊúàËøáÊúüÔºâ ÈÖçÁΩÆÊ≠£Â∏∏Âú∞ÁÇπÁΩëÈ°µÂè≥‰∏äËßíÁöÑÂä†Âè∑Deploy New ServerÊñ∞ÂºÄ‰∏Ä‰∏™ÊúçÂä°Âô®Âç≥ÂèØÔºåÂª∫ËÆÆÈÄâÊã©ÁæéÂõΩÁöÑÊúçÂä°Âô®ÔºåÁ¨îËÄÖÈÄâÊã©Los Angeles,Êìç‰ΩúÁ≥ªÁªüÈÄâDebian 9 64‰ΩçÔºàÊ≥®ÊÑèËøôÁØáÊñáÁ´†ÁöÑÊó∂ÊïàÊÄßÔºâÔºåÂÖ∂‰ªñÈªòËÆ§Âç≥ÂèØ„ÄÇ Ê£ÄÊµãÂèØ‰ª•ÁÇπËøôÈáåÔºåËæìÂÖ•‰Ω†ÁöÑÊúçÂä°Âô®ÁöÑÂüüÂêçÔºåÁÇπÂáªpingÊ£ÄÊµã‰πüÂèØ‰ª•Áî®cmd ping‰∏Ä‰∏ãÔºåË¢´Â¢ôÁöÑipÂ∞±‰ºöÊòæÁ§∫ËøûÊé•Ë∂ÖÊó∂ÔºåÔºà‰πüÂ∞±Êúâ‰∫ÜËøôÁØáÊñáÁ´†‚î≠‚îÆÔπè‚î≠‚îÆ ÂÖçË¥πÂüüÂêçFreenomÔºàÊ≠§Ê≠•È™§ÈúÄÊåÇ‰ª£ÁêÜÔºâ ÁÇπÂáªËøôÈáå ËøõÂÖ•ÁΩëÁ´ôÔºå ÁÇπÂè≥‰∏äËßíÁöÑÁôªÂÖ•ËøõÂÖ•ÁôªÈôÜÁïåÈù¢ÔºåÁ≠âÂæÖÁΩëÈ°µÂä†ËΩΩÂÆåÂÖ®ÔºåÁî®‰∏ãÊñπÁöÑË∞∑Ê≠åË¥¶Âè∑ÁôªÈôÜ„ÄÇÔºàÂ¶ÇÊûúÊèêÁ§∫ÁôªÈôÜÂ§±Ë¥•ÔºåÊ≤°ÂÖ≥Á≥ªÔºåÂõûÂà∞‰∏ªÈ°µÔºå‰∏çË¶Å‰∏ÄÁõ¥Â∞ùËØïÁôªÈôÜÔºåÁΩëÁ´ô‰ºöËØÜÂà´‰Ω†ÊòØÊú∫Âô®‰∫∫ÔºåÂæàÈ∫ªÁÉ¶Ôºâ„ÄÇ Âú®‰∏ªÈ°µÁöÑÊêúÁ¥¢Ê°ÜËæìÂÖ•‰Ω†ÊÉ≥Ë¶ÅÁöÑÂüüÂêçÔºåÊü•ÊâæÔºåÔºàÂ¶ÇÊûúÊ≤°ÊúâÊòæÁ§∫ÂÖçË¥πÔºåÂ∞±Êç¢‰∏Ä‰∏™Ôºå‰∏ÄËà¨Èïø‰∏ÄÁÇπÁöÑÊâçÂÖçË¥πÔºâÈÄâÂ•Ω‰πãÂêéÔºåÁÇπÂÆåÊàêÔºåËøõÂÖ•Ë¥≠Áâ©ËΩ¶ ÔºàËøôÊó∂ÂÄô‰∏ÄËà¨ÈÉΩÊòØËã±ÊñáÁïåÈù¢ÔºâÔºåÈÄâÊã©12‰∏™ÊúàÁöÑÂÖçË¥πÔºåÁÇπcontinue,ÁÇπÂè≥‰∏ãËßíÁªßÁª≠Áî®Ë∞∑Ê≠åÁôªÈôÜÔºåËøôÊó∂ÂÄôÁΩëÁ´ôÂ∞±‰ºöÁªô‰Ω†ÁöÑGmailÂèëÊøÄÊ¥ªË¥¶Êà∑ÁöÑÈÇÆ‰ª∂ÔºåÁÇπËøõÂéªÊøÄÊ¥ªÈìæÊé•ÊøÄÊ¥ª‰∏Ä‰∏ãÔºåÁÑ∂ÂêéÂÜçÁôªÈôÜÂ∞±ÂèØ‰ª•‰∫Ü„ÄÇÔºàÂ¶ÇÊûú‰∏çÊàêÂäüÔºåÂ§öËØïÂá†Ê¨°ÔºåÈ¢ëÁéá‰∏çË¶ÅÂ§™È´òÔºåÊàñËÄÖ‰πüÂèØ‰ª•ËØï‰∏ãÂ∑¶‰∏ãËßíÁöÑÈÇÆÁÆ±Ê≥®ÂÜåÔºåemmmÊ≥®ÂÜåËøô‰∏ÄÊ≠•Âç°‰∫ÜÊàëËõÆ‰πÖÁöÑÔºâ Âú®‰∏ªÈ°µÊü•ÁúãServices-My Domains,Á°Æ‰øùÂüüÂêçÂ§Ñ‰∫éACTIVEÁä∂ÊÄÅ„ÄÇ ËÆæÁΩÆ‰∏≠Èó¥ÊúçÂä°ÂïÜ ÁÆÄÂçï‰ªãÁªç‰∏Ä‰∏ã‰∏∫‰ªÄ‰πàÊúâËøô‰∏ÄÊ≠•„ÄÇÂâçÈù¢ÊèêÂà∞Êàë‰ª¨ÁöÑipË¢´Â¢ô‰∫ÜÔºåÈÇ£‰πà‰∏Ä‰∏™Á†¥Ëß£ÁöÑÊÄùË∑ØÊòØÊàë‰ª¨ËøûÊé•‰∏ä‰∏Ä‰∏™Ê≤°ÊúâË¢´Â¢ôÁöÑÊúçÂä°Âô®ÔºåÂÜçÈÄöËøáËøô‰∏™ÊúçÂä°Âô®ËøûÊé•Êàë‰ª¨Ë¢´Â¢ôÁöÑÊúçÂä°Âô®ÔºåÁõ∏ÂΩì‰∫éÊ°•ÁöÑ‰ΩúÁî®„ÄÇ CloudFlare Ê≥®ÂÜå,ÊØîËæÉÁÆÄÂçï ÁôªÈôÜ‰πãÂêéÔºåÊèêÁ§∫Add your site,ÊääÂàöÂàöÊ≥®ÂÜåÁöÑÂüüÂêçÂ°´ËøõÂéªÔºåÁÇπ‰∏ã‰∏ÄÊ≠•ÔºåÈÄâÊã©ÂÖçË¥πÂ•óÈ§ê ÊèêÁ§∫Ë¶ÅÊõ¥Êç¢Name Servers,ÂõûÂà∞freenomÁöÑMy DomainÔºåÁÇπÂáªÂüüÂêçÂêéÈù¢ÁöÑManage Domain„ÄÇ ËøõÂÖ•cloudflare‰∏ªÈ°µ‰∏äÊñπÁöÑDNSÈÄâÈ°πÂç°ÔºåÊ∑ªÂä†‰∏Ä‰∏™AËÆ∞ÂΩïÔºånameÂ°´www,ipÂ°´‰Ω†ÁöÑvultrÊúçÂä°Âô®ÁöÑÂú∞ÂùÄ,(ÈáçË¶ÅÔºÅÔºÅÔºÅ)ÔºåÂêéÈù¢ÁöÑ‰∫ëÊúµÁÇπ‰∏Ä‰∏ãÁÇπÊàêÁÅ∞Ëâ≤ÔºåÁÇπÂáªÊ∑ªÂä† ‰πãÂêéÈöî‰∏ÄÊÆµÊó∂Èó¥ÂéªÁΩëÁ´ôping‰∏Ä‰∏ã‰Ω†ÁöÑÂüüÂêçÔºåÂ¶ÇÊûúipÂΩíÂ±ûÂú∞Â§ßÂ§öÊï∞ÈÉΩÊòæÁ§∫ÁæéÂõΩ cloudflareÔºåÈÇ£‰πàÂ∞±ÂèØ‰ª•ËøõË°å‰∏ã‰∏ÄÊ≠•„ÄÇ ÂØπÊúçÂä°Âô®Êìç‰ΩúXshellËøûÊé•ÊúçÂä°Âô® È¶ñÂÖàÂú®cmd ping‰∏Ä‰∏ãÂüüÂêçÁúãËß£ÊûêÁöÑipÊòØ‰∏çÊòØcloudflareÁöÑÔºåÁ°ÆÂÆö‰Ω†ÊâÄÂú®ÁöÑÂú∞Âå∫Â∑≤ÁªèË¢´Ëß£Êûê Ëøô‰∏ÄÊ≠•ÂèÇËÄÉÂçöÊñá.ps:Â¶ÇÊûúËøû‰∏ç‰∏ä/ÊòæÁ§∫ÈîôËØØÁöÑËØùÔºåÊ£ÄÊü•‰ø°ÊÅØÊòØÂê¶Â°´ÂÜôÊ≠£Á°ÆÔºåÁ¨îËÄÖÂ∞±ÊääÊúçÂä°Âô®Âú∞ÂùÄÂ°´Êàê‰∫ÜÂüüÂêçÔºåÈÉÅÈó∑‰∫ÜÂçäÂ§©Orz ÈÖçÁΩÆV2rayÁéØÂ¢É ËøôÈáåÊàë‰ª¨‰ΩøÁî®233Â§ßÁ•ûÁöÑ‰∏ÄÈîÆÂÆâË£ÖËÑöÊú¨ ËæìÂÖ•bash &lt;(curl -s -L https://git.io/v2ray.sh) Â¶ÇÊûúÊèêÁ§∫ curl: command not found ÔºåÈÇ£ÊòØÂõ†‰∏∫‰Ω†ÁöÑ VPS Ê≤°Ë£Ö Curl ubuntu/debian Á≥ªÁªüÂÆâË£Ö Curl ÊñπÊ≥ï: apt-get update -y &amp;&amp; apt-get install curl -y centos Á≥ªÁªüÂÆâË£Ö Curl ÊñπÊ≥ï: yum update -y &amp;&amp; yum install curl -y ÂÆâË£ÖÂ•Ω curl ‰πãÂêéÂ∞±ËÉΩÂÆâË£ÖËÑöÊú¨‰∫Ü ps:Â¶ÇÊûúËøô‰∏™ËÑöÊú¨ÈìæÊé•ÊåÇ‰∫ÜÔºåÂèØ‰ª•Áî®Êàë Fork ÁöÑ‰∏Ä‰ªΩÂâØÊú¨bash &lt;(curl -L -s https://git.io/fj2lI) Â§ßÊ¶ÇÊòØ‰∏ãÈù¢Ëøô‰∏™ÁïåÈù¢ÔºåÊàë‰ª¨ÈÄâÊã© Websocket+TLS ÂçèËÆÆ V2Ray Á´ØÂè£Èöè‰æøÔºå‰∏çË¶ÅÊòØ 80 Âíå 443 Âç≥ÂèØÔºåÁÑ∂ÂêéËæìÂÖ•‰Ω†ÁöÑÂüüÂêçÔºåÂüüÂêçËß£Êûê Y ÔºåËá™Âä®ÈÖçÁΩÆ TLS ‰πüÊòØ Y ÔºåÂÖ∂‰ªñÂ∞±ÈªòËÆ§ÂêßÔºå‰∏ÄË∑ØÂõûËΩ¶„ÄÇÁ≠âÂæÖÂÆâË£ÖÂÆåÊàê Ë∞ÉÊï¥‰∏≠Èó¥ÊúçÂä°ÂïÜ ÂõûÂà∞ CloudFlare ‰∏ªÈ°µÔºåÈÄâÊã© Crypto ÈÄâÈ°πÂç°ÁöÑ SSL ‰∏∫ Full„ÄÇÁ°Æ‰øùÂ∑¶ËæπÊòæÁ§∫ Universal SSL Status Active Certificate„ÄÇÂ¶ÇÊûúÊ≤°ÊúâÔºå24Â∞èÊó∂ÂÜÖÂ∞±‰ºöÊòæÁ§∫ÔºåÂèØ‰ª•ÂÖà‰∏çÁÆ°„ÄÇÁªßÁª≠‰∏ã‰∏ÄÊ≠•„ÄÇ ÁÇπÂáª DNS ÈÄâÈ°πÂç°ÔºåÊääÂàöÂàöÈÇ£‰∏™ÁÇπÁÅ∞ÁöÑ‰∫ëÊúµÂÜçÁÇπ‰∏Ä‰∏ãÔºåÁÇπÊàêÊ©ôËâ≤„ÄÇ Ëá≥Ê≠§ÂÆåÊàêÂÖ®ÈÉ®ÈÖçÁΩÆ„ÄÇ Â∞ùËØïËøûÊé•v2ray XshellËøûÊé•ÊúçÂä°Âô®ÔºåËæìÂÖ•v2ray qrÔºåÊääÂæóÂà∞ÁöÑÈìæÊé•Â§çÂà∂Âá∫Êù•ÔºåÂú®ÊµèËßàÂô®ÊâìÂºÄ ÂæóÂà∞‰∏ÄÂº†‰∫åÁª¥Á†ÅÔºåÊâìÂºÄV2rayÂÆ¢Êà∑Á´ØÔºåÂç≥Ëß£ÂéãÂêéÊñá‰ª∂Â§πÈáåÁöÑ v2rayN.exe Âè≥ÂáªÊâòÁõòÁöÑÁ®ãÂ∫èÔºåÈÄâÊã©Êâ´ÊèèÂ±èÂπï‰∫åÁª¥Á†ÅÔºåÁÑ∂ÂêéÊääÂÆ¢Êà∑Á´ØÂÆåÂÖ®ÂÖ≥ÊéâÔºåÈáçÊñ∞ÊâìÂºÄ Âè≥ÂáªÊâòÁõòÁ®ãÂ∫èÔºåÊää ÂêØÁî®http‰ª£ÁêÜ ÁöÑÂãæÂãæ‰∏ä Âú®ÂÆ¢Êà∑Á´ØÈáåÈù¢ÈÄâÊã©ÂèÇÊï∞ËÆæÁΩÆ-&gt;Ë∑ØÁî±ËÆæÁΩÆ-&gt;Ë∑ØÁî±Ê®°Âºè-&gt;ÁªïËøáÂ±ÄÂüüÁΩëÂèäÂ§ßÈôÜÂú∞ÂùÄÔºåÁÇπÁ°ÆÂÆö ÂÜçÂè≥Âáªv2rayËäÇÁÇπ,ÊµãËØï‰∏Ä‰∏ãÊúçÂä°Âô®Âª∂ËøüÔºåÂ¶ÇÊûú‰∏çÊòØÊòæÁ§∫ -1ms ,Â∞±ËØ¥ÊòéÊàêÂäüËøûÊé•„ÄÇ Ëá≥Ê≠§Â§ßÂäüÂëäÊàê„ÄÇ Â¶ÇÊûúÂá∫Áé∞‰ªÄ‰πàÈóÆÈ¢òÔºåÂèØ‰ª•ÁïôË®ÄÈóÆÊàëÔºåÁúãÂà∞Â∞±‰ºöÂõûÂ§ç„ÄÇ„ÄÇ„ÄÇ","categories":[{"name":"ÁßëÂ≠¶‰∏äÁΩë","slug":"ÁßëÂ≠¶‰∏äÁΩë","permalink":"http://WigginsLi.github.io/categories/ÁßëÂ≠¶‰∏äÁΩë/"}],"tags":[{"name":"v2ray","slug":"v2ray","permalink":"http://WigginsLi.github.io/tags/v2ray/"}],"keywords":[{"name":"ÁßëÂ≠¶‰∏äÁΩë","slug":"ÁßëÂ≠¶‰∏äÁΩë","permalink":"http://WigginsLi.github.io/categories/ÁßëÂ≠¶‰∏äÁΩë/"}]},{"title":"p3080 [USACO13MAR]ÁâõË∑ëThe Cow Run [Âå∫Èó¥DP]","slug":"p3080","date":"2019-05-29T21:07:47.000Z","updated":"2019-05-29T14:17:34.535Z","comments":true,"path":"2019/05/30/p3080/","link":"","permalink":"http://WigginsLi.github.io/2019/05/30/p3080/","excerpt":"$\\implies$ ‰º†ÈÄÅÈó® È¢òÁõÆÂ§ßÊÑè: ÁªôÂÆö‰∏ÄÊù°ÂùêÊ†áËΩ¥‰∏ä$n$‰∏™ÁÇπÁõ∏ÂØπ‰∫éÂéüÁÇπÁöÑ‰ΩçÁΩÆ(Ê≠£Ë¥üÂùáÊúâ) ‰ªéÂéüÁÇπÂá∫ÂèëÂéªÂç†È¢ÜËøô‰∫õÁÇπ,Ë¢´Âç†È¢ÜÂâçÊØè‰∏™ÁÇπÂçï‰ΩçÊó∂Èó¥Ê∂àËÄó‰∏Ä‰∏™Âçï‰Ωç‰ª£‰ª∑ ÊØèÂçï‰ΩçÊó∂Èó¥ÂèØ‰ª•ÁßªÂä®‰∏Ä‰∏™Âçï‰ΩçÈïøÂ∫¶,ÈóÆÊúÄÂ∞ëËä±Ë¥πÂ§öÂ∞ë‰ª£‰ª∑","text":"$\\implies$ ‰º†ÈÄÅÈó® È¢òÁõÆÂ§ßÊÑè: ÁªôÂÆö‰∏ÄÊù°ÂùêÊ†áËΩ¥‰∏ä$n$‰∏™ÁÇπÁõ∏ÂØπ‰∫éÂéüÁÇπÁöÑ‰ΩçÁΩÆ(Ê≠£Ë¥üÂùáÊúâ) ‰ªéÂéüÁÇπÂá∫ÂèëÂéªÂç†È¢ÜËøô‰∫õÁÇπ,Ë¢´Âç†È¢ÜÂâçÊØè‰∏™ÁÇπÂçï‰ΩçÊó∂Èó¥Ê∂àËÄó‰∏Ä‰∏™Âçï‰Ωç‰ª£‰ª∑ ÊØèÂçï‰ΩçÊó∂Èó¥ÂèØ‰ª•ÁßªÂä®‰∏Ä‰∏™Âçï‰ΩçÈïøÂ∫¶,ÈóÆÊúÄÂ∞ëËä±Ë¥πÂ§öÂ∞ë‰ª£‰ª∑ ÂàÜÊûê: ÂÆπÊòìÊÉ≥Âá∫ËøôÈ¢òÂ∫îËØ•Áî®Âå∫Èó¥DPÊ±ÇËß£,‰ΩÜÊòØÊú¨È¢òÂ§ö‰∫Ü‰∏Ä‰∏™Áä∂ÊÄÅ,Âç≥ÊØèÊ¨°Â§ÑÁêÜÂÆå‰∏ÄÊÆµÂå∫Èó¥,ÂèØËÉΩÂ§Ñ‰∫éÂ∑¶Á´ØÁÇπ,‰πüÂèØËÉΩÊòØÂè≥Á´ØÁÇπ ÈÇ£‰πàËÄÉËôë‰∏âÁª¥Áä∂ÊÄÅ $dp[l][r][0/1]$ ‰ª£Ë°®Â§ÑÁêÜ $[l,r]$ Âå∫Èó¥ÂêéÂ§Ñ‰∫éÂ∑¶/Âè≥Á´ØÁÇπÁöÑÊúÄÂ∞è‰ª£‰ª∑ Â∞Ün‰∏™ÂùêÊ†áÂä†‰∏äÂéüÁÇπcÁ¶ªÊï£ÂåñÊàê$n+1$‰∏™ÁÇπ,ÈÇ£‰πàÊàë‰ª¨ÂàùÂßãÂåñ$dp[c][c][0]=dp[c][c][1]=0$ ÂΩì‰Ωç‰∫é $[l,r]$ Âå∫Èó¥ÁöÑÂ∑¶Á´ØÁÇπÊó∂, Áî± $[l+1,r]$ ÁöÑÂ∑¶Á´ØÁÇπÂà∞Ëææ,‰ª£‰ª∑ $(p[l+1]-p[l]) * (n+1-(r-l))$ //Èô§‰∫Ü[l+1,r]ÁöÑÈÉ®ÂàÜ(ÂåÖÊã¨lÁÇπ)ÈÉΩÈúÄË¶ÅÊ∂àËÄó‰ª£‰ª∑. Áî± $[l+1,r]$ ÁöÑÂè≥Á´ØÁÇπÂà∞Ëææ,‰ª£‰ª∑ $(p[r]-p[l]) * (n+1-(r-l))$ ÂΩì‰Ωç‰∫é $[l,r]$ Âå∫Èó¥ÁöÑÂè≥Á´ØÁÇπ‰∫¶ÂêåÁêÜÂèØÂæó. ÂæóÂà∞ËΩ¨ÁßªÊñπÁ®ã:$$ dp[l][r][0] = min( \\begin{cases} dp[l+1][r][0]+(p[l+1]-p[l]) * (n+1-(r-l)) \\\\ dp[l+1][r][1]+(p[r]-p[l])_ (n+1-(r-l)) \\end{cases}) $$ $$ dp[l][r][1] = min( \\begin{cases} dp[l][r-1][1]+(p[r]-p[r-1]) * (n+1-(r-l)) \\\\ dp[l][r-1][0]+(p[r]-p[l])_ (n+1-(r-l)) \\end{cases}) $$ Code #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; const int INF = 0x3f3f3f3f; const int maxn = 1e3+5; ll p[maxn],dp[maxn][maxn][2]; int n; int main() { cin&gt;&gt;n; for(int i=1;i&lt;=n;i++) cin&gt;&gt;p[i]; p[n+1]=0; sort(p+1,p+n+2); int c=lower_bound(p+1,p+n+2,0)-p; memset(dp,INF,sizeof(dp)); //cout&lt;&lt;c&lt;&lt;endl; dp[c][c][0]=dp[c][c][1]=0; for(int len=2;len&lt;=n+1;len++) { for(int i=1;i+len-1&lt;=n+1;i++) { int j=i+len-1; dp[i][j][0]=min(dp[i+1][j][0]+(p[i+1]-p[i])*(n+1-(j-i)),dp[i+1][j][1]+(p[j]-p[i])*(n+1-(j-i))); dp[i][j][1]=min(dp[i][j-1][1]+(p[j]-p[j-1])*(n+1-(j-i)),dp[i][j-1][0]+(p[j]-p[i])*(n+1-(j-i))); //cout&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;j&lt;&lt;&quot; &quot;; //cout&lt;&lt;dp[i][j][0]&lt;&lt;&quot; &quot;&lt;&lt;dp[i][j][1]&lt;&lt;endl; } } cout&lt;&lt;min(dp[1][n+1][0],dp[1][n+1][1])&lt;&lt;endl; return 0; }","categories":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}],"tags":[{"name":"dp","slug":"dp","permalink":"http://WigginsLi.github.io/tags/dp/"}],"keywords":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}]},{"title":"cf-1114D Flood Fill [Âå∫Èó¥DP]","slug":"cf-1114D","date":"2019-05-29T18:58:26.000Z","updated":"2019-05-29T14:17:11.031Z","comments":true,"path":"2019/05/30/cf-1114D/","link":"","permalink":"http://WigginsLi.github.io/2019/05/30/cf-1114D/","excerpt":"$\\implies$ ‰º†ÈÄÅÈó® È¢òÁõÆÂ§ßÊÑè: ÁªôÂÆö$n$‰∏™ÊñπÂùóÊúâÁõ∏Â∫îÁöÑÈ¢úËâ≤$c_i$,ÂÆö‰πâÁõ∏ÈÇªÁöÑÊñπÂùóÈ¢úËâ≤Áõ∏ÂêåÂàôÂèØ‰ª•Áß∞‰∏∫‰∏Ä‰∏™ËÅîÈÄöÈ¢úËâ≤Âùó. Áé∞Âú®ËÆ©‰Ω†ÂàùÂßãÈÄâÂÆö‰∏Ä‰∏™ÊñπÂùó$p$,ÊØèÊ¨°ÂèØ‰ª•Â∞ÜËØ•ÊñπÂùóÊâÄÂú®ÁöÑËÅîÈÄöÈ¢úËâ≤ÂùóÊç¢Êàê‰∏Ä‰∏™È¢úËâ≤,Ê±ÇÊúÄÂ∞ëÁöÑÊìç‰ΩúÊ¨°Êï∞‰ΩøÂæó$n$‰∏™ÊñπÂùóÂÖ®ÈÉ®‰∏∫‰∏ÄÁßçÈ¢úËâ≤","text":"$\\implies$ ‰º†ÈÄÅÈó® È¢òÁõÆÂ§ßÊÑè: ÁªôÂÆö$n$‰∏™ÊñπÂùóÊúâÁõ∏Â∫îÁöÑÈ¢úËâ≤$c_i$,ÂÆö‰πâÁõ∏ÈÇªÁöÑÊñπÂùóÈ¢úËâ≤Áõ∏ÂêåÂàôÂèØ‰ª•Áß∞‰∏∫‰∏Ä‰∏™ËÅîÈÄöÈ¢úËâ≤Âùó. Áé∞Âú®ËÆ©‰Ω†ÂàùÂßãÈÄâÂÆö‰∏Ä‰∏™ÊñπÂùó$p$,ÊØèÊ¨°ÂèØ‰ª•Â∞ÜËØ•ÊñπÂùóÊâÄÂú®ÁöÑËÅîÈÄöÈ¢úËâ≤ÂùóÊç¢Êàê‰∏Ä‰∏™È¢úËâ≤,Ê±ÇÊúÄÂ∞ëÁöÑÊìç‰ΩúÊ¨°Êï∞‰ΩøÂæó$n$‰∏™ÊñπÂùóÂÖ®ÈÉ®‰∏∫‰∏ÄÁßçÈ¢úËâ≤ ÂàÜÊûê: ÂÆö‰πâ $dp[l][r]$ Ë°®Á§∫$l,r$Âå∫Èó¥ÂÖ®ÈÉ®Âèò‰∏∫Âêå‰∏ÄÁßçÈ¢úËâ≤ÁöÑ‰ª£‰ª∑,ÂÆπÊòìÂæóÂá∫$dp$ËΩ¨ÁßªÊñπÁ®ã: $dp[l][r] = min(dp[l][k]+dp[k+1][r]+1,dp[l][r])$ ‰∏äËø∞ËΩ¨ÁßªÊñπÁ®ãÂ§çÊùÇÂ∫¶‰∏∫$O(n^3)$,ÈúÄË¶Å‰ºòÂåñ ÊîπÂÜôÊñπÁ®ãÂΩ¢Âºè‰∏∫$$dp[l][r]=\\begin{cases} dp[l+1][r-1], &amp; \\text {if a[l]=a[r]} \\\\ min(dp[l+1][r]+1,dp[l][r-1]+1), &amp; \\text {if a[l] $\\neq$ a[r]} \\end{cases}$$ ‰∏ÄËà¨Â•óË∑Ø,ÁêÜËß£ËÆ∞ÂøÜ Code: #include &lt;bits/stdc++.h&gt; using namespace std; int dp[5005][5005],n,a[5005],tot,b[5005]; int main() { cin&gt;&gt;n; for(int i=1;i&lt;=n;i++) { scanf(&quot;%d&quot;,&amp;a[i]); if(a[i]==a[i-1]) { continue; } else { b[++tot]=a[i]; } } n=tot; for(int len=1;len&lt;n;len++) { for(int l=1;l+len&lt;=n;l++) { int r=l+len; if(b[l]==b[r]) { dp[l][r]=dp[l+1][r-1]+1; } else { dp[l][r]=min(dp[l+1][r]+1,dp[l][r-1]+1); } } } cout&lt;&lt;dp[1][n]; }","categories":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}],"tags":[{"name":"Âå∫Èó¥dp","slug":"Âå∫Èó¥dp","permalink":"http://WigginsLi.github.io/tags/Âå∫Èó¥dp/"},{"name":"dp","slug":"dp","permalink":"http://WigginsLi.github.io/tags/dp/"}],"keywords":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}]},{"title":"Ê¥õË∞∑p1119-ÁÅæÂêéÈáçÂª∫ [floyd]","slug":"p1119","date":"2019-05-11T11:15:57.000Z","updated":"2019-05-28T14:38:40.710Z","comments":true,"path":"2019/05/11/p1119/","link":"","permalink":"http://WigginsLi.github.io/2019/05/11/p1119/","excerpt":"$\\implies$ ‰º†ÈÄÅÈó® È¢òÁõÆÂ§ßÊÑè: ÁªôÂá∫Âõæ‰∏≠$x_i$ËäÇÁÇπË¢´Âä†ËøõÂõæÈáåÁöÑÊó∂Èó¥$t_i$;Â§ö‰∏™ËØ¢ÈóÆ$Q$,Ê±Ç$t_j$Êó∂Èó¥,$x_j,y_j$ÁöÑÊúÄÁü≠Ë∑ùÁ¶ª","text":"$\\implies$ ‰º†ÈÄÅÈó® È¢òÁõÆÂ§ßÊÑè: ÁªôÂá∫Âõæ‰∏≠$x_i$ËäÇÁÇπË¢´Âä†ËøõÂõæÈáåÁöÑÊó∂Èó¥$t_i$;Â§ö‰∏™ËØ¢ÈóÆ$Q$,Ê±Ç$t_j$Êó∂Èó¥,$x_j,y_j$ÁöÑÊúÄÁü≠Ë∑ùÁ¶ª ÂàÜÊûê: ÁúãËøôÈ¢ò‰πãÂâçÊàë‰ª¨ÂÖàÂõûÈ°æ‰∏Ä‰∏ã$floyd$ÁÆóÊ≥ï; Á¨¨‰∏ÄÂ±ÇÂæ™ÁéØÂÆûÈôÖ‰∏äÊòØÂ∞Ü$1-n$ËäÇÁÇπ‰æùÊ¨°Âä†ÂÖ•Âà∞Âõæ‰∏≠;ÊØèÂä†ÂÖ•‰∏Ä‰∏™,ÈÄöËøáÂÜÖÂ±ÇÂæ™ÁéØÊõ¥Êñ∞Âõæ‰∏≠Â∑≤ÊúâÁöÑÁÇπ‰πãÈó¥ÁöÑË∑ùÁ¶ª ÈÇ£‰πàÂõûÂà∞ËøôÈ¢ò,Âú®Êó∂Èó¥‰∏ä‰æùÊ¨°Â∞ÜËäÇÁÇπÂä†ÂÖ•Âç≥Â§©ÁÑ∂‰∏∫$floyd$‰∏≠ÁöÑÁ¨¨‰∏ÄÂ±ÇÂ∫è ÈÇ£‰πàÊàë‰ª¨ÂèØ‰ª•ËÆ∞ÂΩïÊØè‰∏™Âä†ÂÖ•Êó∂Èó¥ÁöÑÁä∂ÊÄÅ,Êü•ËØ¢Êó∂‰∫åÂàÜÊü•Êâæ$t_j$Êó∂Èó¥‰ªã‰∫éÂì™‰∏§‰∏™Áä∂ÊÄÅ‰πãÈó¥,Áõ¥Êé•ËæìÂá∫$x_j,y_j$ÂΩìÂâçÁä∂ÊÄÅÁöÑÊúÄÁü≠Ë∑ùÁ¶ªÂç≥ÂèØ ‰ª£Á†Å: #include &lt;bits/stdc++.h&gt; using namespace std; const int maxn = 1e5+5; const int INF=0x3f3f3f3f; int n,m,u,v,w,q,t[205]; int dp[205][205][205]; int main() { cin&gt;&gt;n&gt;&gt;m; for(int i=0;i&lt;n;i++) cin&gt;&gt;t[i]; memset(dp,INF,sizeof(dp)); for(int i=1;i&lt;=m;i++) { cin&gt;&gt;u&gt;&gt;v&gt;&gt;w; dp[0][u][v]=dp[0][v][u]=w; } for(int i=0;i&lt;n;i++) dp[0][i][i]=0; for(int k=0;k&lt;n;k++) { for(int i=0;i&lt;n;i++) { for(int j=0;j&lt;n;j++) { dp[k][i][j]=min(dp[k==0?0:k-1][i][k]+dp[k==0?0:k-1][k][j],dp[k==0?0:k-1][i][j]); } } } cin&gt;&gt;q; while(q--) { cin&gt;&gt;u&gt;&gt;v&gt;&gt;w; int inx=upper_bound(t,t+n,w)-t-1; //cout&lt;&lt;inx&lt;&lt;&quot; &quot;&lt;&lt;t[u]&lt;&lt;&quot; &quot;&lt;&lt;t[v]&lt;&lt;endl; if(t[u]&gt;w||t[v]&gt;w||dp[inx][u][v]==INF) { cout&lt;&lt;-1&lt;&lt;endl; }else { cout&lt;&lt;dp[inx][u][v]&lt;&lt;endl; } } return 0; }","categories":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"},{"name":"ÊÄùÁª¥","slug":"ÊÄùÁª¥","permalink":"http://WigginsLi.github.io/categories/ÊÄùÁª¥/"}],"tags":[{"name":"floyd","slug":"floyd","permalink":"http://WigginsLi.github.io/tags/floyd/"}],"keywords":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"},{"name":"ÊÄùÁª¥","slug":"ÊÄùÁª¥","permalink":"http://WigginsLi.github.io/categories/ÊÄùÁª¥/"}]},{"title":"ACMÂçè‰ºö+ÈùíÂàõËØæÁ¨¨‰∫åËäÇKMPËÆ≤Ëß£ËµÑÊñô","slug":"kmp-teaching","date":"2019-05-06T01:00:51.000Z","updated":"2019-05-27T12:07:16.072Z","comments":true,"path":"2019/05/06/kmp-teaching/","link":"","permalink":"http://WigginsLi.github.io/2019/05/06/kmp-teaching/","excerpt":"‰∏ÄÁØáËÆ≤ÁöÑÂæàÂ•ΩÁöÑÂçöÂÆ¢, $ \\implies $ ËøôÈáå PPT‰∏ãËΩΩ $\\implies$ ÁôæÂ∫¶ÁΩëÁõò ÊèêÂèñÁ†Å: pqs9ÊàñËÄÖÂ§çÂà∂Ëøô‰∏ÄÊÆµ: ÈìæÊé•: https://pan.baidu.com/s/13O9WiAkaQYDrKE1UMJAS4w ÊèêÂèñÁ†Å: pqs9 Â§çÂà∂ËøôÊÆµÂÜÖÂÆπÂêéÊâìÂºÄÁôæÂ∫¶ÁΩëÁõòÊâãÊú∫AppÔºåÊìç‰ΩúÊõ¥Êñπ‰æøÂì¶","text":"‰∏ÄÁØáËÆ≤ÁöÑÂæàÂ•ΩÁöÑÂçöÂÆ¢, $ \\implies $ ËøôÈáå PPT‰∏ãËΩΩ $\\implies$ ÁôæÂ∫¶ÁΩëÁõò ÊèêÂèñÁ†Å: pqs9ÊàñËÄÖÂ§çÂà∂Ëøô‰∏ÄÊÆµ: ÈìæÊé•: https://pan.baidu.com/s/13O9WiAkaQYDrKE1UMJAS4w ÊèêÂèñÁ†Å: pqs9 Â§çÂà∂ËøôÊÆµÂÜÖÂÆπÂêéÊâìÂºÄÁôæÂ∫¶ÁΩëÁõòÊâãÊú∫AppÔºåÊìç‰ΩúÊõ¥Êñπ‰æøÂì¶ ÊúÄÂêéÁöÑÊúÄÂêé,ÈùûÂ∏∏ÊÑüË∞¢Â§ßÂÆ∂ËÉΩÊäΩÁ©∫Âá∫Êù•Âê¨ÊàëÁöÑËØæ,(Èû†Ë∫¨Êï¨Á§º)ËÆ≤Âæó‰∏çÂ•ΩÁöÑÂú∞ÊñπËØ∑Â§öÂ§öÊãÖÂæÖÊúâÈóÆÈ¢òÊàñËÄÖÊÉ≥ÂíåÊàë‰∫§ÊµÅ,ËØ∑ÈöèÊó∂ÁïôË®Ä","categories":[{"name":"Â≠óÁ¨¶‰∏≤","slug":"Â≠óÁ¨¶‰∏≤","permalink":"http://WigginsLi.github.io/categories/Â≠óÁ¨¶‰∏≤/"}],"tags":[{"name":"KMP","slug":"KMP","permalink":"http://WigginsLi.github.io/tags/KMP/"}],"keywords":[{"name":"Â≠óÁ¨¶‰∏≤","slug":"Â≠óÁ¨¶‰∏≤","permalink":"http://WigginsLi.github.io/categories/Â≠óÁ¨¶‰∏≤/"}]},{"title":"„Äê04.11ËÆ≠ÁªÉËµõËÆ∞ÂΩï„Äë","slug":"19-4-11-Training","date":"2019-04-12T19:57:36.000Z","updated":"2019-08-09T11:06:43.570Z","comments":true,"path":"2019/04/13/19-4-11-Training/","link":"","permalink":"http://WigginsLi.github.io/2019/04/13/19-4-11-Training/","excerpt":"Âá∫È¢òÊï∞Âû´Â∫ïÁ•≠QAQ $\\implies$È¢òÁõÆÊñáÊ°£PDF(‰ºº‰πéÂè™ÊúâÂêå‰∏Ä‰∏™groupÊâçËÉΩÊâìÂºÄ) Êâì‰∏çÂºÄÁöÑÂ∞è‰ºô‰º¥ËØ∑Ëá™Ë°åÊêúÁ¥¢(20172018-acmicpc-pacific-northwest-regional-contest-div-1)(„Å•Ôø£3Ôø£)„Å•","text":"Âá∫È¢òÊï∞Âû´Â∫ïÁ•≠QAQ $\\implies$È¢òÁõÆÊñáÊ°£PDF(‰ºº‰πéÂè™ÊúâÂêå‰∏Ä‰∏™groupÊâçËÉΩÊâìÂºÄ) Êâì‰∏çÂºÄÁöÑÂ∞è‰ºô‰º¥ËØ∑Ëá™Ë°åÊêúÁ¥¢(20172018-acmicpc-pacific-northwest-regional-contest-div-1)(„Å•Ôø£3Ôø£)„Å• A. Odd Palindrome Â≠óÁ¨¶‰∏≤Ê∞¥È¢òÔºåËøòÊ≤°ÁúãÈ¢òÈù¢Â∑≤ÁªèË¢´$Inctry$Âàá‰∫Ü C. Fear Factoring Â§ßÊÑè:Ê±Ç$\\sum_{i=a}^b F(i)$,ÂÖ∂‰∏≠$F(N)=\\sum_{x \\mid N}$,Êï∞ÊçÆËåÉÂõ¥$(1 \\leqslant a \\leqslant b \\leqslant 10^{12}) ‰∏î (1 \\leqslant b - a \\leqslant 10^{6})$ Â¶ÇÊûúÁõ¥Êé•Êö¥ÂäõÔºå1e6*sqrt(1e12)ÁöÑÂ§çÊùÇÂ∫¶ÂÆåÂÖ®ÊâøÂèó‰∏ç‰∫Ü ÂèçËøáÊù•ÊÉ≥ÔºåÂ¶ÇÊûúÂØπ‰∫éÊØè‰∏™Êï∞$x \\in (0,10^6)$,Â¶ÇÊûúÂÆÉÊòØÂå∫Èó¥ÂÜÖÊüê‰∫õÊï∞ÁöÑÂõ†Êï∞ÔºåËÆ°ÁÆóÂÆÉÂØπÂå∫Èó¥ÂÜÖÂíåÁöÑË¥°ÁåÆÂç≥ÂèØ View Codec++ #include &lt;bits/stdc++.h&gt; using namespace std; #define PB push_back typedef long long ll; typedef pair&lt;int,int&gt; pii; const int maxn = 1e6+5; const int INF = 0x3f3f3f3f; ll l,r; int main() { cin&gt;&gt;l&gt;&gt;r; ll m=sqrt(r+0.5); ll ans=0; for(ll i=1;i&lt;=m;i++) { ll st=(l+(i-1))/i;//Âêë‰∏äÂèñÊï¥ //cout&lt;&lt;&quot;i:&quot;&lt;&lt;i&lt;&lt;&quot;st:&quot;&lt;&lt;st&lt;&lt;endl; for(ll j=st;j*i&lt;=r;j++) { if(j&gt;m) ans+=i+j;//cout&lt;&lt;&quot;* &quot;&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;j&lt;&lt;&quot; &quot;; else ans+=i;//cout&lt;&lt;&quot;** &quot;&lt;&lt;i&lt;&lt;&quot; &quot;; } //cout&lt;&lt;endl; } cout&lt;&lt;ans&lt;&lt;endl; return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"}],"tags":[],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"}]},{"title":"CF-1141E-Superhero Battle„ÄêÊï∞Â≠¶+ÁªÜËäÇ„Äë","slug":"cf-1141E","date":"2019-03-20T23:43:15.000Z","updated":"2019-03-20T15:55:18.113Z","comments":true,"path":"2019/03/21/cf-1141E/","link":"","permalink":"http://WigginsLi.github.io/2019/03/21/cf-1141E/","excerpt":"$\\implies$‰º†ÈÄÅÈó® ‰πçÁúã‰∏ãÊòØÊ∞¥È¢òÔºåÁªìÊûúwaÂæóÊé™‰∏çÂèäÈò≤","text":"$\\implies$‰º†ÈÄÅÈó® ‰πçÁúã‰∏ãÊòØÊ∞¥È¢òÔºåÁªìÊûúwaÂæóÊé™‰∏çÂèäÈò≤ Â§ßÊÑèÔºöÁªôÂá∫bossÁöÑË°ÄÈáèHÔºåÂπ∂ÁªôÂá∫ÊØè‰∏ÄÂõûÂêàÊâìÂá∫ÁöÑnËΩÆ‰º§ÂÆ≥(bossÂèØ‰ª•Âä†Ë°Ä)ÔºåÈóÆÂ§öÂ∞ëËΩÆÂêébossË¢´ÊâìË¥• ÂàÜÊûêÔºö ÂÆπÊòìÊÉ≥Âà∞ÔºåËÆ°ÁÆóÂá∫ÊØè‰∏ÄÂõûÂêàÊâìÂá∫ÁöÑÊÄª‰º§ÂÆ≥uÔºåÁî®HËÜúËøô‰∏™‰º§ÂÆ≥‰∏çÂ∞±Â•Ω‰∫Ü,‰ΩÜËøôÊ†∑‰ªçÊúâÂºäÁ´Ø Â≠òÂú®‰∏Ä‰∫õÊÉÖÂÜµÔºåÊØîÂ¶ÇÂú®ËÜúÂá∫Êù•ÁöÑ‰∏ä‰∏Ä‰∏™ÂõûÂêàbossÂ∑≤ÁªèË¢´ÊâìÊ≠ª‰∫Ü(Âõ†‰∏∫bossÂú®ÂêéÂçäÂõûÂêàË°•Ë°ÄÔºåÁúãËµ∑Êù•ÊÄª‰º§ÂÆ≥‰Ωé‰∫ÜÔºå‰ΩÜÂâçÈù¢ÁöÑ‰º§ÂÆ≥Ë∂≥‰ª•ÊâìÊ≠ª) ‰∏∫‰∫ÜËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÔºåÊàë‰ª¨ÂèñÂá∫‰∏ÄÂõûÂêà‰∏≠ËÉΩÂØπbossÈÄ†ÊàêÁöÑÊúÄÈ´ò‰º§ÂÆ≥m(Ë¥üÊï∞) ÈÇ£‰πàÂ∞±ÂèØ‰ª•Áî®(H+m)%uÂæóÂà∞bossË¢´ÊâìÊ≠ªÂâçÁöÑÂõûÂêàÔºå‰πãÂêéÂÜçÂæ™ÁéØÂá†Ê¨°ÂõûÂêàÂç≥ÂèØ ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; const int maxn = 2e5+5; const int INF=0x3f3f3f3f; ll H,n,d[maxn],u=0,ans=0,minn=INF; int main() { cin&gt;&gt;H&gt;&gt;n; for(int i=1;i&lt;=n;i++) { cin&gt;&gt;d[i]; u+=d[i]; minn=min(minn,u); if(H&gt;0) H+=d[i],ans++; } if(H&gt;0) { if(u&gt;=0) { puts(&quot;-1&quot;); return 0; }else { ll t=(H+minn)/(-u); H+=u*t; ans+=n*t; while(H&gt;0) { for(int i=1;i&lt;=n;i++) { ans++; H+=d[i]; if(H&lt;=0) { cout&lt;&lt;ans&lt;&lt;endl; return 0; } } } } }else { cout&lt;&lt;ans&lt;&lt;endl; } }","categories":[{"name":"Êï∞ËÆ∫","slug":"Êï∞ËÆ∫","permalink":"http://WigginsLi.github.io/categories/Êï∞ËÆ∫/"}],"tags":[{"name":"Êï∞Â≠¶","slug":"Êï∞Â≠¶","permalink":"http://WigginsLi.github.io/tags/Êï∞Â≠¶/"}],"keywords":[{"name":"Êï∞ËÆ∫","slug":"Êï∞ËÆ∫","permalink":"http://WigginsLi.github.io/categories/Êï∞ËÆ∫/"}]},{"title":"CF-1141F2-Same Sum Blocks (Hard)„ÄêÊï∞ÊçÆÁªìÊûÑ+Ë¥™ÂøÉ„Äë","slug":"cf-1141F2","date":"2019-03-20T23:42:56.000Z","updated":"2019-03-20T16:15:35.746Z","comments":true,"path":"2019/03/21/cf-1141F2/","link":"","permalink":"http://WigginsLi.github.io/2019/03/21/cf-1141F2/","excerpt":"$\\implies$‰º†ÈÄÅÈó® Â≠¶‰π†ÂØπ$map$ÁöÑÁÅµÊ¥ªÂ∫îÁî®","text":"$\\implies$‰º†ÈÄÅÈó® Â≠¶‰π†ÂØπ$map$ÁöÑÁÅµÊ¥ªÂ∫îÁî® Â§ßÊÑèÔºöÊ±ÇÊúÄÂ§öÁöÑ‰∏çÁõ∏‰∫§Âå∫Èó¥Ôºå‰ΩøÂÆÉ‰ª¨ÁöÑÂíåÁõ∏Á≠â$(n&lt;=2000)$ ÂàÜÊûêÔºö ÂÅáËÆæÊàë‰ª¨Áü•ÈÅìÂíå‰∏∫$a$Êó∂ÁöÑÂÖ®ÈÉ®Â∫èÂàó(ÂåÖÊã¨Áõ∏‰∫§ÁöÑ„ÄÅ‰∏çÁõ∏‰∫§ÁöÑ)ÔºåÈÇ£‰πàÂ¶Ç‰ΩïÈÄâÂá∫ÂΩìÂâçÁöÑÊúÄÂ§ö‰∏çÁõ∏‰∫§Â∫èÂàóÔºü Êàë‰ª¨Ë¥™ÂøÉÁöÑÁ≠ñÁï•ÊòØÔºöÈÄâÊã©ÊúÄÂâçÈù¢ÁöÑÂ∫èÂàóÔºåÁÑ∂Âêé‰æùÊ¨°ÈÄâÊã©‰∏ç‰∏éÂâç‰∏Ä‰∏™Â∫èÂàóÁõ∏‰∫§ÁöÑÂ∫èÂàóÔºåÂç≥ÂèØ(ÂèÇËÄÉ„ÄäÁ¥´‰π¶„Äã$P_{232}$) ÈÇ£‰πàÁé∞Âú®ÁöÑÈóÆÈ¢òÊòØÂ¶Ç‰ΩïÂæóÂà∞ÂÖ≥‰∫éÊØè‰∏™ÂÄº$a$ÁöÑÂÖ®ÈÉ®Â∫èÂàó Êàë‰ª¨ÂÆö‰πâ$map&lt;a,vector&lt;pair>>$ÔºåÂ∞Ü$a$ÁöÑÂÖ®ÈÉ®Â∫èÂàóÂ≠òÂÖ•$vector$‰∏≠ ÈÇ£‰πàÂè™È¢ÑÂ§ÑÁêÜÂá∫ÂâçÁºÄÂíåÔºåÁÑ∂Âêé$n^2$‰øùÂ≠òËøõ$vector$Âç≥ÂèØ $ps$:ÈôÑ‰∏äÁ•û‰ªô‰ª£Á†Å ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; #define VPII vector&lt;pair&lt;int,int&gt; &gt; const int maxn = 2e3; int n,x,s[maxn]; map&lt;int,VPII&gt; slr; int main() { scanf(&quot;%d&quot;,&amp;n); for(int i=1;i&lt;=n;i++) {cin&gt;&gt;x;s[i]+=s[i-1]+x;} for(int r=1;r&lt;=n;r++) { for(int l=1;l&lt;=r;l++) { slr[s[r]-s[l-1]].push_back(make_pair(l,r)); } } VPII ans; for(auto &amp;ele:slr) { VPII p=ele.second; int nowr=-1; VPII tmp; for(auto &amp;u:p) { if(u.first&gt;nowr) { nowr=u.second; tmp.push_back(u); } } if(tmp.size()&gt;ans.size()) { ans=tmp; } } cout&lt;&lt;ans.size()&lt;&lt;endl; for(auto &amp;e:ans) { cout&lt;&lt;e.first&lt;&lt;&quot; &quot;&lt;&lt;e.second&lt;&lt;endl; } return 0; } Á•û‰ªô‰ª£Á†ÅÔºö #include&lt;bits/stdc++.h&gt; using namespace std; #define rep(i,a,b) for(int i=(a);i&lt;=(b);++i) #define MP make_pair #define PB push_back #define VPII vector&lt;pair&lt;int,int&gt;&gt; int n,x,s[1510]; unordered_map&lt;int, VPII&gt; slr; int main() { scanf(&quot;%d&quot;,&amp;n);s[0]=0; rep(i,1,n)scanf(&quot;%d&quot;,&amp;x),s[i]=s[i-1]+x; rep(r,1,n)rep(l,1,r) slr[s[r]-s[l-1]].PB(MP(r,l)); VPII ans; for(auto &amp;ele:slr){ VPII lr = ele.second; int nowr=-1; VPII tmp; for(auto x:lr)if(x.second&gt;nowr){ tmp.PB(x);nowr=x.first; } if(tmp.size()&gt;ans.size()) ans = tmp; } printf(&quot;%d\\n&quot;,ans.size()); for(auto x:ans) printf(&quot;%d %d\\n&quot;, x.second, x.first); } unordered_mapÊØîmapÊõ¥ÈÄÇÂêàÊü•ÊâæÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫O(1)","categories":[{"name":"Êï∞ÊçÆÁªìÊûÑ","slug":"Êï∞ÊçÆÁªìÊûÑ","permalink":"http://WigginsLi.github.io/categories/Êï∞ÊçÆÁªìÊûÑ/"},{"name":"Ë¥™ÂøÉ","slug":"Ë¥™ÂøÉ","permalink":"http://WigginsLi.github.io/categories/Ë¥™ÂøÉ/"}],"tags":[{"name":"map","slug":"map","permalink":"http://WigginsLi.github.io/tags/map/"}],"keywords":[{"name":"Êï∞ÊçÆÁªìÊûÑ","slug":"Êï∞ÊçÆÁªìÊûÑ","permalink":"http://WigginsLi.github.io/categories/Êï∞ÊçÆÁªìÊûÑ/"},{"name":"Ë¥™ÂøÉ","slug":"Ë¥™ÂøÉ","permalink":"http://WigginsLi.github.io/categories/Ë¥™ÂøÉ/"}]},{"title":"CF-414B-Mashmokh and ACM„ÄêDP„Äë","slug":"cf414B","date":"2019-03-20T22:39:44.000Z","updated":"2019-03-20T15:17:04.355Z","comments":true,"path":"2019/03/21/cf414B/","link":"","permalink":"http://WigginsLi.github.io/2019/03/21/cf414B/","excerpt":"$\\implies$ ‰º†ÈÄÅÈó® ÁÆÄÂçïdpÔºåÂ≠¶‰∏Ä‰∏ãÂ•óË∑Ø","text":"$\\implies$ ‰º†ÈÄÅÈó® ÁÆÄÂçïdpÔºåÂ≠¶‰∏Ä‰∏ãÂ•óË∑Ø Â§ßÊÑèÔºöÁªôÂÆö$n,k$,Ê±ÇÊª°Ë∂≥Êù°‰ª∂ÁöÑÈïøÂ∫¶‰∏∫$k$ÁöÑÂ∫èÂàóÊï∞ÈáèÔºåÊù°‰ª∂ÊòØ$[1Ôºån]$‰∏™Êï∞Â≠óÁöÑÁªÑÂêàÔºåË¶ÅÊ±ÇÂêé‰∏Ä‰∏™Êï∞Â≠óÂèØ‰ª•Êï¥Èô§Ââç‰∏Ä‰∏™Êï∞Â≠ó ÂàÜÊûêÔºö ÂÆö‰πâ$f[len][n]$Ë°®Á§∫ÈïøÂ∫¶‰∏∫$len$ÁöÑÊúÄÂêé‰∏Ä‰Ωç‰∏∫$n$ÁöÑÂ∫èÂàóÊï∞ ÂØπ‰∫éÊúÄÂêé‰∏Ä‰Ωç‰πãÂâçÁöÑÁä∂ÊÄÅÈÉΩÊòØÁ°ÆÂÆöÁöÑ ÈÇ£‰πàÂæóÂà∞ËΩ¨ÁßªÊñπÁ®ã$f[len][n]+=f[len-1][k]\\,\\,\\,\\,(n\\%k==0)$ Â¶ÇÊûúÊö¥ÂäõÂá∫kÁöÑËØùÈúÄË¶Å$n^3$ÔºåÊó∂Èó¥‰∏äÊâøÂèó‰∏ç‰∫ÜÔºåÊàëÁöÑÂäûÊ≥ïÊòØÂÖàÁî®$n^2$È¢ÑÂ§ÑÁêÜÂá∫kÂ≠òËµ∑Êù•ÈÇ£‰πàÊúÄÂêéÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫$n^2*count(k)$ ÁúãÂà´‰∫∫‰ª£Á†ÅÊó∂ÂèëÁé∞ÂèØ‰ª•Âú®ËΩ¨ÁßªÊó∂Áî±$len$ËΩ¨ÁßªÂà∞$len+1$ÔºåËøôÊ†∑Â∞±‰∏çÈúÄË¶ÅÈ¢ÑÂ§ÑÁêÜÔºåÁõ¥Êé•ÂÄçÂ¢ûÂÅö ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; const int mod=1e9+7; int f[2005][2005],n,k; vector&lt;int&gt; cut[2005]; int main() { cin&gt;&gt;n&gt;&gt;k; for(int i=1;i&lt;=n;i++) f[1][i]=1; for(int i=1;i&lt;=n;i++) { for(int j=1;j&lt;=i;j++) { if(i%j==0) cut[i].push_back(j); } } for(int len=2;len&lt;=k;len++) { for(int i=1;i&lt;=n;i++) { for(int j=0;j&lt;cut[i].size();j++) { f[len][i]+=f[len-1][cut[i][j]]; f[len][i]%=mod; } } } int ans=0; for(int i=1;i&lt;=n;i++) { ans+=f[k][i]; ans%=mod; } cout&lt;&lt;ans&lt;&lt;endl; return 0; } Âè¶‰∏ÄÁßçÂÜôÊ≥ïÔºö #include&lt;bits/stdc++.h&gt; using namespace std; #define ll long long #define mod 1000000007 ll n,k,f[3000][3000]; int main() { //freopen(&quot;input.in&quot;,&quot;r&quot;,stdin); cin&gt;&gt;n&gt;&gt;k; for(int j=1;j&lt;=n;j++)f[1][j]=1; for(int i=1;i&lt;k;i++) { for(int j=1;j&lt;=n;j++) { for(int k=j;k&lt;=n;k+=j)f[i+1][k]+=f[i][j],f[i+1][k]%=mod; } } ll ans=0; for(int i=1;i&lt;=n;i++)ans=(ans+f[k][i])%mod; cout&lt;&lt;ans&lt;&lt;endl; return 0; }","categories":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}],"tags":[{"name":"dp","slug":"dp","permalink":"http://WigginsLi.github.io/tags/dp/"}],"keywords":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}]},{"title":"hdu-6470-Count„ÄêÁü©ÈòµÂø´ÈÄüÂπÇ+‰∫åÈ°πÂºèÂÆöÁêÜ„Äë","slug":"hdu-6470","date":"2019-03-18T23:26:52.000Z","updated":"2019-05-05T16:58:33.874Z","comments":true,"path":"2019/03/19/hdu-6470/","link":"","permalink":"http://WigginsLi.github.io/2019/03/19/hdu-6470/","excerpt":"$\\implies$‰º†ÈÄÅÈó® Âä†Ê∑±‰∫ÜÂØπÁü©ÈòµÂø´ÈÄüÂπÇÁöÑÁêÜËß£","text":"$\\implies$‰º†ÈÄÅÈó® Âä†Ê∑±‰∫ÜÂØπÁü©ÈòµÂø´ÈÄüÂπÇÁöÑÁêÜËß£ Â§ßÊÑèÔºö$Â∑≤Áü•F(n)=2\\times F(n-2)+F(n-1)+n^3,Ê±ÇF(n)mod123456789$ ÂàÜÊûêÔºö Â¶ÇÊûúÂè™ÊòØÊôÆÈÄöÁöÑÈÄíÊé®ÂºèÔºåÈÇ£‰πàÁõ¥Êé•Â•óÁü©ÈòµÂø´ÈÄüÂπÇÊ®°ÊùøÂ∞±ÂèØ‰ª•‰∫ÜÔºå‰ΩÜÁé∞Âú®Êúâ$n^3$Ëøô‰∏ÄÈ°π ËÄÉËôëÂà∞‰∫åÈ°πÂºèÂÆöÁêÜÔºö$n^3=(n-1+1)^3=(n-1)^3+3\\cdot(n-1)^2+3\\cdot(n-1)+1$ ÈÇ£‰πàÂèØ‰ª•ÊûÑÈÄ†Áü©ÈòµÔºö $$ \\begin{bmatrix} F(n-1) \\\\ F(n) \\\\ n^3 \\\\ n^2 \\\\ n \\\\ 1 \\\\ \\end{bmatrix} = \\begin{bmatrix} 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\ 2 &amp; 1 &amp; 1 &amp; 3 &amp; 3 &amp; 1 \\\\ 0 &amp; 0 &amp; 1 &amp; 3 &amp; 3 &amp; 1 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 &amp; 2 &amp; 1 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\\\ \\end{bmatrix} \\cdot \\begin{bmatrix} F(n-2) \\\\ F(n-1) \\\\ (n-1)^3 \\\\ (n-1)^2 \\\\ (n-1) \\\\ 1 \\\\ \\end{bmatrix}$$ Áü©ÈòµÂø´ÈÄüÂπÇÁöÑÂÖ≥ÈîÆÂ∞±ÊòØÊûÑÈÄ†nËøô‰∏ÄÈ°πÂíåÂâçÈù¢Âá†È°πÁöÑÂÖ≥Á≥ªÔºåÂæóÂà∞ÈÄíÊé®ÂºèÔºåÂæóÂà∞Áü©Èòµ$\\implies$ AC „Éæ(‚óç¬∞‚àá¬∞‚óç)ÔæâÔæûÁªßÁª≠Âä™ÂäõÂè≠ ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; const int mod=123456789; struct martix{ ll mo[7][7]; martix() { memset(mo,0,sizeof(mo)); } }; martix g,m; martix mul(martix a,martix b) { martix c; for(int i=0;i&lt;6;i++) { for(int j=0;j&lt;6;j++) { for(int k=0;k&lt;6;k++) { c.mo[i][j]=(c.mo[i][j]+a.mo[i][k]*b.mo[k][j])%mod; } } } return c; } martix powmo(martix a,ll n) { martix T; for(int i=0;i&lt;6;i++) { T.mo[i][i]=1; } while(n) { if(n&amp;1) T=mul(T,a); n&gt;&gt;=1; a=mul(a,a); } return T; } int main() { g.mo[0][1] = 1; g.mo[1][0] = 2; g.mo[1][2] = g.mo[1][1] = 1; g.mo[1][3] = g.mo[1][4] = 3; g.mo[1][5] = g.mo[2][2] = 1; g.mo[2][3] = g.mo[2][4] = 3; g.mo[2][5] = g.mo[3][3] = 1; g.mo[3][4] = 2; g.mo[3][5] = g.mo[4][4] = g.mo[4][5] = g.mo[5][5] = 1; m.mo[0][0] = 1; m.mo[1][0] = 2; m.mo[2][0] = 8; m.mo[3][0] = 4; m.mo[4][0] = 2; m.mo[5][0] = 1; ll T,n; cin&gt;&gt;T; while(T--) { cin&gt;&gt;n; martix ans=powmo(g,n-2); ans=mul(ans,m); cout&lt;&lt;ans.mo[1][0]&lt;&lt;endl; } return 0; }","categories":[{"name":"ÁªÑÂêàÊï∞Â≠¶","slug":"ÁªÑÂêàÊï∞Â≠¶","permalink":"http://WigginsLi.github.io/categories/ÁªÑÂêàÊï∞Â≠¶/"}],"tags":[{"name":"Áü©ÈòµÂø´ÈÄüÂπÇ","slug":"Áü©ÈòµÂø´ÈÄüÂπÇ","permalink":"http://WigginsLi.github.io/tags/Áü©ÈòµÂø´ÈÄüÂπÇ/"},{"name":"‰∫åÈ°πÂºèÂÆöÁêÜ","slug":"‰∫åÈ°πÂºèÂÆöÁêÜ","permalink":"http://WigginsLi.github.io/tags/‰∫åÈ°πÂºèÂÆöÁêÜ/"}],"keywords":[{"name":"ÁªÑÂêàÊï∞Â≠¶","slug":"ÁªÑÂêàÊï∞Â≠¶","permalink":"http://WigginsLi.github.io/categories/ÁªÑÂêàÊï∞Â≠¶/"}]},{"title":"hdu-6467ÁÆÄÂçïÊï∞Â≠¶È¢ò„ÄêÊï∞ËÆ∫/ÁªÑÂêàÊï∞Â≠¶„Äë","slug":"hdu-6467","date":"2019-03-18T21:56:02.000Z","updated":"2019-03-18T15:17:06.077Z","comments":true,"path":"2019/03/19/hdu-6467/","link":"","permalink":"http://WigginsLi.github.io/2019/03/19/hdu-6467/","excerpt":"$\\implies$HDU‰º†ÈÄÅÈó® Êé®ÂºèÂ≠êÈ¢òÔºåËµõÂú∫‰∏äÊ≤°Êé®Âá∫Êù•ÔºåÂ≠¶‰π†Â≠¶‰π†","text":"$\\implies$HDU‰º†ÈÄÅÈó® Êé®ÂºèÂ≠êÈ¢òÔºåËµõÂú∫‰∏äÊ≤°Êé®Âá∫Êù•ÔºåÂ≠¶‰π†Â≠¶‰π† È¢òÊÑè:Ê±Ç$$F(n) = \\sum_{i=1}^n (i \\times \\sum_{j=i}^n C_j^i)$$$mod\\,1000000007$ Á¨¨‰∏ÄÁßçÊñπÊ≥ïÔºö ËøêÁî®Èîô‰ΩçÁõ∏ÂáèÊ≥ïÔºåÊúâ$$F(n)=1\\cdot2^0+\\cdots+n\\cdot2^{n-1}\\,(1) \\\\ 2\\cdot F(n)=1\\cdot2^1+\\cdots+n\\cdot2^{n}\\,(2)$$ $ (1)-(2): $ $$ -F(n)=(1-n)\\cdot2^n-1 \\\\ \\therefore F(n)=1+(n-1)\\cdot2^n$$ Á¨¨‰∫åÁßçÊñπÊ≥ïÔºöÊääÂºèÂ≠êÂ±ïÂºÄÂæóÔºå$F(n)=$$1\\cdot(C_1^1+\\cdots+C_n^1) \\\\ + 2\\cdot(C_2^2+\\cdots+C_n^2) \\\\ \\cdots \\\\ +n\\cdot C_n^n$ Áî±Êù®Ëæâ‰∏âËßíÁöÑÊÄßË¥®(ÂèØ‰ª•ÁîªÂá∫Âõæ(Âú®‰∏ãÈù¢)Êù•ÁêÜËß£)Ôºö$F(n)=1 \\cdot C_{n+1}^2+\\cdots +n\\cdot C_{n+1}^{n+1} \\\\ \\implies \\sum_{i=1}^n i\\cdot C_{n+1}^{i+1} \\\\ \\implies \\sum_{i=1}^n (i+1)\\cdot C_{n+1}^{i+1}-\\sum_{i=1}^n C_{n+1}^{i+1} \\\\ \\implies (n+1)\\sum_{i=1}^n C_{n}^i-(2^{n+1}-(n+1)-1) \\\\ \\implies (n+1)(2^n-1)-(2^{n+1}-(n+1)-1) \\\\ \\implies (n-1)\\cdot 2^n +1$ ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; #define MOD 1000000007 typedef long long ll; ll n; ll ksm(ll a,ll b) { if(b==0) return 1; ll cnt=1; cnt=ksm(a,b/2)%MOD; cnt=cnt*cnt%MOD; if(b&amp;1) cnt=cnt*a%MOD; return cnt; } int main() { while(cin&gt;&gt;n) cout&lt;&lt;(((n-1)%MOD)*ksm(2,n)%MOD+1)%MOD&lt;&lt;endl; return 0; }","categories":[{"name":"Êï∞ËÆ∫","slug":"Êï∞ËÆ∫","permalink":"http://WigginsLi.github.io/categories/Êï∞ËÆ∫/"},{"name":"ÁªÑÂêàÊï∞Â≠¶","slug":"ÁªÑÂêàÊï∞Â≠¶","permalink":"http://WigginsLi.github.io/categories/ÁªÑÂêàÊï∞Â≠¶/"}],"tags":[{"name":"Êé®ÂºèÂ≠ê","slug":"Êé®ÂºèÂ≠ê","permalink":"http://WigginsLi.github.io/tags/Êé®ÂºèÂ≠ê/"}],"keywords":[{"name":"Êï∞ËÆ∫","slug":"Êï∞ËÆ∫","permalink":"http://WigginsLi.github.io/categories/Êï∞ËÆ∫/"},{"name":"ÁªÑÂêàÊï∞Â≠¶","slug":"ÁªÑÂêàÊï∞Â≠¶","permalink":"http://WigginsLi.github.io/categories/ÁªÑÂêàÊï∞Â≠¶/"}]},{"title":"Ê¨ßÊãâÂÆöÁêÜÂàùËØÜ‰∏éÂ∫îÁî®","slug":"eulerdlksm","date":"2019-03-18T12:58:28.000Z","updated":"2019-05-27T12:52:16.813Z","comments":true,"path":"2019/03/18/eulerdlksm/","link":"","permalink":"http://WigginsLi.github.io/2019/03/18/eulerdlksm/","excerpt":"‰∏äÊ¨°ÊâìgzuÊ†°ËµõÊó∂Á¢∞Âà∞‰∫Ü‰∏ÄÈÅìÂ§ßÊï¥Êï∞ÂπÇÂèñÊ®°ÁöÑÈ¢òËµõÂêéÂæóÁü•ÊòØÊ¨ßÊãâÂÆöÁêÜÔºåÂΩìÂú∫ÊáµÈÄºÔºåËµ∂Á¥ßË°•‰∏Ä‰∏ãÁü•ËØÜÈù¢","text":"‰∏äÊ¨°ÊâìgzuÊ†°ËµõÊó∂Á¢∞Âà∞‰∫Ü‰∏ÄÈÅìÂ§ßÊï¥Êï∞ÂπÇÂèñÊ®°ÁöÑÈ¢òËµõÂêéÂæóÁü•ÊòØÊ¨ßÊãâÂÆöÁêÜÔºåÂΩìÂú∫ÊáµÈÄºÔºåËµ∂Á¥ßË°•‰∏Ä‰∏ãÁü•ËØÜÈù¢ Ê¨ßÊãâÂÆöÁêÜÂÖàÁªôÂá∫Ê¨ßÊãâÂÆöÁêÜÁöÑ‰∏ÄËà¨Âºè(ËØÅÊòéÁßªÊ≠•ÁôæÁßë)(~ÂÖ∂ÂÆûËøòÊòØÁª¥Âü∫ËÆ≤ÂæóÂ•ΩÔºåÊúâÊù°‰ª∂ÂèØ‰ª•ÁúãÁúã~) ÂØπÊ≠£Êï¥Êï∞$a,N$,Ëã•$gcd(a,N)=1$,ÂàôÊúâ$$ a^{\\varphi (N)} \\equiv 1(mod\\,N)$$ÂÖ∂‰∏≠$$\\varphi (N)=N\\cdot \\prod_{p \\mid N}\\left(\\frac{p-1}{p}\\right)$$Ê¨ßÊãâÂáΩÊï∞$\\varphi (N)$Ë°®Á§∫Â∞è‰∫éÊàñÁ≠â‰∫é$N$ÁöÑÊ≠£Êï¥Êï∞‰∏≠‰∏é$N$‰∫íË¥®ÁöÑÊï∞ÁöÑ‰∏™Êï∞ Ê¨ßÊãâÂáΩÊï∞ÊÄßË¥®Ôºö$\\varphi (1)=1$$\\varphi (p^k)=p^k-p^{k-1}=(p-1)\\cdotp^{k-1}$$\\varphi (mn)=\\varphi (m)\\cdot\\varphi(n)$ ,ÂÖ∂‰∏≠$gcd(m,n)=1$ ÁâπÊÆäÁöÑÔºåÂΩì$N$‰∏∫Ë¥®Êï∞Êó∂,$\\varphi (N)=N-1$,Êúâ$$ a^{N-1} \\equiv 1(mod\\,N) $$Âç≥Ë¥πÈ©¨Â∞èÂÆöÁêÜÊòØÊ¨ßÊãâÂÆöÁêÜÁöÑÊé®Âπø Â∫îÁî®Ôºö1. Ê±ÇÈÄÜÂÖÉ 2.ÁÆÄÂåñÂπÇËøêÁÆó Â∫îÁî® Ê±Ç$a^b\\,mod\\,m$ÔºåbËææÂà∞100000‰ΩçÔºåm&lt;1e6 $$ a^b\\,mod\\,m=a^{\\varphi(m)\\cdot r+s}\\,mod\\,m \\\\ \\implies ((a^{\\varphi(m)})^rmod\\,m\\cdot a^s\\,mod\\,m)\\,mod\\,m \\\\ \\implies a^s\\,mod\\,m $$","categories":[{"name":"Êï∞ËÆ∫","slug":"Êï∞ËÆ∫","permalink":"http://WigginsLi.github.io/categories/Êï∞ËÆ∫/"}],"tags":[{"name":"Ê¨ßÊãâ","slug":"Ê¨ßÊãâ","permalink":"http://WigginsLi.github.io/tags/Ê¨ßÊãâ/"},{"name":"Âø´ÈÄüÂπÇ","slug":"Âø´ÈÄüÂπÇ","permalink":"http://WigginsLi.github.io/tags/Âø´ÈÄüÂπÇ/"},{"name":"Ë¥πÈ©¨Â∞èÂÆöÁêÜ","slug":"Ë¥πÈ©¨Â∞èÂÆöÁêÜ","permalink":"http://WigginsLi.github.io/tags/Ë¥πÈ©¨Â∞èÂÆöÁêÜ/"}],"keywords":[{"name":"Êï∞ËÆ∫","slug":"Êï∞ËÆ∫","permalink":"http://WigginsLi.github.io/categories/Êï∞ËÆ∫/"}]},{"title":"USACO-Team Tic Tac Toe„ÄêÊö¥Âäõ„Äë","slug":"rating-3-C","date":"2019-03-16T11:45:25.000Z","updated":"2019-03-16T12:00:48.341Z","comments":true,"path":"2019/03/16/rating-3-C/","link":"","permalink":"http://WigginsLi.github.io/2019/03/16/rating-3-C/","excerpt":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$USACO‰º†ÈÄÅÈó® ËÄÉÂØüÁªÜËäÇ","text":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$USACO‰º†ÈÄÅÈó® ËÄÉÂØüÁªÜËäÇ Â§ßÊÑèÔºöÁªô‰∏Ä‰∏™‰∫ïÂ≠óÊ£ãÁöÑÊ£ãÁõòÔºåÂà§Êñ≠ÊòØÂê¶ÊúâÂ§öÂ∞ëÁâõÊàêÂäüËøûÊàê‰∏ÄÊù°Á∫øÔºåÊàñËÄÖÊúâ‰∏§‰∏™ÁâõÁªÑÊàê‰∏ÄÈòüÔºåÊúâÂ§öÂ∞ëÈòüÁªÑÊàê‰∏ÄÊù°Á∫ø ÂàÜÊûêÔºö Áõ¥Êé•Ê®°ÊãüÊö¥ÂäõÂ∞±Â•ΩÂï¶(ÂºÄÂßãWa‰∫Ü‰∏ÄÂèëÂõ†‰∏∫Ê≤°ÊúâÂà§Êñ≠ËøôÊîØÈòü‰ºçÊòØ‰∏çÊòØÂ∑≤ÁªèÁªüËÆ°Ëøá‰∫Ü) ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; string s[3]; vector&lt;char&gt; v; map&lt;char,int&gt; m; map&lt;char,int&gt; vt1; map&lt;pair&lt;char,char&gt;,int&gt; vt2; int main() { for(int i=0;i&lt;3;i++) { cin&gt;&gt;s[i]; } int cnt=0,ans1=0,ans2=0; for(int i=0;i&lt;3;i++) { cnt=0; m.clear(); for(int j=0;j&lt;3;j++) { if(m.count(s[i][j])==0) { m[s[i][j]]=1; cnt++; } } //cout&lt;&lt;cnt&lt;&lt;endl; if(cnt==1) {if(vt1.count(s[i][0])==0) ans1++,vt1[s[i][0]]=1;} else if(cnt==2) { string s2=s[i]; sort(s2.begin(),s2.end()); char a = s2[0]; char b; if(s2[0]!=s2[1]) b=s2[1]; else b=s2[2]; //cout&lt;&lt;i&lt;&lt;a&lt;&lt;&quot; &quot;&lt;&lt;b&lt;&lt;endl; if(vt2.count(make_pair(a,b))==0) vt2[make_pair(a,b)]=1,ans2++; } } for(int j=0;j&lt;3;j++) { cnt=0; m.clear(); for(int i=0;i&lt;3;i++) { if(m.count(s[i][j])==0) { m[s[i][j]]=1; cnt++; } } //cout&lt;&lt;cnt&lt;&lt;endl; if(cnt==1) {if(vt1.count(s[0][j])==0) ans1++,vt1[s[0][j]]=1;} else if(cnt==2) { char a=s[0][j]; char b; if(a!=s[1][j]) b=s[1][j]; else b=s[2][j]; if(a&gt;b) swap(a,b); //cout&lt;&lt;a&lt;&lt;&quot; &quot;&lt;&lt;b&lt;&lt;endl; if(vt2.count(make_pair(a,b))==0) vt2[make_pair(a,b)]=1,ans2++; } } cnt=0; m.clear(); for(int i=0,j=0;i&lt;3;i++,j++) { if(m.count(s[i][j])==0) { m[s[i][j]]=1; cnt++; } } //cout&lt;&lt;cnt&lt;&lt;endl; if(cnt==1) {if(vt1.count(s[1][1])==0) ans1++,vt1[s[1][1]]=1;} else if(cnt==2) { char a=s[0][0]; char b; if(a!=s[1][1]) b=s[1][1]; else b=s[2][2]; if(a&gt;b) swap(a,b); //cout&lt;&lt;a&lt;&lt;&quot; &quot;&lt;&lt;b&lt;&lt;endl; if(vt2.count(make_pair(a,b))==0) vt2[make_pair(a,b)]=1,ans2++; } cnt=0; m.clear(); for(int i=0,j=2;i&lt;3;i++,j--) { if(m.count(s[i][j])==0) { m[s[i][j]]=1; cnt++; } } //cout&lt;&lt;cnt&lt;&lt;endl; if(cnt==1) {if(vt1.count(s[1][1])==0) ans1++,vt1[s[1][1]]=1;} else if(cnt==2) { char a=s[0][2]; char b; if(a!=s[1][1]) b=s[1][1]; else b=s[2][0]; if(a&gt;b) swap(a,b); //cout&lt;&lt;a&lt;&lt;&quot; &quot;&lt;&lt;b&lt;&lt;endl; if(vt2.count(make_pair(a,b))==0) vt2[make_pair(a,b)]=1,ans2++; } cout&lt;&lt;ans1&lt;&lt;endl; cout&lt;&lt;ans2&lt;&lt;endl; return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Êö¥Âäõ","slug":"Êö¥Âäõ","permalink":"http://WigginsLi.github.io/categories/Êö¥Âäõ/"}],"tags":[{"name":"Êö¥Âäõ","slug":"Êö¥Âäõ","permalink":"http://WigginsLi.github.io/tags/Êö¥Âäõ/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Êö¥Âäõ","slug":"Êö¥Âäõ","permalink":"http://WigginsLi.github.io/categories/Êö¥Âäõ/"}]},{"title":"USACO18OPEN-Out of Sorts G„ÄêÊÄùÁª¥„Äë","slug":"rating-3-F","date":"2019-03-16T11:05:58.000Z","updated":"2019-03-16T03:37:06.822Z","comments":true,"path":"2019/03/16/rating-3-F/","link":"","permalink":"http://WigginsLi.github.io/2019/03/16/rating-3-F/","excerpt":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® out of sortÁ≥ªÂàóÁ¨¨‰∫åÈ¢ò","text":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® out of sortÁ≥ªÂàóÁ¨¨‰∫åÈ¢ò Â§ßÊÑèÔºöÂú®out of sort SÁöÑÂü∫Á°Ä‰∏äÔºåÊØèÊ¨°ËøõË°åÂÜíÊ≥°ÂêéÔºåÂÜçËøõË°å‰∏ÄÊ¨°ÂèçÂêëÂÜíÊ≥°,Ê±ÇmooÊ¨°Êï∞ sorted = false while (not sorted): sorted = true moo for i = 0 to N-2: if A[i+1] &lt; A[i]: swap A[i], A[i+1] for i = N-2 downto 0: if A[i+1] &lt; A[i]: swap A[i], A[i+1] for i = 0 to N-2: if A[i+1] &lt; A[i]: sorted = false ÂàÜÊûêÔºö È¶ñÂÖàÊàë‰ª¨ÂÖàÊåâÊéíÂ•ΩÂ∫èÂêéÁöÑ‰ΩçÁΩÆÁªô$N$‰∏™Êï∞Á¶ªÊï£ÂåñÊàêtaÁöÑÂÄºÔºåÊØîÂ¶Ç1 8 5 3 2$\\implies$ 1 5 4 3 2 ÂÜçÊ®°Êãü‰∏Ä‰∏ãËøô‰∏™ÂèåÂêëÂÜíÊ≥°ËøáÁ®ãÔºåÂèØ‰ª•ÂèëÁé∞ÂØπ‰∫éÊØè‰∏™ $i$ÂêëÂêéÊâ´‰ºö‰øùËØÅÊää‰∏Ä‰∏™Âú®ÂâçÈù¢ÁöÑ$ÂÄº^{(1)}$ &gt; $i$ÁöÑÊï∞ÁßªÂà∞ÂêéÈù¢ÂêëÂ∑¶Êâ´‰ºö‰øùËØÅË¢´Êç¢Âà∞ $i$ ÂâçÈù¢ÁöÑÊï∞ÁöÑÂÄº $\\leq$ $i$ ÈÇ£‰πàÊàë‰ª¨Âè™ÈúÄË¶ÅÂèñÊúÄÂ§ßÁöÑÔºåÊØè‰∏™Êï∞ÂâçÈù¢ÊúâÂá†‰∏™Êï∞ÁöÑÂÄºÊØîtaÁöÑÂ§ßÁöÑÊï∞ÔºåÂç≥ÂèØ (1):Ê≠§ÂêéÁöÑÂÄºÂùáÂÄºÁ¶ªÊï£ÂêéÁöÑÂÄº ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; const int N=1e5+5; struct data { int val,num; friend bool operator &lt;(data x,data y){return x.val&lt;y.val;} }a[N]; int n,ans=1,cnt; int vis[N]; int main() { scanf(&quot;%d&quot;,&amp;n); for(int i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;a[i].val),a[i].num=i; sort(a+1,a+n+1); for(int i=1;i&lt;=n;i++) { if(i&lt;a[i].num) cnt++; if(vis[i]) cnt--; vis[a[i].num]=true; ans=max(ans,cnt); } printf(&quot;%d&quot;,ans); } ÂêéËÆ∞ÔºöÁé∞Âú®ÂÅöÊÄùÁª¥È¢òÊØîËæÉÁúãËøêÊ∞îÔºåxjbÊÉ≥ÔºåÊ≤°ÊúâÊØîËæÉËßÑËåÉÁöÑÂàÜÊûêËøáÁ®ãÔºàËØ•Êâì","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"ÊÄùÁª¥","slug":"ÊÄùÁª¥","permalink":"http://WigginsLi.github.io/categories/ÊÄùÁª¥/"}],"tags":[{"name":"ÊÄùÁª¥","slug":"ÊÄùÁª¥","permalink":"http://WigginsLi.github.io/tags/ÊÄùÁª¥/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"ÊÄùÁª¥","slug":"ÊÄùÁª¥","permalink":"http://WigginsLi.github.io/categories/ÊÄùÁª¥/"}]},{"title":"USACO18OPEN-Out of Sorts S„ÄêÊÄùÁª¥„Äë","slug":"rating-3-A","date":"2019-03-16T10:49:17.000Z","updated":"2019-03-16T03:13:21.153Z","comments":true,"path":"2019/03/16/rating-3-A/","link":"","permalink":"http://WigginsLi.github.io/2019/03/16/rating-3-A/","excerpt":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® out of sortÁ≥ªÂàóÁ¨¨‰∏ÄÈ¢ò","text":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® out of sortÁ≥ªÂàóÁ¨¨‰∏ÄÈ¢ò Â§ßÊÑèÔºöÁªôÂá∫$N$‰∏™Êï∞ÔºåÊ±ÇÂÜíÊ≥°ÊéíÂ∫èËøáÁ®ãÊéíÂ∫èÊú™ÂÆåÊàêÊó∂ËøõË°å‰∫ÜÂ§öÂ∞ëÊ¨°Á¨¨2Â±ÇÂæ™ÁéØÔºåÂç≥ËøêË°å‰∫ÜÂ§öÂ∞ëÊ¨°moo(ËßâÂæóÊÑèÊÄù‰∏çÊ∏ÖÊ•öÁöÑÁõ¥Êé•ÁúãÊ¥õË∞∑Âè≠) sorted = false while (not sorted): sorted = true moo for i = 0 to N-2: if A[i+1] &lt; A[i]: swap A[i], A[i+1] sorted = false ÂàÜÊûêÔºö Ê®°Êãü‰∏Ä‰∏ãÂÜíÊ≥°ÊéíÂ∫èÁöÑËøáÁ®ãÔºåÂèØ‰ª•ÂèëÁé∞ÊØèËøõË°å‰∏ÄÊ¨°Á¨¨‰∫åÂ±ÇÂæ™ÁéØÔºåÂ∞èÁöÑ$Êï∞^{(1)}$Â∞±‰ºöÂêëÂ∑¶‰∏ÄÊ†ºÔºåÂ§ßÁöÑÊï∞Âç¥‰∏ç‰∏ÄÂÆöÂè™ÊòØÂêëÂè≥‰∏ÄÊ†º ÊâÄ‰ª•Êàë‰ª¨Âè™Ë¶ÅÂèñÁ¶ªÊéíÂ∫èÂ•ΩÁöÑ‰ΩçÁΩÆÊúÄËøúÁöÑÂêéÈù¢ÁöÑÂ∞èÁöÑÊï∞ÔºåÂç≥‰∏∫Á≠îÊ°à (1):Âç≥ÁªôÂá∫ÁöÑËøô‰∏™Êï∞ÁöÑ‰ΩçÁΩÆÂíåÊéíÂ∫èÂ•ΩÂêéÁöÑ‰ΩçÁΩÆÊØîËæÉÂú®ÂêéËæπÁöÑÊï∞,ÊØîÂ¶Ç1,3,2,4ÔºõÊéíÂ•ΩÊòØ1,2,3,4ÔºõÈÇ£Ëøô‰∏™2Â∞±ÊòØÂ∞èÁöÑÊï∞ ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; const int maxn = 1e5+5; struct Node{ int w,id; }a[maxn]; int n; bool cmp(const Node &amp;a,const Node &amp;b) { return a.w&lt;b.w; } int main() { cin&gt;&gt;n; for(int i=1;i&lt;=n;i++) {cin&gt;&gt;a[i].w;a[i].id=i;} stable_sort(a+1,a+n+1,cmp); int ans=0; for(int i=1;i&lt;=n;i++) { ans=max(ans,a[i].id-i); } cout&lt;&lt;ans+1&lt;&lt;endl; return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"ÊÄùÁª¥","slug":"ÊÄùÁª¥","permalink":"http://WigginsLi.github.io/categories/ÊÄùÁª¥/"}],"tags":[{"name":"ÊÄùÁª¥","slug":"ÊÄùÁª¥","permalink":"http://WigginsLi.github.io/tags/ÊÄùÁª¥/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"ÊÄùÁª¥","slug":"ÊÄùÁª¥","permalink":"http://WigginsLi.github.io/categories/ÊÄùÁª¥/"}]},{"title":"USACO18FEB-Snow Boots S„ÄêÁ∫øÊÄßdp„Äë","slug":"rating-2-G","date":"2019-03-16T09:43:22.000Z","updated":"2019-03-16T03:41:20.534Z","comments":true,"path":"2019/03/16/rating-2-G/","link":"","permalink":"http://WigginsLi.github.io/2019/03/16/rating-2-G/","excerpt":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® ÂèàÊòØ‰∏ÄÈÅìÊØîËæÉÁÆÄÂçïÁöÑdpÔºå‰ΩÜÊòØËµõÂú∫‰∏äËøòÊòØÊ≤°Âá∫_(:–∑„Äç‚à†)","text":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® ÂèàÊòØ‰∏ÄÈÅìÊØîËæÉÁÆÄÂçïÁöÑdpÔºå‰ΩÜÊòØËµõÂú∫‰∏äËøòÊòØÊ≤°Âá∫_(:–∑„Äç‚à†) Â§ßÊÑèÔºö$N$ÂùóÂú∞Á†ñ(ÊØèÂùóÊúâÁßØÈõ™Ê∑±Â∫¶$f_i$),ÂÜúÂ§´ÈúÄË¶ÅÁ©øÈù¥Â≠êËøáÂéªÔºåÊúâ$M$ÂèåÈù¥Â≠êÔºåÊØèÂèåÈù¥Â≠êÊúÄÂ§öËÉΩËµ∞Âú®Èõ™Ê∑±$s_i$,ÊØè‰∏ÄÊ≠•ÊúÄÂ§öËµ∞$d_i$Á±≥,ÂÜúÂ§´Âè™ËÉΩÊåâÈ°∫Â∫èÁ©øÈù¥Â≠êÔºåÊç¢Èù¥Â≠êÁöÑÊó∂ÂÄôÈúÄË¶ÅÊ≥®ÊÑèÂΩìÂâçÈù¥Â≠êÂíåË¶ÅÊç¢‰∏äÁöÑÈù¥Â≠êÈÉΩËÉΩË∏©Âú®Ëøô‰∏ÄÂùóÁ†ñ‰∏äÔºåÊ±ÇÂÜúÂ§´Âà∞Ëææ$N$_thÂú∞Á†ñÊó∂ÔºåÊúÄÂ∞ëÈúÄË¶Å‰∏¢ÂºÉÂ§öÂ∞ëÂèåÈûã„ÄÇ ÂàÜÊûêÔºö Áî®$dp[i]$Ë°®Á§∫$i$ËøôÂùóÂú∞Á†ñËÉΩ‰∏çËÉΩÂà∞Ëææ Á±ª‰ººÂ§öÈáçËÉåÂåÖÊ±ÇËß£ÂèØË°åÊÄßÈóÆÈ¢òÁöÑËß£Ê≥ïÔºåÂØπÊØèÂèåÈù¥Â≠ê$i$ÔºåÈÅçÂéÜÂú∞Á†ñ$j$ÔºåËã•$dp[j]==true$‰∏î$s[i]&gt;f[j]$ (Ë°®Á§∫$j$ËøôÂùóÁ†ñ‰πãÂâçÊúâÁ©øÁùÄÂÖ∂‰ªñÈù¥Â≠êËÉΩÂà∞ËææÔºåËÄå‰∏îÂèØ‰ª•Êç¢‰∏ä$i$Ëøô‰∏™Èù¥Â≠ê)ÈÇ£‰πà$dp[k],k\\in[j,j+d[i]]=true$,(Ë°®Á§∫jÂêéÈù¢Ëøô$b[i]$ÂùóÈÉΩËÉΩÂà∞) Ëã•$f[n]$Âú®$i$-thÈûãÊó∂ÂèØË°å,ËæìÂá∫$ans=i-1$ ‰ª£Á†ÅÔºö #include&lt;bits/stdc++.h&gt; #define maxn 500 using namespace std; int d[maxn],b[maxn],a[maxn],n,m; bool dp[maxn]; int main() { scanf(&quot;%d%d&quot;,&amp;n,&amp;m); for (int i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;d[i]); for (int i=1;i&lt;=m;i++) scanf(&quot;%d%d&quot;,&amp;a[i],&amp;b[i]); for (int i=1;i&lt;=n;i++) dp[i]=false; dp[1]=true; int ans; for (int i=1;i&lt;=m;i++) { for (int j=1;j&lt;=n;j++) if (dp[j]&amp;&amp;(a[i]&gt;=d[j])) { for (int k=j;k&lt;=min(n,j+b[i]);k++) if (a[i]&gt;=d[k]) dp[k]=true; } if (dp[n]) {ans=i;break;} } printf(&quot;%d\\n&quot;,ans-1); return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}],"tags":[{"name":"dp","slug":"dp","permalink":"http://WigginsLi.github.io/tags/dp/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}]},{"title":"USACO-Teleportation„ÄêÊ®°Êãü„Äë","slug":"rating-2-F","date":"2019-03-16T01:39:34.000Z","updated":"2019-03-15T17:51:09.989Z","comments":true,"path":"2019/03/16/rating-2-F/","link":"","permalink":"http://WigginsLi.github.io/2019/03/16/rating-2-F/","excerpt":"$\\implies$ contest‰º†ÈÄÅÈó®$\\implies$ USACO‰º†ÈÄÅÈó® Ê∞¥È¢ò‰∏ÄÈÅìÔºå‰ªÖÂÅöËÆ∞ÂΩï","text":"$\\implies$ contest‰º†ÈÄÅÈó®$\\implies$ USACO‰º†ÈÄÅÈó® Ê∞¥È¢ò‰∏ÄÈÅìÔºå‰ªÖÂÅöËÆ∞ÂΩï Â§ßÊÑèÔºöÁªôÂá∫a,b,x,yÂõõ‰∏™ÁÇπ;xÂíåyÂèØ‰ª•‰∫íÁõ∏Áû¨Èó¥Âà∞Ëææ,Ê±ÇaÂà∞bÁöÑÊúÄÂ∞èË∑ùÁ¶ª ÂàÜÊûêÔºö Ê®°ÊãüÊûö‰∏æÊâÄÊúâÊÉÖÂÜµÂç≥ÂèØ ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; int a,b,x,y,ans=1e4; int main() { cin&gt;&gt;a&gt;&gt;b&gt;&gt;x&gt;&gt;y; ans=min(ans,abs(a-b)); ans=min(ans,abs(a-x)+abs(y-b)); ans=min(ans,abs(a-y)+abs(x-b)); cout&lt;&lt;ans&lt;&lt;endl; return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/categories/Ê®°Êãü/"}],"tags":[{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/tags/Ê®°Êãü/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/categories/Ê®°Êãü/"}]},{"title":"USACO18FEB-Rest Stops„ÄêË¥™ÂøÉ„Äë","slug":"rating-2-C","date":"2019-03-16T00:28:36.000Z","updated":"2019-03-15T17:25:25.389Z","comments":true,"path":"2019/03/16/rating-2-C/","link":"","permalink":"http://WigginsLi.github.io/2019/03/16/rating-2-C/","excerpt":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® Âú∫‰∏äÊ≤°ÂÅöÂá∫Êù•ÁöÑË¥™ÂøÉÈ¢òÔºåÂÖ≥ÈîÆÊòØÊ≤°ËØªÊáÇÈ¢òÊÑèor2","text":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® Âú∫‰∏äÊ≤°ÂÅöÂá∫Êù•ÁöÑË¥™ÂøÉÈ¢òÔºåÂÖ≥ÈîÆÊòØÊ≤°ËØªÊáÇÈ¢òÊÑèor2 Â§ßÊÑèÔºö$Farmer John$Âíå‰ªñÁöÑÁßÅ‰∫∫ÊïôÁªÉ$Bessie$Ê≠£Âú®ÂæíÊ≠•ÊîÄÁôªÊ∏©Âì•ÁâõÂ±±„ÄÇÂü∫‰∫é‰ªñ‰ª¨ÁöÑÁõÆÁöÑÔºà‰πüÊòØ‰Ω†ÁöÑÁõÆÁöÑÔºâÔºåËøôÂ∫ßÂ±±ÂèØ‰ª•Áî®‰∏ÄÊù°Èïø‰∏∫$L$Á±≥$Ôºà1 \\leq L \\leq 10^6Ôºâ$ÁöÑÈïøÁõ¥Ë∑ØÂæÑË°®Á§∫„ÄÇ$Farmer John$‰ºöÊ≤øÁùÄËøôÊù°Ë∑ØÂæÑ‰ª•ÊØèÁ±≥$r_F$Áßí$Ôºà1 \\leq r_F \\leq 10^6Ôºâ$ÁöÑÂõ∫ÂÆöÈÄüÂ∫¶ÊîÄÁôª„ÄÇÁî±‰∫é‰ªñÊ≠£Âú®ËÆ≠ÁªÉ‰ªñÁöÑËÄêÂäõÔºå‰ªñÂú®ÈÄî‰∏≠‰∏ç‰ºöËøõË°å‰ªª‰ΩïÁöÑ‰ºëÊÅØ„ÄÇ ÁÑ∂ËÄå$Bessie$ÂèØ‰ª•Âú®‰ºëÊÅØÁ´ô‰ºëÊÅØÔºåÂú®ÈÇ£ÈáåÂ•πËÉΩÂ§üÊâæÂà∞‰∏Ä‰∫õÁæéÂë≥ÁöÑÂ´©Ëçâ„ÄÇÂΩìÁÑ∂ÔºåÂ•π‰πü‰∏çËÉΩÂú®‰ªª‰ΩïÂú∞ÊñπÈÉΩ‰ºëÊÅØÔºÅÂú®Ë∑ØÂæÑ‰∏äÊÄªÂÖ±Êúâ$N$‰∏™‰ºëÊÅØÁ´ô$Ôºà1 \\leq N \\leq 10^5Ôºâ$ÔºõÁ¨¨$i$‰∏™‰ºëÊÅØÁ´ôË∑ùÁ¶ªË∑ØÂæÑÁöÑËµ∑ÁÇπ$x_i$Á±≥$(0 &lt; x_i &lt; L)$ ÔºåÁæéÂë≥ÂÄº‰∏∫$c_i(1 \\leq c_i \\leq 10^6)$„ÄÇÂ¶ÇÊûú$Bessie$Âú®‰ºëÊÅØÁ´ô$i$‰ºëÊÅØ‰∫Ü$t$ÁßíÔºåÂ•πËÉΩÂ§üÂæóÂà∞$c_i \\cdot t$ ‰∏™ÁæéÂë≥Âçï‰Ωç„ÄÇ ‰∏çÂú®‰ºëÊÅØÁ´ôÁöÑÊó∂ÂÄôÔºå$Bessie$‰ºö‰ª•ÊØèÁ±≥$r_B$Áßí$Ôºà1 \\leq r_B \\leq 10^6)$ÁöÑÂõ∫ÂÆöÈÄüÂ∫¶ÊîÄÁôª„ÄÇÁî±‰∫é$Bessie$Âπ¥ËΩªËÄåÂÅ•Â∫∑Ôºå$r_B$‰∏•Ê†ºÂ∞è‰∫é$r_F$„ÄÇ $Bessie$ÊÉ≥Ë¶ÅÂêÉÂà∞ÊúÄÂ§öÁöÑÁæéÂë≥Â´©Ëçâ„ÄÇÁÑ∂ËÄåÂ•π‰πüÊãÖÂøÉ$Farmer John$ÔºõÂ•πËÆ§‰∏∫Â¶ÇÊûúÂú®‰ªª‰ΩïÊó∂ÂÄôÂ•π‰Ωç‰∫é$Farmer John$Ë∫´ÂêéÔºå$Farmer John$ÂèØËÉΩÂ∞±‰ºöÂ§±ÂéªÂâçËøõÁöÑÂä®Âäõ‰∫ÜÔºÅ Â∏ÆÂä©$Bessie$Ê±ÇÂá∫ÔºåÂú®Á°Æ‰øù$Farmer John$ËÉΩÂ§üÂÆåÊàêÁôªÂ±±ÁöÑÊÉÖÂÜµ‰∏ãÔºåÂ•πËÉΩÂ§üËé∑ÂæóÁöÑÊúÄÂ§öÁöÑÁæéÂë≥Âçï‰Ωç„ÄÇ ÂàÜÊûêÔºö ÊØîËæÉÁÆÄÂçïÁöÑË¥™ÂøÉÁ≠ñÁï•ÔºåÊØèÊ¨°ÈÄâÊã©ÂΩìÂâç‰ΩçÁΩÆÂæÄÂêé‰∏≠ÁæéÂë≥ÂÄºÊúÄÂ§ßÁöÑ‰ºëÊÅØÁ´ôÂêÉËçâ ÁÆÄÂçïÁöÑ‰∏ç‰∏•Ë∞®ËØÅÊòéÔºöÂÅáËÆæÊúâ‰∏§‰∏™‰ºëÊÅØÁ´ô$M$,$N$ÔºåÁé∞Âú®$Be$Âú®$M$ÁÇπÂ§Ñ,$FJ$Âú®$S$ÁÇπÂ§Ñ,Â∑≤Áü•$S$ÁÇπÂà∞$M$ÁÇπË∑ùÁ¶ª‰∏∫$R_1$Ôºå$M$Âà∞$N$‰∏∫$R_2$ÔºåÂ¶ÇÊûú$Be$ÈÄâÊã©Âú®$M$ÁÇπÂêÉËçâËøòËÉΩÂà∞$N$ÁÇπÂêÉËçâÔºåÈÇ£‰πàËÉΩÂæóÂà∞ÁöÑÁæéÂë≥ÂÄºÊòØ$C_M\\times r_f\\cdot R_1+(r_f-r_B)\\cdot R_2\\times C_N$,Â¶ÇÊûú$Be$ÈÄâÊã©Âú®$N$ÁÇπÂêÉËçâÔºåÈÇ£‰πàËÉΩÂæóÂà∞ÁöÑÁæéÂë≥ÂÄºÊòØ$C_N\\times (r_f\\cdot (R_1+R_2)-r_B\\cdot R_2) \\implies C_N\\times (r_f\\cdot R_1 + (r_f-r_B)\\cdot R_2)$ÊòæÁÑ∂ÔºåÂú®$M,N$‰∏§ÁÇπÂêÉËçâÂæóÂà∞ÁöÑÁæéÂë≥ÂÄºÂè™‰∏éËá™Ë∫´ÁöÑÁæéÂë≥ÂÄºÊúâÂÖ≥$\\therefore$ ÈÄâÊã©ÁæéÂë≥ÂÄºÊúÄÂ§ßÁöÑ‰ºëÊÅØÁ´ôÂêÉËçâÊòØÊ≠£Á°ÆÁöÑÁ≠ñÁï• ‰ª£Á†ÅÔºö #include &lt;iostream&gt; #include &lt;algorithm&gt; using namespace std; struct node { long long x; long long c; } a[100010]; bool cmp(const node &amp;a, const node &amp;b) { if(a.c &gt; b.c) return true; return false; } int main() { long long l, n, f, b; cin &gt;&gt; l &gt;&gt; n &gt;&gt; f &gt;&gt; b; for(int i = 1; i &lt;= n; i++) cin &gt;&gt; a[i].x &gt;&gt; a[i].c; long long t = f-b; sort(a+1, a+n+1, cmp); long long ans = a[1].c*(a[1].x*t), last = 1; for(int i = 2; i &lt;= n; i++) { if(a[i].x &gt; a[last].x) { ans += a[i].c*((a[i].x-a[last].x)*t); last = i; } } cout &lt;&lt; ans &lt;&lt; endl; return 0; } }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Ë¥™ÂøÉ","slug":"Ë¥™ÂøÉ","permalink":"http://WigginsLi.github.io/categories/Ë¥™ÂøÉ/"}],"tags":[{"name":"Ë¥™ÂøÉ","slug":"Ë¥™ÂøÉ","permalink":"http://WigginsLi.github.io/tags/Ë¥™ÂøÉ/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Ë¥™ÂøÉ","slug":"Ë¥™ÂøÉ","permalink":"http://WigginsLi.github.io/categories/Ë¥™ÂøÉ/"}]},{"title":"USACO-Hoofball„Äêdfs/dp„Äë","slug":"rating-2-B","date":"2019-03-15T23:11:44.000Z","updated":"2019-03-15T16:20:17.413Z","comments":true,"path":"2019/03/16/rating-2-B/","link":"","permalink":"http://WigginsLi.github.io/2019/03/16/rating-2-B/","excerpt":"$\\implies$contest‰º†ÈÄÅÈó® ÂòõËøòÊòØÊâæ‰∏çÂà∞ÂÖ∂‰ªñÈ¢òÂ∫ìÈìæÊé•ËøôÊ¨°Êéí‰ΩçËµõÁöÑÈ¢òÂ∞±ÂÖ®ÈÉ®Ë¥¥È¢òÈù¢‰∫Ü Êú¨Êù•dfsÂèØ‰ª•ÂÅöÔºå‰∏çËøáËµõÂú∫‰∏äÊ≤°ÊúâË∞ÉÂá∫Êù•Â§ßÊ¶ÇÊòØÊ±ÇÂá∫ÊúâÂá†‰∏™Èó≠ÁéØÔºåÂÜçÂä†‰ª•ËÆ°ÁÆóÂç≥ÂèØ ËµõÂêéÁúã‰∫Ü‰∏ãÈ¢òËß£ÔºåÂèëÁé∞Êúâ$dp$ÁöÑÂÅöÊ≥ïÔºåÂ≠¶‰π†‰∏ÄÊ≥¢","text":"$\\implies$contest‰º†ÈÄÅÈó® ÂòõËøòÊòØÊâæ‰∏çÂà∞ÂÖ∂‰ªñÈ¢òÂ∫ìÈìæÊé•ËøôÊ¨°Êéí‰ΩçËµõÁöÑÈ¢òÂ∞±ÂÖ®ÈÉ®Ë¥¥È¢òÈù¢‰∫Ü Êú¨Êù•dfsÂèØ‰ª•ÂÅöÔºå‰∏çËøáËµõÂú∫‰∏äÊ≤°ÊúâË∞ÉÂá∫Êù•Â§ßÊ¶ÇÊòØÊ±ÇÂá∫ÊúâÂá†‰∏™Èó≠ÁéØÔºåÂÜçÂä†‰ª•ËÆ°ÁÆóÂç≥ÂèØ ËµõÂêéÁúã‰∫Ü‰∏ãÈ¢òËß£ÔºåÂèëÁé∞Êúâ$dp$ÁöÑÂÅöÊ≥ïÔºåÂ≠¶‰π†‰∏ÄÊ≥¢ È¢òÈù¢ÔºöIn preparation for the upcoming hoofball tournament, Farmer John is drilling his $N$ cows (conveniently numbered $1‚Ä¶N$, where $1‚â§N‚â§100$) in passing the ball. The cows are all standing along a very long line on one side of the barn, with cow $i$ standing $x_i$ units away from the barn $(1‚â§x_i‚â§1000)$. Each cow is standing at a distinct location. At the beginning of the drill, Farmer John will pass several balls to different cows. When cow $i$ receives a ball, either from Farmer John or from another cow, she will pass the ball to the cow nearest her (and if multiple cows are the same distance from her, she will pass the ball to the cow farthest to the left among these). So that all cows get at least a little bit of practice passing, Farmer John wants to make sure that every cow will hold a ball at least once. Help him figure out the minimum number of balls he needs to distribute initially to ensure this can happen, assuming he hands the balls to an appropriate initial set of cows. InputThe first line of input contains $N$. The second line contains $N$ space-separated integers, where the $i$th integer is $x_i$. OutputPlease output the minimum number of balls Farmer John must initially pass to the cows, so that every cow can hold a ball at least once. Â§ßÊÑèÔºö$N$Â§¥Áâõ‰∫íÁõ∏‰º†ÁêÉ,ÊØè‰∏™Áâõ‰ºöÊääÁêÉ‰º†ÁªôÁ¶ª‰ªñÊúÄËøëÁöÑÈÇ£‰∏™ÔºåÂ¶ÇÊûúË∑ùÁ¶ªÁõ∏ÂêåÔºå‰º†ÁªôÂ∑¶ËæπÁöÑÊ±ÇÊúÄÂ∞èÁöÑÁêÉÊï∞‰ΩøÂæóÂÖ®ÈÉ®ÁöÑÁâõÈÉΩÊúâÊú∫‰ºöÊë∏Âà∞ÁêÉ ÂàÜÊûêÔºö $dp[i][0/1]$Ë°®Á§∫Á¨¨$i$‰∏™ÁêÉ‰º†Âà∞Âè≥Ëæπ/‰º†Âà∞Â∑¶ËæπÁöÑÊúÄÂ§ßÂÄº $i$-thÂ¶ÇÊûú‰º†Âà∞Âè≥ËæπÔºåÂèØËÉΩÊòØ$i-1$-th‰º†ËøáÊù•ÁöÑÔºå‰πüÂèØËÉΩÊòØÂ∑¶ËæπÁöÑ‰∏çËÉΩ‰º†ËøáÊù•,ÊâÄ‰ª•Êñ∞Â¢û‰∏Ä‰∏™ÁêÉ$i$-thÂ¶ÇÊûú‰º†Âà∞Â∑¶ËæπÔºåÂèØËÉΩÊòØ‰º†Âà∞$i-1$-thÁöÑÔºå‰πüÂèØËÉΩÊòØ$i-1$ÂêëÂè≥‰∏çËÉΩ‰º†Âà∞$i$,ÊâÄ‰ª•Êñ∞Â¢û‰∏Ä‰∏™ÁêÉ È¢ÑÂ§ÑÁêÜÂá∫ok[i][0/1]ÊØè‰∏™ÁêÉÊòØÂê¶ËÉΩËµ∞Âà∞Âè≥Ëæπ/Â∑¶ËæπÊúâËΩ¨ÁßªÊñπÁ®ã:$$ \\begin{cases} dp[i][0]= min(dp[i-1][0]+!(ok[i-1][0]),dp[i-1][1]+1) \\\\ dp[i][1]= min(dp[i-1][1]+!(ok[i][1]),dp[i-1][0]+1) \\end{cases}$$ ÊúÄÂêéËæìÂá∫$min(dp[n][0],dp[n][1])$Âç≥ÂèØ ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; const int maxn = 2e3+5; const int INF = 0x3f3f3f3f; int n,a[maxn],dp[maxn][2],ok[maxn][2]; int main() { cin&gt;&gt;n; for(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i]; sort(a+1,a+n+1); a[0]=-1*INF; a[n+1]=INF; for(int i=1;i&lt;=n;i++) { if(a[i+1]-a[i]&lt;a[i]-a[i-1]) ok[i][0]=1; else ok[i][1]=1; } dp[1][0]=dp[1][1]=1; for(int i=2;i&lt;=n;i++) { dp[i][0]=min(dp[i-1][0]+(!ok[i-1][0]),dp[i-1][1]+1); dp[i][1]=min(dp[i-1][1]+(!ok[i][1]),dp[i-1][0]+1); } cout&lt;&lt;min(dp[n][0],dp[n][1])&lt;&lt;endl; return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"},{"name":"ÊêúÁ¥¢","slug":"ÊêúÁ¥¢","permalink":"http://WigginsLi.github.io/categories/ÊêúÁ¥¢/"}],"tags":[{"name":"dp","slug":"dp","permalink":"http://WigginsLi.github.io/tags/dp/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"},{"name":"ÊêúÁ¥¢","slug":"ÊêúÁ¥¢","permalink":"http://WigginsLi.github.io/categories/ÊêúÁ¥¢/"}]},{"title":"USACO-Taming the Herd„ÄêÊ®°Êãü„Äë","slug":"rating-2-A","date":"2019-03-15T22:23:31.000Z","updated":"2019-03-15T15:02:47.520Z","comments":true,"path":"2019/03/16/rating-2-A/","link":"","permalink":"http://WigginsLi.github.io/2019/03/16/rating-2-A/","excerpt":"$\\implies$contest‰º†ÈÄÅÈó® Êâæ‰∏çÂà∞ÂÖ∂‰ªñÈ¢òÂ∫ìÁöÑÈìæÊé•ÔºåÂ∞±‰∏çÊîæ‰∫Ü_(:–∑„Äç‚à†)ÊàëÁõ¥Êé•Ë¥¥È¢òÈù¢‰∫Ü","text":"$\\implies$contest‰º†ÈÄÅÈó® Êâæ‰∏çÂà∞ÂÖ∂‰ªñÈ¢òÂ∫ìÁöÑÈìæÊé•ÔºåÂ∞±‰∏çÊîæ‰∫Ü_(:–∑„Äç‚à†)ÊàëÁõ¥Êé•Ë¥¥È¢òÈù¢‰∫Ü È¢òÈù¢ÔºöEarly in the morning, Farmer John woke up to the sound of splintering wood. It was the cows, and they were breaking out of the barn again! Farmer John was sick and tired of the cows‚Äô morning breakouts, and he decided enough was enough: it was time to get tough. He nailed to the barn wall a counter tracking the number of days since the last breakout. So if a breakout occurred in the morning, the counter would be $0$ that day; if the most recent breakout was $3$ days ago, the counter would read $3$. Farmer John meticulously logged the counter every day. The end of the year has come, and Farmer John is ready to do some accounting. The cows will pay, he says! But lo and behold, some entries of his log are missing! Farmer John is confident that the he started his log on the day of a breakout. Please help him determine, out of all sequences of events consistent with the log entries that remain, the minimum and maximum number of breakouts that may have take place over the course of the logged time. InputThe first line contains a single integer $N (1‚â§N‚â§100)$, denoting the number of days since Farmer John started logging the cow breakout counter. The second line contains $N$ space-separated integers. The $i$th integer is either ‚àí1, indicating that the log entry for day $i$ is missing, or a non-negative integer $a_i$ (at most $100$), indicating that on day $i$ the counter was at $a_i$. OutputIf there is no sequence of events consistent with Farmer John‚Äôs partial log and his knowledge that the cows definitely broke out of the barn on the morning of day 1, output a single integer ‚àí1. Otherwise, output two space-separated integers m followed by $M$, where m is the minimum number of breakouts of any consistent sequence of events, and $M$ is the maximum. Â§ßÊÑèÔºöÊØèÂΩìÂ•∂ÁâõÈóØÁ•∏ÂÜúÂ§´Â∞±Âú®ÂΩìÂ§©ËÆ∞‰∏ã$0$,‰πãÂêéÁöÑÂ•∂ÁâõÊ≤°ÈóØÁ•∏ÁöÑÊó•Â≠êÔºåÂÜúÂ§´ËÆ∞‰∏ãÂ•∂ÁâõÊúÄËøëÈóØÁ•∏ÁöÑÊó∂Èó¥Â∑ÆÔºåÊØîÂ¶ÇÂ•∂Áâõ$3$Â§©ÂâçÈóØÁ•∏ÂàôËÆ∞‰∏ã$3$ÔºåÂêéÊù•ËÆ∞ÂΩïË¢´Â•∂ÁâõÁ†¥Âùè‰∫Ü,$-1$Ë°®Á§∫ÂΩìÂ§©Êï∞ÊçÆÊçüÂùèÔºåËæìÂá∫Â•∂ÁâõÈóØÁ•∏ÁöÑÊúÄÂ§ßÂèØËÉΩÂ§©Êï∞ÂíåÊúÄÂ∞èÂèØËÉΩÂ§©Êï∞Â¶ÇÊûúËÆ∞ÂΩïÂíåÂÆûÈôÖÊÉÖÂÜµ‰∏çÁ¨¶ÔºåËæìÂá∫$-1$(Â∑≤Áü•Á¨¨‰∏ÄÂ§©Â•∂Áâõ‰∏ÄÂÆöÈóØÁ•∏) ÂàÜÊûêÔºö ÂÖàÊääËÉΩÊé®Êñ≠Âá∫Êù•ÁöÑÊï∞ÊçÆÊÅ¢Â§ç(Ê≥®ÊÑèÂà§Êñ≠ÊòØÂê¶ÊúâÈùûÊ≥ïÊÉÖÂÜµ) ÊúÄÂ∞èÁöÑÂèØËÉΩÂ§©Êï∞Âç≥ÂΩìÂâçÂæóÂà∞ÁöÑÊï∞ÊçÆÈáåÈù¢$0$ÁöÑ‰∏™Êï∞ÊúÄÂ§ßÁöÑÂèØËÉΩÂ§©Êï∞‰∏∫ÂΩìÂâçÂæóÂà∞Êï∞ÊçÆÈáåÈù¢$0$Âíå$-1$ÁöÑ‰∏™Êï∞ ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; const int maxn = 105; int n,a[maxn]; int main() { cin&gt;&gt;n; for(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i]; for(int i=n-1;i&gt;=1;i--) { if(a[i+1]!=-1&amp;&amp;a[i+1]!=0) { if(a[i]==-1) a[i]=a[i+1]-1; else if(a[i]!=a[i+1]-1) { cout&lt;&lt;-1&lt;&lt;endl; return 0; } } } if(a[1]==-1) a[1]=0; if(a[1!=0]) { cout&lt;&lt;-1&lt;&lt;endl; return 0; } int m=0,M=0; for(int i=1;i&lt;=n;i++) { if(a[i]==0) { m++;M++; }else if(a[i]==-1) { M++; } } cout&lt;&lt;m&lt;&lt;&quot; &quot;&lt;&lt;M&lt;&lt;endl; return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/categories/Ê®°Êãü/"}],"tags":[{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/tags/Ê®°Êãü/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/categories/Ê®°Êãü/"}]},{"title":"USACO18DEC-Convention II„ÄêÊ®°Êãü+‰ºòÂÖàÈòüÂàó„Äë","slug":"rating-1-I","date":"2019-03-15T18:38:08.000Z","updated":"2019-03-15T11:27:12.411Z","comments":true,"path":"2019/03/16/rating-1-I/","link":"","permalink":"http://WigginsLi.github.io/2019/03/16/rating-1-I/","excerpt":"$\\implies$ contest‰º†ÈÄÅÈó®$\\implies$ Ê¥õË∞∑‰º†ÈÄÅÈó® Á¨¨‰∏ÄÊ¨°Êéí‰ΩçËµõÁöÑÊúÄÂêé‰∏ÄÈÅìÂøÖË°•È¢ò(ÈÉΩÊòØÊ∞¥È¢òÔºåÂú∫‰∏äÊ≤°ËÉΩAÂÆåÁúüÊòØÂ§±Ë¥•_(:–∑„Äç‚à†)","text":"$\\implies$ contest‰º†ÈÄÅÈó®$\\implies$ Ê¥õË∞∑‰º†ÈÄÅÈó® Á¨¨‰∏ÄÊ¨°Êéí‰ΩçËµõÁöÑÊúÄÂêé‰∏ÄÈÅìÂøÖË°•È¢ò(ÈÉΩÊòØÊ∞¥È¢òÔºåÂú∫‰∏äÊ≤°ËÉΩAÂÆåÁúüÊòØÂ§±Ë¥•_(:–∑„Äç‚à†) Â§ßÊÑèÔºöNÂ§¥ÁâõÊéíÈòüÂêÉËçâÔºåÊØèÂ§¥ÁâõÊúâÂà∞ËææÊó∂Èó¥$a_i$,ÈúÄË¶Å$t_i$Êó∂Èó¥ÂêÉËçâÂ¶ÇÊûúÂΩìÂâçÂ∑≤ÁªèÊúâÁâõÂú®ÂêÉËçâÔºåÈÇ£‰πàÂºÄÂßãÊéíÈòü,ÊéíÈòüÁöÑÈ°∫Â∫è‰∏çÊåâÊó∂Èó¥È°∫Â∫èËÄåÊòØÊåâÊØèÂ§¥ÁâõÁöÑËµÑÂéÜ(ÊåâËæìÂÖ•È°∫Â∫è)‰ªéÂ§ßÂà∞Â∞èÊéíÂ∫èËæìÂá∫ÊâÄÊúâÂ•∂Áâõ‰∏≠Âú®Èòü‰ºçÈáåÁ≠âÂæÖÁöÑÊó∂Èó¥Ôºà$a_i$Âà∞ËøôÂ§¥Â•∂ÁâõÂºÄÂßãÂêÉËçâ‰πãÈó¥ÁöÑÊó∂Èó¥ÔºâÁöÑÊúÄÂ§ßÂÄº„ÄÇ ÂàÜÊûêÔºö Áª¥Êä§‰∏§‰∏™‰ºòÂÖàÈòüÂàó$arr$Âíå$wait$ÂàÜÂà´Ê®°ÊãüÂà∞ËææÁöÑÈòüÂàóÂíåÁ≠âÂæÖÈòüÂàó ÊØè‰∏™ÁâõÊúâÁä∂ÊÄÅ$&lt;s_1,s_2,s_3,s_4&gt;$ÂàÜÂà´Ë°®Á§∫Âà∞ËææÊó∂Èó¥ÔºåÁâõÁöÑËµÑÂéÜÔºåÂêÉÁöÑÊó∂ÈïøÔºåÂºÄÂßãÁ≠âÂæÖÁöÑÊó∂Èó¥Ôºà$s_1Âíås_2$Âú®‰∏§ÈòüÂàó‰∫íÊç¢‰ΩçÁΩÆÔºåÁõÆÁöÑÊòØ$arr$ÈòüÂàóÊåâÊó∂Èó¥ÊéíÂ∫èÔºå$wait$ÈòüÂàóÊåâËµÑÂéÜÊéíÂ∫èÔºâ Ê®°ÊãüÂá∫ÈòüÊ≠•È™§ÔºåËÆ∞ÂΩïÂ•ΩÊØèÂ§¥ÂºÄÂßãÂêÉËçâÁöÑÁâõÂºÄÂßãÊéíÈòüÊó∂Èó¥ÂíåÂΩìÂâçÊó∂Èó¥ÁöÑÂ∑ÆÔºåÂèñÊúÄÂ§ßÂÄº ËæìÂá∫Âç≥ÂèØ ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; typedef pair&lt;int,int&gt; pii; typedef pair&lt;pii,pii&gt; piii; priority_queue&lt;piii,vector&lt;piii&gt;,greater&lt;piii&gt; &gt; arr,wait; int ans=-1,n,now; int main() { cin&gt;&gt;n; for(int i=1;i&lt;=n;i++) { int a,t; cin&gt;&gt;a&gt;&gt;t; arr.push(piii(pii(a,i),pii(t,-1))); } now=0; while(!arr.empty()||!wait.empty()) { if(wait.empty()) { piii x = arr.top();arr.pop(); swap(x.first.first,x.first.second); now=x.first.second; wait.push(x); } while(!wait.empty()) { piii x = wait.top();wait.pop(); ans=max(ans,now-x.first.second); x.second.second=now; now+=x.second.first; while(!arr.empty()&amp;&amp;arr.top().first.first&lt;=now) { piii u=arr.top();arr.pop(); swap(u.first.first,u.first.second); wait.push(u); } } } cout&lt;&lt;ans&lt;&lt;endl; return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Êï∞ÊçÆÁªìÊûÑ","slug":"Êï∞ÊçÆÁªìÊûÑ","permalink":"http://WigginsLi.github.io/categories/Êï∞ÊçÆÁªìÊûÑ/"},{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/categories/Ê®°Êãü/"}],"tags":[],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Êï∞ÊçÆÁªìÊûÑ","slug":"Êï∞ÊçÆÁªìÊûÑ","permalink":"http://WigginsLi.github.io/categories/Êï∞ÊçÆÁªìÊûÑ/"},{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/categories/Ê®°Êãü/"}]},{"title":"USACO18DEC-Mixing Milk„ÄêÊ®°Êãü„Äë","slug":"rating-1-H","date":"2019-03-15T18:14:27.000Z","updated":"2019-03-15T10:31:52.918Z","comments":true,"path":"2019/03/16/rating-1-H/","link":"","permalink":"http://WigginsLi.github.io/2019/03/16/rating-1-H/","excerpt":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó®","text":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® Â§ßÊÑèÔºöÊúâ‰∏â‰∏™Ê°∂ÔºåÂàÜÂà´ÊúâÂÆπÈáè$C_i$ÂíåÂàùÂßãÊ∞¥Èáè$M_i$‰ªé‰∏Ä‰∏™Ê°∂ÂÄíÂÖ•Âè¶‰∏Ä‰∏™Ê°∂ÁÆó‰Ωú‰∏ÄÊ¨°ÂÄíÊ∞¥Êìç‰ΩúÁé∞Âú®‰ªéÊ°∂$1$ÂÄíÂÖ•Ê°∂$2$ÔºåÊ°∂$2$ÂÄíÂÖ•Ê°∂$3$ÔºåÊ°∂$3$ÂÄíÂÖ•Ê°∂$1$ÔºåÈáçÂ§çËøô‰∏™ËøáÁ®ãÔºåÁõ¥Âà∞$100$Ê¨°ÂÄíÊ∞¥Êìç‰ΩúÂêéËæìÂá∫Ê°∂$1$ÁöÑÂâ©‰ΩôÊ∞¥Èáè ÂàÜÊûêÔºö Âòõ~Èöè‰æøÊ®°Êãü‰∏ãÂ∞±Â•ΩÂï¶Ëøô‰∏™È¢òËß£Â∞±Ë£∏Â•î‰∫Ü ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; ll ma,mb,mc; ll a,b,c; int main() { cin&gt;&gt;ma&gt;&gt;a; cin&gt;&gt;mb&gt;&gt;b; cin&gt;&gt;mc&gt;&gt;c; for(int i=1;i&lt;=33;i++) { if(a+b&gt;mb) { a=a+b-mb; b=mb; }else{ b=a+b; a=0; } if(b+c&gt;mc) { b=b+c-mc; c=mc; }else{ c=b+c; b=0; } if(c+a&gt;ma) { c=c+a-ma; a=ma; }else{ a=c+a; c=0; } } if(a+b&gt;mb) { a=a+b-mb; b=mb; }else{ b=a+b; a=0; } cout&lt;&lt;a&lt;&lt;endl&lt;&lt;b&lt;&lt;endl&lt;&lt;c&lt;&lt;endl; return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/categories/Ê®°Êãü/"}],"tags":[{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/tags/Ê®°Êãü/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/categories/Ê®°Êãü/"}]},{"title":"USACO18DEC-Back and Forth„Äêdfs„Äë","slug":"rating-1-G","date":"2019-03-15T17:48:25.000Z","updated":"2019-03-15T10:12:38.030Z","comments":true,"path":"2019/03/16/rating-1-G/","link":"","permalink":"http://WigginsLi.github.io/2019/03/16/rating-1-G/","excerpt":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® ÊØîËæÉÁÆÄÂçïÁöÑÊö¥ÂäõÈ¢òÔºàÂà∑Â§™Â§öÊ∞¥È¢ò‰∫ÜÂïäorz","text":"$\\implies$contest‰º†ÈÄÅÈó®$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® ÊØîËæÉÁÆÄÂçïÁöÑÊö¥ÂäõÈ¢òÔºàÂà∑Â§™Â§öÊ∞¥È¢ò‰∫ÜÂïäorz Â§ßÊÑèÔºöÂÜúÂ§´Êúâ‰∏§‰∏™ÊàøÈó¥ÔºåÂàÜÂà´Êúâ$1$‰∏™Â§ßÊ∞¥Áº∏Âíå$10$‰∏™‰∏çÂÆöÂÆπÈáèÁöÑÊ°∂Âë®‰∏ÄÂÜúÂ§´Âú®‰∏§Ê∞¥Áº∏ÂàÜÂà´ÂÄíÂÖ•1000Âä†‰ªëÁâõÂ•∂ÔºåÂë®‰∫åÈöèÊú∫Êåë‰∏Ä‰∏™(Âú®Á¨¨‰∏Ä‰∏™ÊàøÈó¥ÁöÑ)Ê°∂‰ªéÁ¨¨‰∏Ä‰∏™Ê∞¥Áº∏Ë£ÖÊª°ÁâõÂ•∂ËøêÂà∞Á¨¨‰∫å‰∏™Ê∞¥Áº∏ÔºåÂπ∂ÊääÊ∞¥Ê°∂Áïô‰∏ã„ÄÇÂë®‰∏âÂèçËøáÊù•‰ªéÁ¨¨‰∫å‰∏™Ê∞¥Áº∏ËøêÁâõÂ•∂Âà∞Á¨¨‰∏Ä‰∏™Ê∞¥Áº∏Âë®ÂõõÂë®‰∫îÈáçÂ§çÂë®‰∫åÂë®‰∏âÁöÑÂä®‰ΩúÈóÆÂë®Êú´Êó∂Á¨¨‰∏Ä‰∏™Ê∞¥Áº∏ÁöÑÁâõÂ•∂ÁöÑÈáèÊúâÂ§öÂ∞ëÁßçÂèØËÉΩÊÄß ÂàÜÊûêÔºö ËÆæÁä∂ÊÄÅ$(C,lv)$Ë°®Á§∫ÂΩìÂâçÊòØÂë®$lv$ÔºåÁ¨¨‰∏Ä‰∏™Ê∞¥Áº∏Ââ©‰ΩôÂ•∂Èáè$C$ ‰ª•(1000,1)ÂºÄÂßãdfsÊö¥Êêú,ÈÄâÊã©ÂΩìÂâçÊàøÈó¥ÁöÑÊØè‰∏™Ê°∂ÁªßÁª≠ÈÄíÂΩíÊêúÁ¥¢ÔºåÁõ¥Âà∞Âë®‰∫îËÆ∞ÂΩïÂΩìÂâçÂâ©‰ΩôÂ•∂Èáè ÁªüËÆ°Á≠îÊ°à‰∏™Êï∞Âç≥ÂèØ ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; const int maxn = 1e3+5; int a[maxn],b[maxn],vis[2005],ans=0; int dfs(int cnt,int lv) { if(lv==5) { if(vis[cnt]==0) ans++; vis[cnt]=1; return 0; } if(lv%2==1) { for(int i=1;i&lt;=20;i++) { if(a[i]!=0) { if(cnt-a[i]&lt;0) return 0; b[i]=a[i]; a[i]=0; dfs(cnt-b[i],lv+1); a[i]=b[i]; b[i]=0; } } }else { for(int i=1;i&lt;=20;i++) { if(b[i]!=0) { if(cnt+b[i]&gt;2000) return 0; a[i]=b[i]; b[i]=0; dfs(cnt+a[i],lv+1); b[i]=a[i]; a[i]=0; } } } return 0; } int main() { for(int i=1;i&lt;=10;i++) cin&gt;&gt;a[i]; for(int i=11;i&lt;=20;i++) cin&gt;&gt;b[i]; memset(vis,0,sizeof(vis)); dfs(1000,1); cout&lt;&lt;ans&lt;&lt;endl; return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"ÊêúÁ¥¢","slug":"ÊêúÁ¥¢","permalink":"http://WigginsLi.github.io/categories/ÊêúÁ¥¢/"}],"tags":[{"name":"dfs","slug":"dfs","permalink":"http://WigginsLi.github.io/tags/dfs/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"ÊêúÁ¥¢","slug":"ÊêúÁ¥¢","permalink":"http://WigginsLi.github.io/categories/ÊêúÁ¥¢/"}]},{"title":"USACO18DEC-Convention„Äê‰∫åÂàÜ„Äë","slug":"rating-1-E","date":"2019-03-15T13:55:30.000Z","updated":"2019-03-15T09:47:12.335Z","comments":true,"path":"2019/03/15/rating-1-E/","link":"","permalink":"http://WigginsLi.github.io/2019/03/15/rating-1-E/","excerpt":"$\\implies$‰º†ÈÄÅÈó®(Âè™ÊúâgroupÈáåÁöÑ‰∫∫ËÉΩËøõ)$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® ‰∫åÂàÜÊùøÂ≠êÈ¢òÂè≠","text":"$\\implies$‰º†ÈÄÅÈó®(Âè™ÊúâgroupÈáåÁöÑ‰∫∫ËÉΩËøõ)$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® ‰∫åÂàÜÊùøÂ≠êÈ¢òÂè≠ Â§ßÊÑèÔºö$N$Â§¥ÁâõÂú®‰∏çÂêåÊó∂Èó¥Âà∞ËææÊú∫Âú∫ÂêéÔºåÂÜúÂ§´Áî®Âç°ËΩ¶ÊÉ≥ÊääÂÆÉ‰ª¨ËøêÂõûÂÜúÂú∫ÂÜúÂ§´Êúâ$M$ËæÜËΩ¶ÔºåÊØèËæÜËΩ¶ÊúÄÂ§öÂèØ‰ª•Ë£Ö$C$Â§¥Áâõ(‰øùËØÅ$M \\times C\\geq N$),ÈóÆÁâõÊúÄÂ∞èÁöÑÊúÄÂ§ßÁ≠âÂæÖÊó∂Èó¥ ÂàÜÊûêÔºö ÂØπÁâõÁöÑÊúÄÂ§ßÁ≠âÂæÖÊó∂Èó¥ËøõË°å‰∫åÂàÜÔºåÂ¶ÇÊûúÂΩìÂâçÊúÄÂ§ßÁ≠âÂæÖÊó∂Èó¥ÂèØË°åÔºåÂêëÂ∑¶ËæπÁïåÁº©ËøõÔºåÂê¶ÂàôÂèç‰πã ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; const int maxn = 1e5+5; ll n,m,c,t[maxn]; int fun(int x) { int inx=1,cnt=0; while(inx&lt;=n) { for(int i=1;i&lt;c;i++) { if(t[inx+i]-t[inx]&gt;x) {inx=inx+i;cnt++;break;} if(i==c-1) {inx=inx+c;cnt++;} } } if(cnt&lt;=m) return 0; else return 1; } int main() { cin&gt;&gt;n&gt;&gt;m&gt;&gt;c; for(int i=1;i&lt;=n;i++) { cin&gt;&gt;t[i]; } sort(t+1,t+n+1); int l=0,r=1e9,mid; while(r-l&gt;1) { mid=(l+r)/2; //cout&lt;&lt;l&lt;&lt;&quot; &quot;&lt;&lt;r&lt;&lt;endl; if(fun(mid)) { l=mid; }else{ r=mid; } } if(!fun(l)) cout&lt;&lt;l&lt;&lt;endl; else if(!fun((l+r)/2)) cout&lt;&lt;(l+r)/2&lt;&lt;endl; else cout&lt;&lt;r&lt;&lt;endl; return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"‰∫åÂàÜ","slug":"‰∫åÂàÜ","permalink":"http://WigginsLi.github.io/categories/‰∫åÂàÜ/"}],"tags":[{"name":"‰∫åÂàÜ","slug":"‰∫åÂàÜ","permalink":"http://WigginsLi.github.io/tags/‰∫åÂàÜ/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"‰∫åÂàÜ","slug":"‰∫åÂàÜ","permalink":"http://WigginsLi.github.io/categories/‰∫åÂàÜ/"}]},{"title":"USACO18DEC-Mooyo Mooyo„Äêdfs+Ê®°Êãü„Äë","slug":"rating-1-C","date":"2019-03-15T13:35:08.000Z","updated":"2019-03-15T06:10:31.502Z","comments":true,"path":"2019/03/15/rating-1-C/","link":"","permalink":"http://WigginsLi.github.io/2019/03/15/rating-1-C/","excerpt":"$\\implies$‰º†ÈÄÅÈó®(Âè™ÊúâgroupÈáåÁöÑ‰∫∫ËÉΩËøõ)$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó®","text":"$\\implies$‰º†ÈÄÅÈó®(Âè™ÊúâgroupÈáåÁöÑ‰∫∫ËÉΩËøõ)$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® Â§ßÊÑèÔºöÁªôÂÆö‰∏Ä‰∏™$n\\times m$ÁöÑÂõæÔºåÁõ∏ÈÇªÁöÑÁõ∏ÂêåÁöÑÊï∞ÊûÑÊàêÊï∞ÂùóÔºåÂΩìÊï∞Âùó‰∏≠Êï∞ÁöÑ‰∏™Êï∞‚â•$k$Êó∂ÔºåËØ•Êï∞ÂùóË¢´Ê∂àÈô§ÔºåÊ∂àÈô§ÊâÄÊúâÂèØÊ∂àÈô§ÁöÑÊï∞Âùó„ÄÇÂÖ®ÈÉ®Ââ©‰ΩôÁöÑÊï∞Âùó‚Äù‰∏ãËêΩ‚ÄùÔºåÈáçÂ§çÊ∂àÈô§ËøáÁ®ãÔºåËæìÂá∫ÊúÄÁªàÁªìÊûú ÂàÜÊûêÔºö $dfs$Ê±Ç‰∏Ä‰∏ãËøûÈÄöÂùóÔºåÊääÊâÄÊúâÁöÑËøûÈÄöÂùóÊ∂àÈô§Êéâ ÁÑ∂ÂêéÊ®°Êãü‰∏Ä‰∏ã‰∏ãËêΩËøáÁ®ã,(Âõ†‰∏∫Êï∞ÊçÆÊØîËæÉÂ∞èÔºåÁûéÊêûÊêû‰πüËÉΩËøá_(:–∑„Äç‚à†) ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; const int maxn = 1e3+5; int n,k,vis[maxn][11],cnt,num[maxn*10]; string m[maxn]; void dfs(int x,int y) { num[cnt]++; int dir[5]={0,1,0,-1,0}; for(int i=0;i&lt;4;i++) { int nx=x+dir[i],ny=y+dir[i+1]; if(nx&gt;=1&amp;&amp;ny&gt;=0&amp;&amp;nx&lt;=n&amp;&amp;ny&lt;10&amp;&amp;!vis[nx][ny]&amp;&amp;m[nx][ny]==m[x][y]) { vis[nx][ny]=cnt; dfs(nx,ny); } } } int main() { cin&gt;&gt;n&gt;&gt;k; for(int i=1;i&lt;=n;i++) { cin&gt;&gt;m[i]; } bool ok; while(1) { ok=1; memset(vis,0,sizeof(vis)); memset(num,0,sizeof(num)); cnt=0; for(int i=1;i&lt;=n;i++) { int len=m[i].length(); for(int j=0;j&lt;len;j++) { if(!vis[i][j]&amp;&amp;m[i][j]!=&#39;0&#39;) { cnt++; vis[i][j]=cnt; dfs(i,j); if(num[cnt]&gt;=k) { num[cnt]=-1; ok=0; } } } } for(int i=1;i&lt;=n;i++) { for(int j=0;j&lt;10;j++) { if(num[vis[i][j]]==-1) { m[i][j]=&#39;0&#39;; } } } for(int i=n;i&gt;=1;i--) { for(int j=0;j&lt;10;j++) { if(m[i][j]==&#39;0&#39;) continue; int u=i+1; while(m[u][j]==&#39;0&#39;) { u++; } if(u==i+1) continue; m[u-1][j]=m[i][j]; m[i][j]=&#39;0&#39;; } } if(ok) break; } for(int i=1;i&lt;=n;i++) { cout&lt;&lt;m[i]&lt;&lt;endl; } cout&lt;&lt;endl; return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/categories/Ê®°Êãü/"},{"name":"ÊêúÁ¥¢","slug":"ÊêúÁ¥¢","permalink":"http://WigginsLi.github.io/categories/ÊêúÁ¥¢/"}],"tags":[{"name":"dfs","slug":"dfs","permalink":"http://WigginsLi.github.io/tags/dfs/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/categories/Ê®°Êãü/"},{"name":"ÊêúÁ¥¢","slug":"ÊêúÁ¥¢","permalink":"http://WigginsLi.github.io/categories/ÊêúÁ¥¢/"}]},{"title":"USACO18DEC-Teamwork„ÄêÁÆÄÂçïDP„Äë","slug":"rating-1-B","date":"2019-03-15T00:52:36.000Z","updated":"2019-03-15T05:59:32.437Z","comments":true,"path":"2019/03/15/rating-1-B/","link":"","permalink":"http://WigginsLi.github.io/2019/03/15/rating-1-B/","excerpt":"$\\implies$‰º†ÈÄÅÈó®(Âè™ÊúâgroupÈáåÁöÑ‰∫∫ËÉΩËøõ)$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® ÊØîËæÉÁÆÄÂçïÁöÑ$dp$Ôºå‰ΩÜÊòØÊØîËµõÊó∂Ê≤°ÊêûÂá∫Êù•(:–∑„Äç‚à†)","text":"$\\implies$‰º†ÈÄÅÈó®(Âè™ÊúâgroupÈáåÁöÑ‰∫∫ËÉΩËøõ)$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® ÊØîËæÉÁÆÄÂçïÁöÑ$dp$Ôºå‰ΩÜÊòØÊØîËµõÊó∂Ê≤°ÊêûÂá∫Êù•(:–∑„Äç‚à†) Â§ßÊÑèÔºö$N$‰∏™Êï∞ÁªÑÊàêÁöÑÂ∫èÂàóÔºåÂàÜÊàêÊï∞‰∏™ËøûÁª≠ÁöÑÂ≠êÂ∫èÂàóÔºåÊØè‰∏™Â≠êÂ∫èÂàó‰∏çË∂ÖËøá$k$‰∏™Êï∞,Â≠êÂ∫èÂàóÂÜÖÊØè‰∏™Êï∞Ë¢´‰øÆÊîπ‰∏∫ËØ•Â∫èÂàóÂÜÖÊï∞ÁöÑÊúÄÂ§ßÂÄº,Ê±ÇÊï¥‰∏™Â∫èÂàóÁöÑÂíåÊúÄÂ§ßÂÄº ÂàÜÊûêÔºö $dp[i]$Ë°®Á§∫Á¨¨$i$‰∏™Êï∞Êó∂ÊâÄËÉΩËææÂà∞ÁöÑÊúÄÂ§ßÂ∫èÂàóÂíå ÂØπ‰∫éÂΩìÂâçÊï∞Â≠óËÄåË®ÄÔºåÂèØ‰ª•ÈÄâÊã©Ëá™Â∑±ÁªÑÈòüÔºåÂíåÂâçÈù¢‰∏Ä‰∏™‰∫∫ÁªÑÈòüÔºå$\\cdots$ÔºåÂíåÂâçÈù¢$k$‰∏™‰∫∫ÁªÑÈòüÔºåÈÇ£‰πàÂ∞±Êúâ$k$ÁßçÁä∂ÊÄÅÂèØ‰ª•ËΩ¨Áßª,ÂæóÂà∞ËΩ¨ÁßªÊñπÁ®ãÔºö$$ dp[i]=max(d[i-j-1]+max(a[m])\\times(j+1)),ÂÖ∂‰∏≠j\\in[0,k),m\\in[i-j,i]$$ ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; #define maxn 10005 using namespace std; int dp[maxn]; int a[maxn]; int n,k; int main() { scanf(&quot;%d%d&quot;,&amp;n,&amp;k); for(int i=1;i&lt;=n;i++){ scanf(&quot;%d&quot;,&amp;a[i]); } for(int i=1;i&lt;=n;i++){ int maxx=a[i]; dp[i]=dp[i-1]+a[i]; for(int j=1;j&lt;k;j++){ if(i-j&lt;=0) break; maxx=max(maxx,a[i-j]); dp[i]=max(dp[i],dp[i-j-1]+maxx*(j+1)); } } cout&lt;&lt;dp[n]&lt;&lt;endl; } ÂêéËÆ∞Ôºö$dp$ÁöÑÈ¢òËøòÊòØÁªÉÂæóÂ∞ëÔºåËøô‰πàÁÆÄÂçïÁöÑËΩ¨ÁßªÈÉΩÊ≤°ÊúâÊÉ≥Âà∞ ÂÖ∂Ê¨°ÔºåÂØπ$dp$ËøòÊòØÊÄïÔºå‰∏çÊï¢ÂÅöÔºåËøô‰πüÊòØÂá∫‰∏ç‰∫ÜÁöÑÂéüÂõ†","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}],"tags":[{"name":"DP","slug":"DP","permalink":"http://WigginsLi.github.io/tags/DP/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}]},{"title":"USACO18DEC-The Bucket List„ÄêÊ®°Êãü„Äë","slug":"rating-1-A","date":"2019-03-15T00:27:19.000Z","updated":"2019-03-15T05:59:00.053Z","comments":true,"path":"2019/03/15/rating-1-A/","link":"","permalink":"http://WigginsLi.github.io/2019/03/15/rating-1-A/","excerpt":"$\\implies$‰º†ÈÄÅÈó®(Âè™ÊúâgroupÈáåÁöÑ‰∫∫ËÉΩËøõ)$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® ‰∏ÄÈÅìÊ®°ÊãüÊ∞¥È¢òÔºå‰ªÖÂÅöËÆ∞ÂΩï","text":"$\\implies$‰º†ÈÄÅÈó®(Âè™ÊúâgroupÈáåÁöÑ‰∫∫ËÉΩËøõ)$\\implies$Ê¥õË∞∑‰º†ÈÄÅÈó® ‰∏ÄÈÅìÊ®°ÊãüÊ∞¥È¢òÔºå‰ªÖÂÅöËÆ∞ÂΩï Â§ßÊÑèÔºöÂÜúÂ§´Áî®Ê°∂Ë£ÖÁâõÂ•∂Ôºå$cow_i$Âú®$s_i$Âà∞$t_i$Êó∂Èó¥ÂÜÖÊå§Â•∂ÈúÄË¶Å$b_i$‰∏™Ê°∂ÔºåÂÜúÂ§´ÂºÄÂßãÊúâ0‰∏™Ê°∂ÔºåÈúÄË¶ÅÂ§öÁöÑÊ°∂ÂèØ‰ª•Ë¥≠ÁΩÆÔºåÊ±ÇÊå§ÂÆåÂ•∂ÊúÄÂ∞ëÈúÄË¶ÅÂ§öÂ∞ëÊ°∂„ÄÇ ÂàÜÊûêÔºö ‰∏ÄÈÅìÁÆÄÂçïÊ®°ÊãüÈ¢ò ‰ª•ÂèòÈáè$lef$Ë°®Á§∫ÂΩìÂâçÊó∂Èó¥ÁÇπÂÜúÂ§´Ââ©‰∏ãÂá†‰∏™(Â∑≤Áî®Ëøá‰ΩÜÁé∞Âú®Èó≤ÁΩÆÁöÑ)Ê°∂. ËÆ∞ÂΩïÊó∂Èó¥ËΩ¥‰∏äÊØè‰∏™Êó∂Èó¥ÁÇπÊòØÂê¶ÊúâÁâõÂºÄÂßã/ÁªìÊùüÊå§Â•∂.Ëã•ÂºÄÂßãÊå§Â•∂‰∏îÂâ©‰∏ãÊ°∂‰∏çË∂≥ÔºåÈÇ£‰πàË¥≠ÁΩÆÊñ∞ÁöÑÊ°∂ÔºåËã•ÁªìÊùüÊå§Â•∂ÔºåÈÇ£‰πà$lef$Âä†‰∏äËØ•ÁâõËøòÂõûÊù•ÁöÑÊ°∂Êï∞„ÄÇ ÊúÄÂêéËæìÂá∫$lef$Âç≥ÂèØ ‰ª£Á†ÅÔºö #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; const int maxn = 105; int n,lef; int s[1005],t[1005],b[1005]; int main() { cin&gt;&gt;n; for(int i=1;i&lt;=n;i++) { int ss,tt,bb; cin&gt;&gt;ss&gt;&gt;tt&gt;&gt;bb; s[ss]=i; t[tt]=i; b[i]=bb; } lef=0; for(int i=1;i&lt;=1000;i++) { if(s[i]!=0) { if(lef &gt;= b[s[i]]) { lef-=b[s[i]]; }else{ lef=0; } } if(t[i]!=0) { lef+=b[t[i]]; } //if(i&lt;=15) cout&lt;&lt;lef&lt;&lt;endl; } cout&lt;&lt;lef&lt;&lt;endl; return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/categories/Ê®°Êãü/"}],"tags":[{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/tags/Ê®°Êãü/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://WigginsLi.github.io/categories/Ê®°Êãü/"}]},{"title":"ÂæÖË°•  < Ê†ëÁä∂Êï∞ÁªÑ+Á∫øÊÆµÊ†ë > 2019 GDUT Winter Training V","slug":"algorithm-optimize-2","date":"2019-03-13T11:35:54.000Z","updated":"2019-03-15T05:31:17.062Z","comments":true,"path":"2019/03/13/algorithm-optimize-2/","link":"","permalink":"http://WigginsLi.github.io/2019/03/13/algorithm-optimize-2/","excerpt":"$\\implies$ ‰∏ìÈ¢òÂú∞ÂùÄÂØíÂÅá‰∏ìÈ¢òÁöÑÊúÄÂêé‰∏ÄÁØá,‰∏ªË¶ÅËÆ∞ÂΩï‰∏Ä‰∏ãÊ†ëÁä∂Êï∞ÁªÑÁöÑÂ∫îÁî®ÂèäËøõÈò∂Êìç‰Ωú ËøòÊúâÁ∫øÊÆµÊ†ëÁöÑÂü∫Á°ÄËã¶ÈÄºËÇù‰∏ìÈ¢òÁöÑËøáÁ®ã‰∏≠ÔºåÂ§ß‰Ω¨Â∑≤ÁªèÂà∑Ëµ∑ÂÖ∂‰ªñÈ¢òÂ∫ì‰∫Ü(:–∑„Äç‚à†)Âä†Ê≤πÂïä„Éæ(‚óç¬∞‚àá¬∞‚óç)ÔæâÔæû","text":"$\\implies$ ‰∏ìÈ¢òÂú∞ÂùÄÂØíÂÅá‰∏ìÈ¢òÁöÑÊúÄÂêé‰∏ÄÁØá,‰∏ªË¶ÅËÆ∞ÂΩï‰∏Ä‰∏ãÊ†ëÁä∂Êï∞ÁªÑÁöÑÂ∫îÁî®ÂèäËøõÈò∂Êìç‰Ωú ËøòÊúâÁ∫øÊÆµÊ†ëÁöÑÂü∫Á°ÄËã¶ÈÄºËÇù‰∏ìÈ¢òÁöÑËøáÁ®ã‰∏≠ÔºåÂ§ß‰Ω¨Â∑≤ÁªèÂà∑Ëµ∑ÂÖ∂‰ªñÈ¢òÂ∫ì‰∫Ü(:–∑„Äç‚à†)Âä†Ê≤πÂïä„Éæ(‚óç¬∞‚àá¬∞‚óç)ÔæâÔæû Ê†ëÁä∂Êï∞ÁªÑ$\\implies$ ÂÖ•Èó®ËµÑÊñô lowbitÁöÑÂ≠óÈù¢ÁêÜËß£‰∏äÂèØËÉΩ‰ºöÊúâÁÇπÂ∞èÂõ∞Èöæ,Ê®°Êãü‰∏Ä‰∏ãÂ∞±Â•ΩÊáÇÂ§ö‰∫Ü A:Stars Â§ßÊÑèÔºöÊåây‰ªéÂ∞èÂà∞Â§ßÁöÑÈ°∫Â∫èÁªôÂá∫n‰∏™ÁÇπÁöÑÂùêÊ†á,ËÆ∞ÂΩïÊØè‰∏™ÁÇπÂ∑¶‰∏ãÊñπÁÇπÁöÑ‰∏™Êï∞$x$,ÊúÄÂêéËæìÂá∫ÊØè‰∏™‰∏™Êï∞$x$ÁöÑÁÇπÁöÑÊï∞ÁõÆ Áî®$a[i]$Ë°®Á§∫$x=i$ÁöÑÁÇπÁöÑ‰∏™Êï∞,ÈÇ£‰πàÂØπ‰∫éÁÇπ$(x_i,y_i)$,Á≠îÊ°àÂç≥‰∏∫$\\sum_{i=0}^{x_i-1} a[i]$ Ê†ëÁä∂Êï∞ÁªÑÁöÑÂ∫îÁî®‚ÄìÊ±ÇÂíå View Codec++ #include &lt;cstdio&gt; #include &lt;algorithm&gt; #include &lt;iostream&gt; #include &lt;string.h&gt; #include &lt;vector&gt; using namespace std; #define lowbit(i) i&amp;(-i) #define MAXX 32005 #define MAXN 15005 const int INf=0x3f3f3f3f; int a[MAXX],c[MAXX],level[MAXN]; int n,x,y; void add_val(int x,int p) { for(int i=x;i&lt;=MAXX;i+=lowbit(i)) c[i]+=p; } int get_sum(int x) { int res = 0; for(int i=x;i;i-=lowbit(i)) res+=c[i]; return res; } int main() { memset(level,0,sizeof(level)); memset(a,0,sizeof(a)); memset(c,0,sizeof(c)); scanf(&quot;%d&quot;,&amp;n); for(int i=1;i&lt;=n;i++) { scanf(&quot;%d %d&quot;,&amp;x,&amp;y); int s=get_sum(x+1); level[s]++; //cout&lt;&lt;s&lt;&lt;endl; add_val(x+1,1); } for(int i=0;i&lt;n;i++) { printf(&quot;%d\\n&quot;,level[i]); } return 0; } B:A Simple Problem with Integers Â§ßÊÑèÔºön‰∏™Êï∞Â≠ó,ÁªôÂÆöQ‰∏™Âå∫Èó¥ÂíåÊü•ËØ¢ÊàñÂå∫Èó¥ÂÄº‰øÆÊîπ,ËæìÂá∫ÊØèÊ¨°Êü•ËØ¢ÁöÑÂÄº ÂÖ∂ÂÆûÂ∫îËØ•ÊòØ‰∏ÄÈÅìÁ∫øÊÆµÊ†ëÊ®°ÊùøÈ¢òÔºå‰ΩÜÊòØ‰∏§‰∏™Ê†ëÁä∂Êï∞ÁªÑÁöÑËøõÈò∂Êìç‰Ωú‰πüËÉΩÂÅöÔºåÈÇ£Â∞±Â≠¶‰∏Ä‰∏ãÂêß(‚ïπ‚ñΩ‚ïπ) ‰Ωø$d[i]$ÁöÑÂâçÁºÄÂíåÁ≠â‰∫é$a[i]$,Âç≥$\\sum_{i=0}^nd[i]=a[n]$,ÈÇ£‰πàÂΩìÈúÄË¶Å‰øÆÊîπ$[l,r]$Âå∫Èó¥Êó∂ÔºåÂè™ÈúÄË¶Å$d[l]+p,d[r+1]-p$Âç≥ÂèØ ‰øÆÊîπÁöÑÈóÆÈ¢òËß£ÂÜ≥‰∫ÜÔºå‰ΩÜÊòØÊü•ËØ¢ÁöÑÈóÆÈ¢òÂ∫îËØ•Â¶Ç‰ΩïËß£ÂÜ≥ÔºüÊ≥®ÊÑèÂà∞$$ \\begin{cases} a_n=d_1+d_2+\\cdots+d_{n-1}+d_n \\\\ a_{n-1}=d_1+d_2+\\cdots+d_{n-1} \\\\ \\cdots \\\\ a_1=d_1 \\end{cases}$$Êúâ(Áõ∏ÂΩì‰∫éÁü©ÂΩ¢ÂáèÂéªÂè≥‰∏ãËßíÁöÑ‰∏âËßí)$$\\sum_{i=1}^na[i]=\\sum_{i=1}^nd[i]\\times(x+1)-\\sum_{i=2}^nd[i]\\times i$$ ÊâÄ‰ª•Êàë‰ª¨ÂèØ‰ª•ÊûÑÈÄ†‰∏§‰∏™Ê†ëÁä∂Êï∞ÁªÑÔºå‰∏Ä‰∏™Áª¥Êä§$d[i]$,‰∏Ä‰∏™Áª¥Êä§$d[i]\\times i$ Ëá≥Ê≠§ÔºåÂ∑≤Ëß£ÂÜ≥Âå∫Èó¥‰øÆÊîπÂèäÂå∫Èó¥Êü•ËØ¢Êìç‰Ωú View Codec++ #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; using namespace std; #define lowbit(i) i&amp;(-i) typedef long long ll; const int MAXN = 1e5+5; ll a[MAXN],d[MAXN],id[MAXN]; int n,q; void add_val(int x,ll p) { for(int i=x;i&lt;=n;i+=lowbit(i)) d[i]+=p,id[i]+=p*x; } ll get_sum(int x) { ll res=0; for(int i=x;i;i-=lowbit(i)) res+=d[i]*(x+1)-id[i]; return res; } int main() { scanf(&quot;%d %d&quot;,&amp;n,&amp;q); for(int i=1;i&lt;=n;i++) scanf(&quot;%lld&quot;,&amp;a[i]),add_val(i,a[i]-a[i-1]); while(q--) { char op; int l,r,p; getchar(); scanf(&quot;%c&quot;,&amp;op); if(op == &#39;Q&#39;) { scanf(&quot;%d %d&quot;,&amp;l,&amp;r); printf(&quot;%lld\\n&quot;,get_sum(r)-get_sum(l-1)); }else { scanf(&quot;%d %d %d&quot;,&amp;l,&amp;r,&amp;p); add_val(l,p); add_val(r+1,-p); } } return 0; } Á∫øÊÆµÊ†ëI:Count Color Â§ßÊÑèÔºöÁªôÂÆö‰∏ÄÈïøÂ∫¶‰∏∫LÁöÑÁ∫øÊÆµÔºåÂàùÂßãÈ¢úËâ≤ÂÖ®‰∏∫1ÔºåÊúâ‰∏§ÁßçÊìç‰ΩúÔºåC a b cË°®Á§∫$[a,b]$ÊÆµÊüìÊàêÈ¢úËâ≤c,P a bË°®Á§∫ÁªüËÆ°$[a,b]$ÂÜÖÁöÑÈ¢úËâ≤Êï∞Èáè,Âπ∂ËæìÂá∫ Á∫øÊÆµÊ†ëÊùøÂ≠êÈ¢ò ÂèØ‰ª•Áî®‰ΩçËøêÁÆóËøõË°å‰ºòÂåñÊüìËâ≤ËøáÁ®ãÂèñ‰∏Ä32‰ΩçÁöÑ‰∫åËøõÂà∂Êï∞ÔºåÁ¨¨i‰ΩçË°®Á§∫ÊòØÂê¶Êüì‰∏ä‰∫ÜiËøôÁßçÈ¢úËâ≤ ‰ª£Á†Å‰∏≠Êúâ‰∏Ä‰∏™ÈªëÁßëÊäÄÊ±Ç‰∏Ä‰∏™‰∫åËøõÂà∂Êï∞‰∏≠1ÁöÑ‰∏™Êï∞,(Êù•Ê∫êÔºöMatrix67Â§ßÁ•ûÁöÑÂçöÂÆ¢) View Codec++ #include &lt;cstdio&gt; #include &lt;string.h&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cmath&gt; #define lowbit(i) i&amp;(-i) using namespace std; typedef long long ll; const int maxn=1e5+5; int flag[4*maxn],tree[4*maxn]; inline int c1(int x) { x=(x &amp; 0x55555555) + ((x &gt;&gt;1 ) &amp; 0x55555555); x=(x &amp; 0x33333333) + ((x &gt;&gt;2 ) &amp; 0x33333333); x=(x &amp; 0x0F0F0F0F) + ((x &gt;&gt;4 ) &amp; 0x0F0F0F0F); x=(x &amp; 0x00FF00FF) + ((x &gt;&gt;8 ) &amp; 0x00FF00FF); x=(x &amp; 0x0000FFFF) + ((x &gt;&gt;16) &amp; 0x0000FFFF); return x; } void build_tree(int o,int l,int r) { flag[o]=0; tree[o]=(1&lt;&lt;1);//‰ª£Ë°®Êüì‰∏ä1Ëøô‰∏™È¢úËâ≤ if(l==r) return ; int mid = (l+r) &gt;&gt; 1; build_tree(o&lt;&lt;1,l,mid); build_tree(o&lt;&lt;1|1,mid+1,r); } void down(int o) { if(flag[o]) { flag[o&lt;&lt;1]=flag[o&lt;&lt;1|1]=flag[o]; tree[o&lt;&lt;1]=tree[o&lt;&lt;1|1]=tree[o]; flag[o]=0; } } void update(int o,int l,int r,int tl,int tr,int val) { if(tl&lt;=l&amp;&amp;r&lt;=tr) { flag[o]=val; tree[o]=(1&lt;&lt;val); return ; } down(o); int mid = (l+r) &gt;&gt; 1; if(tr&lt;=mid) update(o&lt;&lt;1,l,mid,tl,tr,val); else if(tl&gt;mid) update(o&lt;&lt;1|1,mid+1,r,tl,tr,val); else { update(o&lt;&lt;1,l,mid,tl,tr,val); update(o&lt;&lt;1|1,mid+1,r,tl,tr,val); } tree[o]=tree[o&lt;&lt;1]|tree[o&lt;&lt;1|1]; //cout&lt;&lt;o&lt;&lt;&quot; &quot;&lt;&lt;tree[o]&lt;&lt;endl; } int get_sum(int o,int l,int r,int tl,int tr) { if(tl&lt;=l&amp;&amp;r&lt;=tr) return tree[o]; down(o); int mid = (l+r) &gt;&gt;1; if(tr&lt;=mid) return get_sum(o&lt;&lt;1,l,mid,tl,tr); else if(tl&gt;mid) return get_sum(o&lt;&lt;1|1,mid+1,r,tl,tr); else { int t1=get_sum(o&lt;&lt;1,l,mid,tl,tr); int t2=get_sum(o&lt;&lt;1|1,mid+1,r,tl,tr); return t1|t2; } } int main() { int n,t,Q; scanf(&quot;%d %d %d&quot;,&amp;n,&amp;t,&amp;Q); build_tree(1,1,n); while(Q--) { char op; int l,r,p; getchar(); scanf(&quot;%c&quot;,&amp;op); if(op==&#39;C&#39;) { scanf(&quot;%d %d %d&quot;,&amp;l,&amp;r,&amp;p); if(l&gt;r) swap(l,r); update(1,1,n,l,r,p); }else { scanf(&quot;%d %d&quot;,&amp;l,&amp;r); if(l&gt;r) swap(l,r); int ans=get_sum(1,1,n,l,r); //cout&lt;&lt;ans&lt;&lt;endl; printf(&quot;%d\\n&quot;,c1(ans)); } } } H:Potted Flower Â§ßÊÑèÔºöÂæÖË°•","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Êï∞ÊçÆÁªìÊûÑ","slug":"Êï∞ÊçÆÁªìÊûÑ","permalink":"http://WigginsLi.github.io/categories/Êï∞ÊçÆÁªìÊûÑ/"}],"tags":[{"name":"Ê†ëÁä∂Êï∞ÁªÑ","slug":"Ê†ëÁä∂Êï∞ÁªÑ","permalink":"http://WigginsLi.github.io/tags/Ê†ëÁä∂Êï∞ÁªÑ/"},{"name":"Á∫øÊÆµÊ†ë","slug":"Á∫øÊÆµÊ†ë","permalink":"http://WigginsLi.github.io/tags/Á∫øÊÆµÊ†ë/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Êï∞ÊçÆÁªìÊûÑ","slug":"Êï∞ÊçÆÁªìÊûÑ","permalink":"http://WigginsLi.github.io/categories/Êï∞ÊçÆÁªìÊûÑ/"}]},{"title":"< ÂçïË∞ÉÊ†à+ÂçïË∞ÉÈòüÂàó+Áü©ÈòµÂø´ÈÄüÂπÇ > 2019 GDUT Winter Training V","slug":"algorithm-optimize-1","date":"2019-03-13T11:32:21.000Z","updated":"2019-08-09T11:06:49.661Z","comments":true,"path":"2019/03/13/algorithm-optimize-1/","link":"","permalink":"http://WigginsLi.github.io/2019/03/13/algorithm-optimize-1/","excerpt":"$\\implies$ ‰∏ìÈ¢òÂú∞ÂùÄÁÆóÊ≥ïÂæàÂ§ß‰∏ÄÈÉ®ÂàÜÊòØÈÄöËøáÂêÑÁßçÊï∞ÊçÆÁªìÊûÑÂä†‰ª•‰ºòÂåñÁöÑÂòõÊúâÊó∂ÂÄôÊòéÊòéÊÉ≥Âà∞Êé•ËøëÊ≠£Ëß£ÔºåÁªìÊûúÊ≤°Êúâ‰ºòÂåñÂ∞±T‰∫ÜËøòÊòØËõÆÂèØÊÉúÁöÑËøô‰∏™‰∏ìÈ¢òÂàùÊ≠•Êé•Ëß¶‰∏Ä‰∫õÊôÆÈÅçÁöÑÊï∞ÊçÆÁªìÊûÑ","text":"$\\implies$ ‰∏ìÈ¢òÂú∞ÂùÄÁÆóÊ≥ïÂæàÂ§ß‰∏ÄÈÉ®ÂàÜÊòØÈÄöËøáÂêÑÁßçÊï∞ÊçÆÁªìÊûÑÂä†‰ª•‰ºòÂåñÁöÑÂòõÊúâÊó∂ÂÄôÊòéÊòéÊÉ≥Âà∞Êé•ËøëÊ≠£Ëß£ÔºåÁªìÊûúÊ≤°Êúâ‰ºòÂåñÂ∞±T‰∫ÜËøòÊòØËõÆÂèØÊÉúÁöÑËøô‰∏™‰∏ìÈ¢òÂàùÊ≠•Êé•Ëß¶‰∏Ä‰∫õÊôÆÈÅçÁöÑÊï∞ÊçÆÁªìÊûÑ ÂçïË∞ÉÊ†à ËÆæÊÉ≥‰∏Ä‰∏™ÊÉÖÊôØÔºå‰∏Ä‰∏™Êï∞ÂàóaÔºåÂØπ‰∫é$i \\in [0,n]$,$d[i]$Ë°®Á§∫Âè≥ËæπÁ¨¨‰∏Ä‰∏™Â∞è‰∫é$a[i]$ÁöÑÊï∞ÁöÑÂùêÊ†áÔºåÊö¥ÂäõÂÅöÊ≥ïÊòØ$O(n^2)$,ËøêÁî®ÂçïË∞ÉÊ†àÂèØ‰ª•‰ºòÂåñËá≥$O(n)^{(1)}$ (1):Áª¥Êä§‰∏Ä‰∏™Ê†à,Â∞ÜÊï∞Âàó‰ªéÂè≥ÂæÄÂ∑¶ÂéãËøõÊ†à.ÂΩìÂéãÂÖ•‰∏Ä‰∏™Êï∞$n$Êó∂,Â¶ÇÊûúÊ†àÈ°∂ÂÖÉÁ¥†Â§ß‰∫é$n$,Âá∫Ê†à,ÈáçÂ§çËøô‰∏™Âà§Êñ≠,Áõ¥Âà∞Ê†àÈ°∂ÂÖÉÁ¥†Â∞è‰∫é$n$.ÈÇ£‰πàÊ†πÊçÆËøô‰∏™ËøáÁ®ã,Ê≠§Êó∂ÁöÑÊ†àÈ°∂ÂÖÉÁ¥†Âç≥‰∏∫nÂè≥ËæπÁ¨¨‰∏Ä‰∏™Â∞è‰∫étaÁöÑÊï∞,ËÆ∞ÂΩï$d[i]$Âç≥ÂèØ(Â∑¶Âè≥ÊñπÂêëÔºåÂ§ß‰∫éÂ∞è‰∫éÂêåÁêÜÂèØÂæó) C:Feel Good Â§ßÊÑèÔºöÁªôÂÆön‰∏™Êï∞ÁªÑÊàêÂ∫èÂàó,Ê±Ç‰∏ÄÊÆµÂå∫Èó¥,‰ΩøÂå∫Èó¥Âíå*Âå∫Èó¥ÂÜÖÊúÄÂ∞èÂÄºÁöÑÂÄºansÊúÄÂ§ß,Ê±ÇMAX ans$ n \\in [1,10^5] $ Â¶ÇÊûúÊö¥ÂäõÊ±Ç,ÂèØËÉΩÈúÄË¶Å$O(n^3)$ Áî®ÂçïË∞ÉÊ†àÈ¢ÑÂ§ÑÁêÜÂá∫ÊØè‰∏™Êï∞$i$ÔºåÂ∑¶ËæπÁ¨¨‰∏Ä‰∏™Â∞è‰∫étaÁöÑÊï∞ÁöÑ‰∏ãÊ†á$l[i]$,Âè≥ËæπÁ¨¨‰∏Ä‰∏™Â∞è‰∫étaÁöÑÊï∞‰∏ãÊ†á$r[i]$ËøôÊ†∑ÂèØ‰ª•‰øùËØÅ$l[i]-r[i]$Âå∫Èó¥ÂÜÖiÊúÄÂ∞èÔºåÈÇ£‰πàÂè™ÈúÄË¶ÅÈÅçÂéÜ$i$,Ê±Ç$ans=max(sum[l[i]-1,r[i]]*i)$Âç≥ÂèØ View Codec++ #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; #include &lt;stack&gt; #include &lt;vector&gt; using namespace std; typedef long long ll; const int INF = 0x3f3f3f3f; const int MAXN = 1e5+5; int n; ll a[MAXN],sum[MAXN],l[MAXN],r[MAXN]; stack&lt;int&gt; s; int main() { scanf(&quot;%d&quot;,&amp;n); for(int i=1;i&lt;=n;i++) { scanf(&quot;%lld&quot;,&amp;a[i]); sum[i]=sum[i-1]+a[i]; } a[0]=-1;a[n+1]=-1; s.push(0); for(int i=1;i&lt;=n;i++) { while(a[s.top()]&gt;=a[i]) s.pop(); l[i]=s.top(); s.push(i); } while(!s.empty()) s.pop(); s.push(n+1); for(int i=n;i&gt;=1;i--) { while(a[s.top()]&gt;=a[i]) s.pop(); r[i]=s.top(); s.push(i); } ll ans=-1; int index=0; for(int i=1;i&lt;=n;i++) { ll u = a[i]*(sum[r[i]-1]-sum[l[i]]); if(u&gt;ans) { ans=u; index=i; } } cout&lt;&lt;ans&lt;&lt;endl; cout&lt;&lt;l[index]+1&lt;&lt;&quot; &quot;&lt;&lt;r[index]-1&lt;&lt;endl; return 0; } L:Largest Rectangle in a Histogram Â§ßÊÑèÔºö‰∏ÄÂàóÁü©ÂΩ¢ÔºåÂÆΩÂ∫¶Âõ∫ÂÆö‰∏∫1ÔºåÈ´òÂ∫¶‰∏∫$h[i]$ÔºåÊ±ÇËÉΩÊûÑÊàêÁöÑÊúÄÂ§ßÁü©ÂΩ¢ÁöÑÈù¢ÁßØ ÊØîCÈ¢òÊõ¥Ë£∏ÁöÑÂçïË∞ÉÊ†à,ÊåâËØ•È¢òÊÄùË∑ØÂç≥ÂèØ $ans=max((r[i]-1-l[i])*h[i])$ View Codec++ #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; #include &lt;stack&gt; #include &lt;vector&gt; using namespace std; typedef long long ll; const int INF = 0x3f3f3f3f; const int MAXN = 1e5+5; int n; ll a[MAXN],sum[MAXN],l[MAXN],r[MAXN]; stack&lt;int&gt; s; int main() { while(~scanf(&quot;%d&quot;,&amp;n)&amp;&amp;n) { for(int i=1;i&lt;=n;i++) { scanf(&quot;%lld&quot;,&amp;a[i]); sum[i]=sum[i-1]+a[i]; } a[0]=-1;a[n+1]=-1; s.push(0); for(int i=1;i&lt;=n;i++) { while(a[s.top()]&gt;=a[i]) s.pop(); l[i]=s.top(); s.push(i); } while(!s.empty()) s.pop(); s.push(n+1); for(int i=n;i&gt;=1;i--) { while(a[s.top()]&gt;=a[i]) s.pop(); r[i]=s.top(); s.push(i); } ll ans=-1; for(int i=1;i&lt;=n;i++) { ll u = a[i]*(r[i]-l[i]-1); if(u&gt;ans) { ans=u; } } cout&lt;&lt;ans&lt;&lt;endl; //cout&lt;&lt;l[index]+1&lt;&lt;&quot; &quot;&lt;&lt;r[index]-1&lt;&lt;endl; } return 0; } ÂçïË∞ÉÈòüÂàó ÂçïË∞ÉÈòüÂàó‰øùËØÅÈòüÂàóÂÜÖÁöÑÂçïË∞ÉÊÄß,ÈÖçÂêà‰∏Ä‰∫õÈúÄË¶ÅËøô‰∫õÊÄßË¥®ÁöÑÁÆóÊ≥ïÔºåÊØîÂ¶ÇLISÂæÄÂæÄÊúâÂ•áÊïà G:Sliding Â§ßÊÑèÔºön‰∏™Êï∞ÁöÑÂ∫èÂàóÔºåÂ∞Ü‰∏Ä‰∏™ÂèØ‰ª•ÂåÖÂê´k‰∏™ÂÖÉÁ¥†ÁöÑ‚ÄúÁ™óÂè£‚ÄùÁΩÆ‰∫éÂ∫èÂàóÂ§¥,Âèñ‚ÄúÁ™óÂè£‚ÄùÂÜÖÁöÑÊúÄÂ§ßÂÄºÂíåÊúÄÂ∞èÂÄº,Á™óÂè£ÊØèÊ¨°ÂêëÂêéÊªëË°å‰∏ÄÊ†ºÔºåÈáçÂ§çÂèñÊúÄÂ§ßÂÄº„ÄÅÊúÄÂ∞èÂÄºÔºåÁõ¥Âà∞Âà∞ËææÂ∫èÂàóÂ∞æ ÂçïË∞ÉÈòüÂàóÁöÑÂÖ•Èó®È¢ò„ÄÇ ‰ª•ÂèñÊúÄÂ§ßÂÄº‰∏∫‰æãÔºåÁª¥Êä§‰∏Ä‰∏™ÈòüÂàóÔºåÂ∞ÜÂ∫èÂàó‰ªéÂ∑¶ÂæÄÂè≥ÊéíËøõÈòüÂàóÔºåÂΩìÂâçÂÖÉÁ¥†Â§ß‰∫éÁ≠â‰∫éÈòüÂ∞æÂÖÉÁ¥†Êó∂ÔºåÈòüÂ∞æÂÖÉÁ¥†Âá∫Èòü,ÈáçÂ§çËØ•ËøáÁ®ãÔºåÁõ¥Âà∞ÂΩìÂâçÂÖÉÁ¥†Â∞è‰∫éÈòüÂ∞æ,ÊèíÂÖ•ÈòüÂ∞æ,Âà§Êñ≠ÈòüÂ§¥ÂÖÉÁ¥†‰∏ãÊ†áÊòØÂê¶Âú®ÊªëÁ™óÂÜÖ,‰∏çÊòØÂ∞±Âá∫ÈòüÂ§¥ÔºåÂΩìÂâçÈòüÂàóÂ§¥Âç≥‰∏∫ÂΩìÂâçÊªëÁ™óÂÜÖÊúÄÂ§ßÂÄº„ÄÇ View Codec++ #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; #include &lt;vector&gt; #include &lt;cmath&gt; using namespace std; typedef long long ll; const int MAXN = 1e6+5; const int INF = 0x3f3f3f3f; int n,k,a[MAXN]; int front,tail,q[MAXN]; int main() { scanf(&quot;%d %d&quot;,&amp;n,&amp;k); for(int i=1;i&lt;=n;i++) { scanf(&quot;%d&quot;,&amp;a[i]); } front=tail=0; for(int i=1;i&lt;=n;i++) { while(front&lt;tail&amp;&amp;a[q[tail-1]]&gt;=a[i]) tail--; q[tail++]=i; while(q[tail-1]-q[front]+1&gt;k) front++; if(i&gt;=k) cout&lt;&lt;a[q[front]]&lt;&lt;&quot; &quot;; } cout&lt;&lt;endl; front=tail=0; for(int i=1;i&lt;=n;i++) { while(front&lt;tail&amp;&amp;a[q[tail-1]]&lt;=a[i]) tail--; q[tail++]=i; while(q[tail-1]-q[front]+1&gt;k) front++; if(i&gt;=k) cout&lt;&lt;a[q[front]]&lt;&lt;&quot; &quot;; } cout&lt;&lt;endl; return 0; } ‰ºòÂÖàÈòüÂàó(‰π±ÂÖ•ÁöÑ==)F:Expedition Â§ßÊÑèÔºöÂ•∂ÁâõË¶ÅÂà∞$L$Á±≥Â§ñÁöÑÊùëÂ∫ÑÂéª,Â∏¶ÁùÄ$r$ÂçáÊ±ΩÊ≤π,Ë∑Ø‰∏äÊúâ$n$‰∏™Âä†Ê≤πÁ´ô,ÈóÆÂ•∂ÁâõÊúÄÂ∞ëË¶ÅÂú®Âá†‰∏™Âä†Ê≤πÁ´ôÂä†Ê≤π Ë¥™ÂøÉÁ≠ñÁï•ÔºàÊØèÊ¨°ÊåëÂ∑≤ÁªèËµ∞ËøáÁöÑË∑Ø‰∏äÁöÑÊ≤πÊúÄÂ§öÁöÑÂä†Ê≤πÁ´ôÔºâ ‰∏ç‰∏•Ë∞®Êé®ÁêÜÔºöÂΩìÂ•∂ÁâõÁöÑËΩ¶Âú®Ë∑Ø‰∏äÊüê‰∏™ÁÇπxÊ≤°Ê≤πÊó∂ÔºåÂÅáËÆæÂ•∂ÁâõÂú®ÂâçÈù¢Êüê‰∏™Âä†Ê≤πÁ´ôÂä†‰∫ÜÊ≤πÔºåÊàë‰ª¨Áü•ÈÅìÂ•∂ÁâõÊú¨Ë∫´ÁöÑÊ≤πÈáèÂà∞xÁÇπÊó∂ÂàöÂ•ΩËÄóÂÖâÔºåÈÇ£Â•∂ÁâõÂú®xËøô‰∏™ÁÇπÊó∂ÁöÑÊ≤πÈáèÂ∞±ÂÖ®ÈÉ®Êù•Ëá™taÂä†Ê≤πÁöÑÈÇ£‰∏™Âä†Ê≤πÁ´ô.ÈÇ£ËøôÊó∂ÈÄâÊúÄÂ§öÊ≤πÁöÑÂä†Ê≤πÁ´ôÁöÑÁ≠ñÁï•ÊòæÁÑ∂Ê≠£Á°Æ„ÄÇ ÈÇ£‰πàÊàë‰ª¨ÂèØ‰ª•ÂÄüÂä©‰ºòÂÖàÈòüÂàóÂæóÂà∞Ëµ∞ËøáÁöÑÊúÄÂ§öÊ≤πÁöÑÂä†Ê≤πÁ´ô„ÄÇ View Codec++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstdio&gt; #include &lt;queue&gt; using namespace std; const int maxn = 1e6+5; int v[maxn],a[maxn],b[maxn]; int n,way,r,cnt=0; priority_queue&lt;int&gt; p; int main(){ cin&gt;&gt;n; for(int i=0;i&lt;n;i++) cin&gt;&gt;a[i]&gt;&gt;b[i]; cin&gt;&gt;way&gt;&gt;r; for(int i=0;i&lt;n;i++) v[way-a[i]]=b[i]; for(int i=0,j=r;j&gt;=0;i++,j--){ if(i&gt;=way){ cout&lt;&lt;cnt&lt;&lt;endl; return 0; } if(v[i]) p.push(v[i]); if(!p.empty()&amp;&amp;j==0){ j+=p.top(); p.pop(); cnt++; } } cout&lt;&lt;&quot;-1&quot;&lt;&lt;endl; return 0; } Áü©ÈòµÂø´ÈÄüÂπÇ Áü©ÈòµÂø´ÈÄüÂπÇÔºåÂç≥ÊôÆÈÄöÂÆûÊï∞ÁöÑÂø´ÈÄüÂπÇÈÄöËøáÈáçËΩΩÂÆûÁé∞ÂæóÂà∞„ÄÇ ÂΩìÊàë‰ª¨ÊûÑÈÄ†Âá∫ÈÄíÊé®ÊñπÁ®ãÁªÑÊó∂ÂèØ‰ª•Áî®Á∫ø‰ª£ÁöÑÊñπÊ≥ïÊûÑÈÄ†Âá∫Áü©ÈòµÊù•ËøêÁÆó D:Problem of Precision Â§ßÊÑèÔºöÂ¶ÇÂõæ Â±û‰∫é‰∏ÄÁ±ªÈ¢ò ÂåñÁÆÄ $$(\\sqrt{2}+\\sqrt{3})^2=(5+2\\sqrt{6})$$ ÊúâÂºèÂ≠ê$$a_n+b_n\\sqrt{6}=(a_{n-1}+b_{n-1}\\sqrt{6}) \\times (5+2\\sqrt{6})$$ÂÜçÂåñÁÆÄ $$5a_{n-1} + 12b_{n-1} + (2a_{n-1}+5b_{n-1})\\sqrt{6}=a_{n}+b_{n}\\sqrt{6}$$$$ \\implies \\begin{cases} 5a_{n-1}+12b_{n-1}=a_n \\\\ 2a_{n-1}+5b_{n-1}=b_n \\\\ \\end{cases}$$$$ \\implies \\begin{bmatrix} 5 &amp; 12 \\\\ 2 &amp; 3 \\\\ \\end{bmatrix} \\begin{bmatrix} a_{n-1} \\\\ b_{n-1} \\\\ \\end{bmatrix}= \\begin{bmatrix} a_n \\\\ b_n \\\\ \\end{bmatrix}$$ÈÇ£‰πàÊàë‰ª¨Áü•ÈÅìÊúÄÁªàÁªìÊûú‰∏∫$a_n+b_n\\sqrt{6},ÂÖ∂‰∏≠\\begin{bmatrix} a_n \\\\ b_n \\\\ \\end{bmatrix}=\\begin{bmatrix} 5 &amp; 12 \\\\ 2 &amp; 3 \\\\ \\end{bmatrix}^n \\times \\begin{bmatrix} a_1 \\\\ b_1 \\\\ \\end{bmatrix}$,$a_1=5,b_1=2$ÈöæÁÇπÔºÅÔºÅÔºÅ $$\\because (5+2\\sqrt{6})^n=a_n+b_n\\sqrt{6}, \\\\ (5-2\\sqrt{6})^n=a_n-b_n\\sqrt{6},\\\\ \\therefore (5+2\\sqrt{6})^n+(5-2\\sqrt{6})^n=2\\times a_n \\\\ \\because (5-2\\sqrt{6})^n&lt;0.102 \\\\ \\therefore \\lfloor (5+2\\sqrt{6})^n \\rfloor=2 \\times a_n-1$$ ËØÅÊØï Â•óÁî®Áü©ÈòµÂø´ÈÄüÂπÇÊ®°Êùø(ÂÖ∑‰ΩìÁúã‰ª£Á†Å) View Codec++ #include &lt;cstdio&gt; #include &lt;string.h&gt; #include &lt;cmath&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;vector&gt; #include &lt;queue&gt; using namespace std; const int mod=1024; struct martix{ int mo[3][3]; martix(){ memset(mo,0,sizeof(mo)); } }; martix q; martix mul(martix a,martix b) { martix c; for(int i=0;i&lt;2;i++) { for(int j=0;j&lt;2;j++) { for(int k=0;k&lt;2;k++) { c.mo[i][j]=(c.mo[i][j]+a.mo[i][k]*b.mo[k][j])%mod; } } } return c; } martix powmo(martix a,int n) { martix T; for(int i=0;i&lt;2;i++) { T.mo[i][i]=1; } while(n) { if(n&amp;1) T=mul(a,T); n&gt;&gt;=1; a=mul(a,a); } return T; } int main() { int t; cin&gt;&gt;t; q.mo[0][0]=5;q.mo[0][1]=12;q.mo[1][0]=2;q.mo[1][1]=5; while(t--) { int n; cin&gt;&gt;n; martix res=powmo(q,n); cout&lt;&lt;(2*res.mo[0][0]-1)%mod&lt;&lt;endl; } return 0; } K:So Easy! Â§ßÊÑèÔºöÂ¶ÇÂõæ$0&lt; a, m &lt; 2^{15}, (a-1)^2&lt; b &lt; a^2, 0 &lt; b, n &lt; 2^{31}$ Â•óÁî®DÈ¢òÊ≠•È™§,ÂèØ‰ª•ÂæóÂà∞$$ \\begin{bmatrix} x_n \\\\ y_n \\end{bmatrix}= \\begin{bmatrix} a &amp; b \\\\ 1 &amp; a \\end{bmatrix} \\times \\begin{bmatrix} x_{n-1} \\\\ y_{n-1} \\end{bmatrix}$$$$ \\because (a+\\sqrt{b})^n+(a-\\sqrt{b})^n=x_n+y_n\\sqrt{b}+x_n+y_n\\sqrt{b}=2x_n \\\\ \\because (a-\\sqrt{b})^n&lt;1 \\\\ \\therefore \\lceil (a+\\sqrt{b})^n \\rceil = 2x_n$$ ÊúÄÂêéÂ•óÁü©ÈòµÂø´ÈÄüÂπÇÊ®°ÊùøÂï¶ View Codec++ #include &lt;cstdio&gt; #include &lt;string.h&gt; #include &lt;cmath&gt; #include &lt;algorithm&gt; #include &lt;iostream&gt; using namespace std; typedef long long ll; ll a,b,n,m; struct martix { ll mo[3][3]; martix() { memset(mo,0,sizeof(mo)); } }; martix mul(martix a,martix b) { martix c; for(int i=0;i&lt;2;i++) { for(int j=0;j&lt;2;j++) { for(int k=0;k&lt;2;k++) { c.mo[i][j]=(c.mo[i][j]+a.mo[i][k]*b.mo[k][j])%m; } } } return c; } martix powmo(martix a,ll p) { martix T; for(int i=0;i&lt;2;i++) { T.mo[i][i]=1; } while(p) { if(p&amp;1) T=mul(T,a); p&gt;&gt;=1; a=mul(a,a); } return T; } int main() { while(cin&gt;&gt;a&gt;&gt;b&gt;&gt;n&gt;&gt;m) { martix q; q.mo[0][0]=a;q.mo[0][1]=b;q.mo[1][0]=1;q.mo[1][1]=a; martix res=powmo(q,n); cout&lt;&lt;2*res.mo[0][0]%m&lt;&lt;endl; } return 0; } E:Queuing Â§ßÊÑèÔºöÁî®f,m,ÊûÑÊàêÈïøÂ∫¶‰∏∫$2^L$ÁöÑÂ≠óÁ¨¶‰∏≤,Â¶ÇÊûúÂê´Êúâfmf,fffÁöÑÂ≠ê‰∏≤ÔºåÂàô‰∏ç‰∏∫ÂÆâÂÖ®ÁöÑ,Ê±ÇÂÆâÂÖ®ÁöÑÂ≠óÁ¨¶‰∏≤‰∏™Êï∞$mod M$ Â¶ÇÊûúÁ¨¨$n$‰ΩçÊòØ$f$ÔºåÂÆÉÂâçÈù¢ÊòØ$f$Êó∂$(ff)$ÔºåÂÜçÂâç‰∏Ä‰ΩçÂøÖÈ°ªÊòØ$m(mff)$ÔºåÂÜçÂâç‰∏Ä‰ΩçËøòÂøÖÈ°ªÊòØ$m(mmff)$ÔºåÊâÄ‰ª•Êúâ$f(n-4)$ÁßçÔºõÂÆÉÂâçÈù¢ÊòØ$m$Êó∂$(mf)$ÔºåÂÜçÂâç‰∏Ä‰ΩçÂøÖÈ°ªÊòØ$m(mmf)$ÔºåÂÜçÂâçÂ∞±‰ªªÊÑè‰∫ÜÔºåÊâÄ‰ª•Êúâ$f(n-3)$Áßç Á¨¨$n$‰ΩçÊòØ$m$ÔºåÂÆÉÂâçÈù¢ÂèØ‰ª•ÊòØ‰ªªÊÑèÁöÑÔºåÊâÄ‰ª•Êúâ$f(n-1)$Áßç Áªº‰∏äÊâÄËø∞Ôºö$ ans=f(n-1)+f(n-3)+f(n-4) $ Âåñ‰∏∫Áü©ÈòµÂºèÔºåÂç≥$$ \\begin{bmatrix} f(n) \\\\ f(n-1) \\\\ f(n-2) \\\\ f(n-3) \\end{bmatrix}= \\begin{bmatrix} 1&amp;0&amp;1&amp;1 \\\\ 1&amp;0&amp;0&amp;0 \\\\ 0&amp;1&amp;0&amp;0 \\\\ 0&amp;0&amp;1&amp;0 \\end{bmatrix} \\begin{bmatrix} f(n-1) \\\\ f(n-2) \\\\ f(n-3) \\\\ f(n-4) \\end{bmatrix}$$ ‰ªøÁÖßD„ÄÅKÈ¢òÂ•óÁü©ÈòµÂø´ÈÄüÂπÇÊ®°ÊùøÂç≥ÂèØ View Codec++ #include &lt;cstdio&gt; #include &lt;string.h&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cmath&gt; using namespace std; typedef long long ll; const int maxn = 1e6+5; int l,m,f[maxn]; struct martix { int mo[5][5]; martix() { memset(mo,0,sizeof(mo)); } }; martix mul(martix a,martix b) { martix c; for(int i=1;i&lt;=4;i++) { for(int j=1;j&lt;=4;j++) { for(int k=1;k&lt;=4;k++) { c.mo[i][j]=(c.mo[i][j]+a.mo[i][k]*b.mo[k][j])%m; } } } return c; } martix powmo(martix a,ll n) { martix T; for(int i=1;i&lt;=4;i++) { T.mo[i][i]=1; } while(n) { if(n&amp;1) T=mul(T,a); n&gt;&gt;=1; a=mul(a,a); } return T; } int main() { f[0]=0;f[1]=2;f[2]=4;f[3]=6;f[4]=9; martix q; while(cin&gt;&gt;l&gt;&gt;m) { if(l&lt;=4) { cout&lt;&lt;f[l]%m&lt;&lt;endl; continue; } q.mo[1][1]=1;q.mo[1][2]=0;q.mo[1][3]=1;q.mo[1][4]=1; q.mo[2][1]=1;q.mo[2][2]=0;q.mo[2][3]=0;q.mo[2][4]=0; q.mo[3][1]=0;q.mo[3][2]=1;q.mo[3][3]=0;q.mo[3][4]=0; q.mo[4][1]=0;q.mo[4][2]=0;q.mo[4][3]=1;q.mo[4][4]=0; q=powmo(q,l-4); ll ans=0; for(int i=1;i&lt;=4;i++) { ans=(ans+q.mo[1][i]*f[4-i+1])%m; } cout&lt;&lt;ans&lt;&lt;endl; } return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Êï∞ÊçÆÁªìÊûÑ","slug":"Êï∞ÊçÆÁªìÊûÑ","permalink":"http://WigginsLi.github.io/categories/Êï∞ÊçÆÁªìÊûÑ/"}],"tags":[{"name":"Áü©ÈòµÂø´ÈÄüÂπÇ","slug":"Áü©ÈòµÂø´ÈÄüÂπÇ","permalink":"http://WigginsLi.github.io/tags/Áü©ÈòµÂø´ÈÄüÂπÇ/"},{"name":"ÂçïË∞ÉÊ†à","slug":"ÂçïË∞ÉÊ†à","permalink":"http://WigginsLi.github.io/tags/ÂçïË∞ÉÊ†à/"},{"name":"ÂçïË∞ÉÈòüÂàó","slug":"ÂçïË∞ÉÈòüÂàó","permalink":"http://WigginsLi.github.io/tags/ÂçïË∞ÉÈòüÂàó/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Êï∞ÊçÆÁªìÊûÑ","slug":"Êï∞ÊçÆÁªìÊûÑ","permalink":"http://WigginsLi.github.io/categories/Êï∞ÊçÆÁªìÊûÑ/"}]},{"title":"ÂæÖË°• < Âü∫Á°ÄÊï∞ËÆ∫ > 2019 GDUT Winter Training IV","slug":"sltrain","date":"2019-03-13T11:17:16.000Z","updated":"2019-03-15T05:30:28.350Z","comments":true,"path":"2019/03/13/sltrain/","link":"","permalink":"http://WigginsLi.github.io/2019/03/13/sltrain/","excerpt":"$\\implies$ ‰∏ìÈ¢òÂú∞ÂùÄ","text":"$\\implies$ ‰∏ìÈ¢òÂú∞ÂùÄ","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Êï∞ËÆ∫","slug":"Êï∞ËÆ∫","permalink":"http://WigginsLi.github.io/categories/Êï∞ËÆ∫/"}],"tags":[],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Êï∞ËÆ∫","slug":"Êï∞ËÆ∫","permalink":"http://WigginsLi.github.io/categories/Êï∞ËÆ∫/"}]},{"title":"ÂæÖË°• < ÂõæËÆ∫Âü∫Á°Ä > 2019 GDUT Winter Training IV","slug":"tltrain","date":"2019-03-13T11:16:43.000Z","updated":"2019-03-15T05:30:20.205Z","comments":true,"path":"2019/03/13/tltrain/","link":"","permalink":"http://WigginsLi.github.io/2019/03/13/tltrain/","excerpt":"$\\implies$ ‰∏ìÈ¢òÂú∞ÂùÄ","text":"$\\implies$ ‰∏ìÈ¢òÂú∞ÂùÄ","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"ÂõæËÆ∫","slug":"ÂõæËÆ∫","permalink":"http://WigginsLi.github.io/categories/ÂõæËÆ∫/"}],"tags":[],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"ÂõæËÆ∫","slug":"ÂõæËÆ∫","permalink":"http://WigginsLi.github.io/categories/ÂõæËÆ∫/"}]},{"title":"ÁªÑÂêàÊï∞ÂÖ¨Âºè","slug":"zhsgs","date":"2019-03-12T16:02:47.000Z","updated":"2019-03-15T05:30:09.790Z","comments":true,"path":"2019/03/13/zhsgs/","link":"","permalink":"http://WigginsLi.github.io/2019/03/13/zhsgs/","excerpt":"Êó†Â•àÊï∞Â≠¶Â§™Ëèú‰∫ÜÔºåÂºÄ‰∏ÄÁØáÂçöÊñáÊù•ËÆ∞‰∏Ä‰∏ãÂÖ¨Âºè(:–∑„Äç‚à†)ËØÅÊòéÁöÑËøáÁ®ãÂÖàÁïô‰∏™ÂùëÂêßÔºåÊàëÂ§™Ëèú‰∫Ü‰∏ç‰ºöËØÅÊòé‰∏çÂÆöÊúüÊõ¥Êñ∞ing","text":"Êó†Â•àÊï∞Â≠¶Â§™Ëèú‰∫ÜÔºåÂºÄ‰∏ÄÁØáÂçöÊñáÊù•ËÆ∞‰∏Ä‰∏ãÂÖ¨Âºè(:–∑„Äç‚à†)ËØÅÊòéÁöÑËøáÁ®ãÂÖàÁïô‰∏™ÂùëÂêßÔºåÊàëÂ§™Ëèú‰∫Ü‰∏ç‰ºöËØÅÊòé‰∏çÂÆöÊúüÊõ¥Êñ∞ing Âü∫Á°ÄÂÖ¨Âºè ÈÄöÈ°πÂÖ¨Âºè $$ C_n^m = \\frac {n!}{m!(n-m)!} $$ËØÅÊòéÔºöÁï• $$ C_n^m = C_n^{n-m}$$ËØÅÊòéÔºöÂèØÁî±ÈÄöÈ°πÂÖ¨ÂºèÊé®Âá∫ $$ C_n^m = C_{n-1}^{m-1} + C_{n-1}^m $$ËØÅÊòéÔºö $$ \\sum_{i=0}^m C_{n+i}^i = C_{n+m+1}^m $$ËØÅÊòéÔºö $$ \\sum_{i=0}^n C_{n}^i = 2^n $$ËØÅÊòéÔºöÊé®ÂπøÔºö$$ \\implies \\sum_{i=0}^n C_{n}^i*x^i = (x+1)^n $$ ËøõÈò∂ÂÖ¨ÂºèÔºö $$ C_n^m * C_m^r = C_n^r * C_{n-r}^{m-r} $$ËØÅÊòéÔºö ÂæÖË°•‚Ä¶ $Lucas$ÂÆöÁêÜ: $$ C_n^m \\% p= C_{n/p}^{m/p}*C_{n\\%p}^{m\\%p} $$ËØÅÊòéÔºö ÂèÇËÄÉÂçöÂÆ¢Ôºö(1)litble","categories":[{"name":"ÁªÑÂêàÊï∞Â≠¶","slug":"ÁªÑÂêàÊï∞Â≠¶","permalink":"http://WigginsLi.github.io/categories/ÁªÑÂêàÊï∞Â≠¶/"}],"tags":[{"name":"ÁªÑÂêàÊï∞","slug":"ÁªÑÂêàÊï∞","permalink":"http://WigginsLi.github.io/tags/ÁªÑÂêàÊï∞/"}],"keywords":[{"name":"ÁªÑÂêàÊï∞Â≠¶","slug":"ÁªÑÂêàÊï∞Â≠¶","permalink":"http://WigginsLi.github.io/categories/ÁªÑÂêàÊï∞Â≠¶/"}]},{"title":"< ÁªÑÂêàÊï∞Â≠¶ÂàùÊ≠• > 2019 GDUT Winter Training III","slug":"zhmath-training","date":"2019-03-07T00:36:57.000Z","updated":"2019-08-09T11:07:13.308Z","comments":true,"path":"2019/03/07/zhmath-training/","link":"","permalink":"http://WigginsLi.github.io/2019/03/07/zhmath-training/","excerpt":"$\\implies$‰∏ìÈ¢òÂú∞ÂùÄÊï∞Â≠¶‰πüÊòØ$ACM$ÈáåÈù¢ÈùûÂ∏∏ÈáçË¶ÅÁöÑ‰∏ÄÈÉ®ÂàÜ,ËøôÂÖ∂‰∏≠Â∞±ÂåÖÊã¨ÁªÑÂêàÊï∞Â≠¶ÊÑüËßâ‰∏ìÈ¢òÈáåÈù¢ÁöÑÈ¢òËøòÊòØ‰∏çÂ§üÔºåÊ≤°ËÉΩÊâìÂá∫ÊÑüËßâ(:–∑„Äç‚à†)ÁªßÁª≠ÈíªÁ†î„ÄäÁªÑÂêàÊï∞Â≠¶„ÄãÈªë‰π¶„Éæ(‚óç¬∞‚àá¬∞‚óç)ÔæâÔæû","text":"$\\implies$‰∏ìÈ¢òÂú∞ÂùÄÊï∞Â≠¶‰πüÊòØ$ACM$ÈáåÈù¢ÈùûÂ∏∏ÈáçË¶ÅÁöÑ‰∏ÄÈÉ®ÂàÜ,ËøôÂÖ∂‰∏≠Â∞±ÂåÖÊã¨ÁªÑÂêàÊï∞Â≠¶ÊÑüËßâ‰∏ìÈ¢òÈáåÈù¢ÁöÑÈ¢òËøòÊòØ‰∏çÂ§üÔºåÊ≤°ËÉΩÊâìÂá∫ÊÑüËßâ(:–∑„Äç‚à†)ÁªßÁª≠ÈíªÁ†î„ÄäÁªÑÂêàÊï∞Â≠¶„ÄãÈªë‰π¶„Éæ(‚óç¬∞‚àá¬∞‚óç)ÔæâÔæû ÂàùÊ≠•Áü•ËØÜÂÇ®Â§á Â¢ôË£ÇÊé®Ëçê$ACdreamers$Â§ßÁ•ûÁöÑÂçöÂÆ¢(‰∏çÂè™ÊòØËøô‰∏ÄÁØá),Êï∞Â≠¶Â§™Âº∫Âï¶,ËÉΩÂ≠¶Âà∞ÂæàÂ§ö%%%% Âü∫Êú¨ÁöÑÁªÑÂêàÊï∞ÂÖ¨Âºè$C_n^m = \\frac {n!}{m!(n-m)!}$ Áî±‰∏äÂºèÂª∂‰º∏ÁöÑ$C_n^m = C_{n-1}^{m-1} + C_{n-1}^m \\implies$ÊûÑÈÄ†Êù®Ëæâ‰∏âËßí ÂÆπÊñ•ÂéüÁêÜ(Ê¶ÇÂøµ) „ÄêËøõÈò∂Â∫îÁî®ËµÑÊñôPDF„Äë È∏ΩÁ¨ºÂéüÁêÜ Ë¥®Âõ†Êï∞ÂàÜËß£ ÂîØ‰∏ÄÂàÜËß£ÂÆöÁêÜ(ÁÆóÊúØÂü∫Êú¨ÂÆöÁêÜ)$\\implies n = p_1^{a_1} \\times p_2^{a_2} \\times p_3^{a_3} \\times \\cdots \\times p_n^{a_n}$ ÈÄÜÂÖÉ(Ëøô‰∏™Â•ΩÂÉèÂæóÂΩíÂú®Êï∞ËÆ∫Ôºå‰ΩÜÂ±û‰∫éÊú¨ËäÇÁöÑÂâçÊèêÁü•ËØÜ)$\\circ$ÊãìÂ±ïÊ¨ßÂá†ÈáåÂæóÊ±ÇÈÄÜÂÖÉ$\\circ$Ë¥πÈ©¨Â∞èÂÆöÁêÜÊ±ÇÈÄÜÂÖÉ$\\circ$Á∫øÊÄßÊ±ÇÈÄÜÂÖÉ-$Lucas$ÂÆöÁêÜÔºàÊ±Ç$C_n^m mod P$Ôºâ È¢òÁõÆËÆ≤Ëß£Ë¥®Âõ†Êï∞ÂàÜËß£+ÂÆπÊñ•E:Happy 2006 Â§ßÊÑè:‰∏éÊï∞$n$‰∫íË¥®ÁöÑÊï∞ÂçáÂ∫èÊéíÂàóÔºåËæìÂá∫Á¨¨$k$‰∏™Êï∞($n \\in [1,1e6],k \\in [1,1e8]$) Êàë‰ª¨ÂèØ‰ª•Ê†πÊçÆ (Êï∞ÊçÆËåÉÂõ¥) ‰∫íË¥®Êï∞‰∏™Êï∞ÂçïÂ¢ûÁöÑÊÄßË¥®ÊÉ≥Âà∞ÔºåÂ¶ÇÊûúËÉΩÊ±ÇÂá∫ $[0,x]$ ‰∏≠‰∏é $n$ ‰∫íË¥®ÁöÑÊï∞ÁöÑ $‰∏™Êï∞^{(1)}$ ÔºåÈÇ£‰πàÂ∞±ÂèØ‰ª•‰∫åÂàÜËøô‰∏™$x$ÔºåÊØîËæÉ $check(x)$ ‰∏é $k$ ÁöÑÂ§ßÂ∞èÂÖ≥Á≥ªÂç≥ÂèØ (1):ÂØπ $n$ ÂàÜËß£Ë¥®Âõ†Êï∞,ÁÑ∂ÂêéÂà©Áî®ÂÆπÊñ•ÂéüÁêÜÊ±ÇÂá∫[0,x]ËåÉÂõ¥ÂÜÖÊâÄÊúâ‰∏én‰∫íË¥®ÁöÑÊï∞$$ans = \\frac {x}{p[1]} + \\frac {x}{p[2]} + \\cdots + \\frac {x}{p[n]} - \\frac {x}{p[1]p[2]} + \\cdots + (-1)^{n+1} \\times \\frac {x}{p[1]p[2] \\cdots p[n]}$$ View Code cpp #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstdio&gt; #include &lt;cmath&gt; #include &lt;string.h&gt; using namespace std; typedef long long ll; ll a[50],b[1010],cnt; int m,k; void div(ll num) { cnt=0; for(ll i=2;i*i&lt;=num;i++) { if(num%i==0) { while(num%i==0) num/=i; a[++cnt]=i; } } if(num&gt;1) a[++cnt]=num; } ll get_cnt(ll mid)//1--mid‰πãÈó¥‰∏én‰∫íË¥®ÁöÑÊï∞ÊúâÂ§öÂ∞ë‰∏™ { ll g=0,sum=mid,t; b[++g]=1; for(ll i=1; i&lt;=cnt; i++) { t=g; for(ll j=1; j&lt;=g; j++) { b[++t]=b[j]*a[i]*-1; sum+=mid/b[t]; } g=t; } return sum; } int main() { while(cin&gt;&gt;m&gt;&gt;k) { div(m); ll l=0,r=1e18,mid; while(l&lt;r-1) { mid=(l+r)/2; ll u=get_cnt(mid); if(u&gt;=k) { r=mid; }else { l=mid+1; } } if(get_cnt(l)==k) cout&lt;&lt;l&lt;&lt;endl; else cout&lt;&lt;r&lt;&lt;endl; } return 0; } F:Sky Code Â§ßÊÑèÔºö$n$‰∏™Êï∞Â≠ó‰∏≠ÊâæÂá∫4‰∏™Êï∞Â≠óÁöÑ$gcd$‰∏∫1(ps:‰∏çÊòØ‰∏§‰∏§‰∫íË¥®),Ê±ÇËÉΩÊâæÂá∫Â§öÂ∞ëÁªÑËøôÊ†∑ÁöÑ4‰∏™Êï∞Â≠ó Áõ¥Êé•Ê±ÇÂÄºÊØîËæÉÂõ∞ÈöæÔºåÊàë‰ª¨ÂèØ‰ª•ÂèçËøáÊù•ÊÉ≥ÔºåÊ±ÇÊúâ$sum$ÁªÑÊï∞Â≠óÁöÑ$gcd$‰∏ç‰∏∫$1^{(1)}$,ÂÜçÊ±Ç$C_n^4 - sum$ (1):Êàë‰ª¨ÂØπ‰∫éÊØè‰∏™Êï∞Â≠óËøõË°åË¥®Âõ†Êï∞ÂàÜËß£ÔºåÂπ∂ÁªüËÆ°ÊØè‰∏™Ë¥®Âõ†Â≠ê$p[i]$(‰∏ç‰∏∫1)ÁöÑ‰∏™Êï∞$num[p[i]]$ÔºåÈÇ£‰πàÂØπ‰∫éÊØè‰∏™Ë¥®Âõ†Â≠êÔºåËÉΩÁªÑÊàêÁöÑÁªÑÊï∞‰∏∫$C_{num[p[i]]}^4$‰πãÂêéÂØπÊØè‰∏™Ë¥®Âõ†Â≠êËøõË°åÂÆπÊñ•Âç≥ÂèØ View Code ‚Äãcpp #include &lt;iostream&gt; #include &lt;cstdio&gt; #include &lt;cstring&gt; using namespace std; typedef long long ll; const int maxn = 1e4+10; int n,m; int cnt[maxn];//cnt[i]ËÆ∞ÂΩïÊâÄÁªôÊï∞ÊçÆ‰∏≠ÔºåÂê´ÊúâÂõ†Êï∞iÁöÑ‰∏™Êï∞ÊúâÂá†‰∏™ int num[maxn];//num[i]ËÆ∞ÂΩïÊâÄÁªôÊï∞ÊçÆ‰∏≠ÔºåÂõ†Êï∞i‰∏≠Âê´ÊúâÂá†‰∏™‰∏çÂêåÁ¥†Âõ†Â≠ê ll c[maxn];//c[i]Ë°®Á§∫ÁªÑÂêàÊï∞C(i,4) int prime[maxn]; void init(){ for(ll i = 4; i &lt; maxn; i++){ c[i] = i * (i - 1) * (i - 2) * (i - 3) / 24; } } void divide(int n){ int tot = 0; for(int i = 2; i * i &lt;= n; i++){ if(n % i == 0){ prime[tot++] = i; while(n % i == 0) n /= i; } } if(n &gt; 1) prime[tot++] = n;//ÂàÜËß£Ë¥®Âõ†Â≠ê for(int i = 1; i &lt; (1&lt;&lt;tot); i++){//Êûö‰∏æË¥®Âõ†Â≠êÁªÑÂêàÊÉÖÂÜµÂæóÂà∞ÊâÄÊúâÂèØËÉΩÂõ†Â≠ê int tmp = 1; int sum = 0; for(int j = 0; j &lt; tot; j++){ if(i &amp; (1 &lt;&lt; j)){ tmp * = prime[j]; sum++; } } cnt[tmp]++;//ËØ¥ÊòéÊï∞nÂåÖÂê´tmpËøôÁßçÂõ†Â≠êÔºåÊâÄ‰ª•‰∏™Êï∞+1 num[tmp] = sum;//tmpËøôÁßçÂõ†Â≠êÂÜÖÂê´Êúâsum‰∏™‰∏çÂêåË¥®Âõ†Â≠ê } } int main(){ init(); memset(num,0,sizeof(num)); while(scanf(&quot;%d&quot;,&amp;n) != EOF){ memset(cnt,0,sizeof(cnt)); for(int i = 0; i &lt; n; i++){ scanf(&quot;%d&quot;,&amp;m); divide(m);//Ë¥®Âõ†Â≠êÂàÜËß£ÁªüËÆ°Áõ∏ÂÖ≥Êï∞ÊçÆ } for(int i=2;i&lt;=n;i++) {cout&lt;&lt;cnt[i]&lt;&lt;&quot; &quot;;}cout&lt;&lt;endl; for(int i=2;i&lt;=n;i++) {cout&lt;&lt;num[i]&lt;&lt;&quot; &quot;;}cout&lt;&lt;endl; ll ans = 0; for(int i = 2; i &lt; maxn; i++){ if(cnt[i] &gt;= 4){ if(num[i] &amp; 1) ans += c[cnt[i]];//Âõ†Â≠êi‰∏≠Âê´ÊúâÁöÑË¥®Âõ†Â≠êÊï∞‰∏∫Â•áÊï∞Âä† else ans -= c[cnt[i]];//Âê¶ÂàôÂáè } } printf(&quot;%lld\\n&quot;,c[n]-ans); } return 0; } G:Co-prime Â§ßÊÑèÔºöÁªôÂá∫$n$,Ê±Ç$[A,B]$ËåÉÂõ¥ÂÜÖ‰∏é$n$‰∫íË¥®ÁöÑÊï∞ÁöÑ‰∏™Êï∞ EÈ¢òÁöÑÈÄÄÂåñÁâà,Âè™ÈúÄË¶ÅÊ±Ç $x \\in (0,A]$ Âèä $x \\in (0,B]$ ÂÜÖ‰∏é $n$ ‰∫íË¥®ÁöÑÊï∞ÈáèÂÜçÁõ∏ÂáèÂç≥ÂèØ$\\implies$Ë¥®Âõ†Êï∞ÂàÜËß£„ÄÅÂÆπÊñ•ÂéüÁêÜ View Code ‚Äãcpp #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstdio&gt; #include &lt;cmath&gt; #include &lt;string.h&gt; using namespace std; typedef long long ll; ll a[50],b[1010],cnt,n,m,p; int T; void div(ll num) { cnt=0; for(ll i=2;i*i&lt;=num;i++) { if(num%i==0) { while(num%i==0) num/=i; a[++cnt]=i; } } if(num&gt;1) a[++cnt]=num; } ll get_cnt(ll mid)//1--mid‰πãÈó¥‰∏én‰∫íË¥®ÁöÑÊï∞ÊúâÂ§öÂ∞ë‰∏™ { ll g=0,sum=mid,t; b[++g]=1; for(ll i=1; i&lt;=cnt; i++) { t=g; for(ll j=1; j&lt;=g; j++) { b[++t]=b[j]*a[i]*-1; //cout&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;j&lt;&lt;&quot; &quot;&lt;&lt;b[t]&lt;&lt;endl; sum+=mid/b[t]; } g=t; } return sum; } int main() { cin&gt;&gt;T; int t=0; while(++t&lt;=T) { cin&gt;&gt;n&gt;&gt;m&gt;&gt;p; div(p); cout&lt;&lt;&quot;Case #&quot;&lt;&lt;t&lt;&lt;&quot;: &quot;; cout&lt;&lt;get_cnt(m)-get_cnt(n-1)&lt;&lt;endl; } return 0; } ÁªÑÂêàÊï∞(Êù®Ëæâ‰∏âËßí+lucasÂÆöÁêÜ)H:chess Â§ßÊÑèÔºöÂú®$n*m$ÁöÑÊ£ãÁõò‰∏≠ÊëÜÊúÄÂ§öÊï∞ÈáèÁöÑÊ£ãÂ≠êÔºå‰Ωø‰ªñ‰ª¨‰∫í‰∏çÂú®Âêå‰∏ÄË°åÂêå‰∏ÄÂàóÔºå‰∏î‰∏§Ê£ãÂ≠ê‰∏≠Ë°åÂè∑Â∞èÁöÑÔºåÂàóÂè∑‰∏ÄÂÆöÂ§ß ÂÅáËÆæ$n&gt;m$,ÊîæÁΩÆÊúÄÂ§öÊï∞ÈáèÁöÑÊ£ãÂ≠êÂç≥ÊØè‰∏ÄÂàóÈÉΩÊîæÁΩÆ‰∏Ä‰∏™Ôºå‰∏îÈ¢òÁõÆÈôêÂà∂‰∫ÜÊ£ãÂ≠êÊëÜÊîæÈ°∫Â∫èÔºåÈÇ£‰πàÂ∞±ÂèØ‰ª•$n$Ë°å‰∏≠ÈÄâÂá∫$m$‰∏™Êù•ÊåâÈ°∫Â∫èÊëÜÊîæÊ£ãÂ≠ê,ÁªìÊûúÂç≥‰∏∫$C_n^m$ Êï∞ÊçÆËåÉÂõ¥ÊØîËæÉÂ∞èÔºåÂèØ‰ª•Áî®Êù®Ëæâ‰∏âËßíÈ¢ÑÂ§ÑÁêÜÂá∫ÁªÑÂêàÊï∞ View Code ‚Äãcpp #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstdio&gt; #include &lt;string.h&gt; #include &lt;cmath&gt; using namespace std; typedef long long ll; const int mod=1e9+7; const int maxn=1005; ll c[maxn][maxn]; int T,n,m; void init() { c[0][0]=1; c[1][0]=1; c[1][1]=1; for(int i=2;i&lt;=1001;i++) { c[i][0]=1; for(int j=1;j&lt;=i;j++) { c[i][j]=(c[i-1][j-1]%mod+c[i-1][j]%mod)%mod; } } } int main() { init(); cin&gt;&gt;T; while(T--) { cin&gt;&gt;n&gt;&gt;m; if(m&gt;n) swap(m,n); cout&lt;&lt;c[n][m]&lt;&lt;endl; } return 0; } I:Saving Beans Â§ßÊÑèÔºöÂú®$n$Ê£µÊ†ë(ÊØèÊ£µÊ†ëÂèØ‰ª•‰∏çÊîæÔºåÊúÄÂ§öÂèØ‰ª•ÊîæÊó†Êï∞‰∏™)‰∏äÊúÄÂ§öÊîæ$m$‰∏™ÊûúÂ≠êÁöÑÊñπÊ°àÊï∞ ËÄÉËôëÂè™Êîæ$m$‰∏™ÊûúÂ≠êÔºåÂàôÊ†πÊçÆÈöîÊùøÊ≥ïÊ±ÇÂæóÊñπÊ°àÊï∞‰∏∫$C_{n+m-1}^{n-1}$$ps$:Áõ∏ÂΩì‰∫éÊúâ$n+m$‰∏™ÊûúÂ≠êÔºåÊúâ$n+m-1$‰∏™Á©∫ÈöôÔºåÊèí$n-1$‰∏™ÊùøÔºåÂàÜÊàê$n$‰∏™ÈÉ®ÂàÜ,ÁÑ∂ÂêéÊØè‰∏™ÈÉ®ÂàÜÁöÑÊûúÂ≠êÊï∞Âáè‰∏ÄÂç≥‰∏∫ÊØèÊ£µÊ†ë‰∏äÁöÑÊûúÂ≠êÊï∞ ÂêåÁêÜÔºåÂΩìÊúâ$x \\in [0,m)$‰∏™ÊûúÂ≠êÊó∂ÔºåÊñπÊ°àÊï∞‰∏∫$C_{n+x-1}^{n-1}$ÔºåÂæó:$$ans = \\sum_{i=1}^m C_{n+i-1}^{n-1}$$$$= \\sum_{i=1}^m C_{n+i-1}^{i}$$$$= C_{n+m}^m$$Ê≠§Â§ÑÈìæÊé•ÁªÑÂêàÊï∞ÂÖ¨Âºè(ÊñΩÂ∑•ing) ‰ΩÜÊòØÊàë‰ª¨ÂèëÁé∞n,mÂ§™Â§ß‰∫ÜÔºåÈ¢ÑÂ§ÑÁêÜÊù®Ëæâ‰∏âËßí‰ºöTÔºåËøôÈáåÊàë‰ª¨ÂºïÂÖ•LucasÂÆöÁêÜ(ËØÅÊòéËßÅ‰∏äÈìæÊé•):$$C_n^m \\% p= C_{n/p}^{m/p}* C_{n\\%p}^{m\\%p}$$ ËøáÁ®ã‰∏≠ÈúÄË¶ÅÊ±Ç$\\frac{1}{m!}\\%p$ÔºåÂç≥Ê±ÇÈÄÜÂÖÉÔºåÂèØÁî®ÂØºË®Ä‰∏âÁßçÊñπÊ≥ïÊ±ÇËß£ÔºåÂú®Ê≠§‰∏çÂ§öËµòË®Ä (ÂÖ¨ÂºèÂ∫îÁî®ÂÖ∑‰ΩìËßÅ‰ª£Á†Å)Ëá≥Ê≠§ÔºåÈóÆÈ¢òËß£ÂÜ≥ View Code ‚Äãcpp #include &lt;iostream&gt; #include &lt;cstdio&gt; #include &lt;algorithm&gt; #include &lt;cmath&gt; #include &lt;string.h&gt; using namespace std; #define mod 1000000007 typedef long long ll; const int maxn = 1e5+5; int T; ll n,m,p,d[maxn]; ll ksm(ll a,ll b) { if(b==0) return 1; ll ans=ksm(a,b/2)%p; ans=ans*ans%p; if(b&amp;1) ans=ans*a%p; return ans; } void init() { d[0]=1; for(int i=1;i&lt;=p;i++) { d[i]=d[i-1]* i%p; } } ll C(ll a,ll b) { if(b&gt;a) return 0; return d[a]* ksm(d[b],p-2)%p*ksm(d[a-b],p-2)%p; } ll lucas(ll a,ll b) { if(b==0) return 1; return C(a%p,b%p)* lucas(a/p,b/p)%p; } int main() { int T; scanf(&quot;%d&quot;,&amp;T); while(T--) { scanf(&quot;%lld %lld %lld&quot;,&amp;n,&amp;m,&amp;p); init(); printf(&quot;%lld\\n&quot;,lucas(n+m,m)); } return 0; } J:Áû¨Èó¥ÁßªÂä® Â§ßÊÑèÔºö‰∏ÄÊó†ÈôêÂ§ßÁü©ÂΩ¢‰∏≠ÔºåÂàùÂßãÂú®(1,1)ÔºåÊØèÊ¨°ÂèØ‰ª•ÈÄâÊã©Ê†ºÂ≠ê$(nx,ny){nx&gt;x,ny&gt;y}$ÔºåÂπ∂Áû¨ÁßªËøáÂéª,Ê±ÇÂà∞Á¨¨nË°åÁ¨¨mÂàóÁöÑÊ†ºÂ≠êÊúâÂá†ÁßçÊñπÊ°àÔºåÁ≠îÊ°àÂØπ1000000007ÂèñÊ®° ÊâìË°®‰∏ÄÊ≥¢ÔºåÂèØ‰ª•ÂèëÁé∞Áü©ÂΩ¢ÊòØ‰∏Ä‰∏™ÂêëÂ∑¶‰∏äËßíÊñú45¬∞ÁöÑÊù®Ëæâ‰∏âËßí„ÄÇ ÂÜçÊâæ‰∏ÄÊ≥¢ËßÑÂæãÔºåÂèëÁé∞$ans[n][m]\\%p = C_{n+m-4}^{m-2}\\%p$ ÊúÄÂêéÂ•ó‰∏ÄÊ≥¢Ë¥πÈ©¨Â∞èÂÆöÁêÜÊ±ÇÈÄÜÂÖÉÁöÑÊ®°ÊùøÂç≥ÂèØÔºàÊú¨Ë¥®ÊòØ‰∏ÄÈÅìÊ®°ÊùøÈ¢ò/ÈÄÉÔºâ View Code ‚Äãcpp #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstdio&gt; #include &lt;string.h&gt; using namespace std; #define mod 1000000007 typedef long long ll; int n,m; ll qzc[200050]; void init() { qzc[0]=1; for(int i=1;i&lt;=200000;i++) { qzc[i]=qzc[i-1]* i%mod; } } ll ksm(ll a,ll b) { if(b==0) return 1; ll u = ksm(a,b/2)%mod; u=u*u%mod; if(b&amp;1) u=u*a%mod; return u; } int main() { init(); while(cin&gt;&gt;n&gt;&gt;m) { ll a=qzc[n+m-4]; ll b=qzc[m-2]; ll c=qzc[n-2]; ll ans=a*ksm(b,mod-2)%mod*ksm(c,mod-2)%mod; cout&lt;&lt;ans&lt;&lt;endl; } return 0; } M:How Many Sets II Â§ßÊÑèÔºö‰ªé$1,2,\\cdots,n$‰∏≠ÈÄâ‰∏≠m‰∏™ÁêÉÔºåË¶ÅÊ±Ç‰∏§‰∏§‰∏çÁõ∏ÈÇªÔºåÊ±ÇÊúâÊñπÊ°àÊï∞ ÈöîÊùøÊ≥ïÂ∫îÁî®,Â¶ÇÊûúÊàë‰ª¨ÂÖà‰∏çÁºñÂè∑ÔºåÈöè‰æøÂèñÂá∫$m$‰∏™ÁêÉ,Ââ©‰∏ã$n-m$‰∏™ÁêÉÂú®$n-m+1$‰∏™Á©∫Èöô‰∏≠ÊèíÂÖ•m‰∏™ÁêÉ,‰πãÂêéÂÜçÁºñÂè∑ÔºåÈÇ£‰πàÊàë‰ª¨ÊèíÂÖ•ÁöÑÁêÉÊâÄÂú®ÁöÑÁºñÂè∑Âç≥‰∏∫Êú¨Ê¨°ÊåëÈÄâÁöÑÁêÉÔºåÂç≥$C_{n-m+1}^m$ Â•óÁî®$Lucas$Ê®°ÊùøÂç≥ÂèØ(Ê≥®ÊÑèÂà∞$p \\in [1,1e9]$,Áõ¥Êé•È¢ÑÂ§ÑÁêÜÁªÑÂêàÊï∞ÂèØËÉΩ‰ºöË∂ÖÊó∂ÔºåÂ¶Ç$I$È¢ò‰ª£Á†Å) N:DP? Â§ßÊÑèÔºöÊù®Ëæâ‰∏âËßí‰∏äÔºåÊ±Ç$[0][0]$Âà∞$[n][k]$Ë∑ØÂæÑ‰∏äÁöÑÊúÄÂ∞èÂíå(ÂèØÂêë‰∏ãÂèäÂ∑¶‰∏ãÊñπÂêë)$mod$$p$$1e5ÁªÑÊï∞ÊçÆÔºån,k \\in [0,1e9],p \\in (0,1e4),‰∏îp‰∏∫Ë¥®Êï∞$ ÁîªÂá∫Êù®Ëæâ‰∏âËßí,ÂèëÁé∞$[n][k]$Âà∞$[0][0]$ÁöÑË∑ØÂæÑ‰∏∫ÊñúÂêëÂ∑¶‰∏ä(Êàñ‰∏ä)Áõ¥Âà∞ËæπÁïåÂÜçÊ≤øÁùÄ1ÁöÑË∑ØÂæÑËµ∞Âà∞È°∂ÁÇπ(Â¶ÇÂõæË°®Á§∫$[4][2]$Âèä$[4][3]$ÁöÑÊúÄÁü≠Ë∑ØÂæÑÂíå) ÊâÄ‰ª•Êàë‰ª¨ÂèØ‰ª•ÂæóÂà∞ÂÖ¨Âºè(ÂÖ∑‰ΩìÊé®ÂØºÂÖ¨ÂºèËßÅ‰∏äÁªÑÂêàÊï∞ÂÖ¨ÂºèÈìæÊé•)Ôºö$$ ans[n][k]= \\begin{cases} C_{n+1}^m+n-m, &amp; \\text{if$k&lt;=\\frac{n}{2}$} ,\\\\ C_{n+1}^{n-m}+m, &amp; \\text{if$k&gt;\\frac{n}{2}$} \\end{cases}$$ ‰πãÂêéÂ∞±ÊòØÂºÄÂøÉÂ•óLucasÊ®°ÊùøÂï¶(ÊâçÊÄ™)$\\implies TLE$~Êú¨È¢òÊúâ1e5ÁªÑÊï∞ÊçÆ,ÊØè‰∏ÄÁªÑÈ¢ÑÂ§ÑÁêÜ‰∏Ä‰∏ãÈúÄË¶Å1e4,1e9&gt;1e8~(ps:Âõ†‰∏∫logÁöÑÊó∂Èó¥ÂΩ±ÂìçËæÉÂ∞èÔºåÊú¨È¢òËÆ°ÁÆóÂ§çÊùÇÂ∫¶‰∏çËÄÉËôë) Ê≥®ÊÑèÂà∞$p$‰∏∫Ë¥®Êï∞ÔºåÊâì‰∏Ä‰∏ãË¥®Êï∞Ë°®ÂèëÁé∞,$(0,1e4)$ÁöÑË¥®Êï∞Âè™Êúâ1000+‰∏™ÈÇ£Êàë‰ª¨Áõ¥Êé•È¢ÑÂ§ÑÁêÜÂá∫ÊØè‰∏™$mod$$p$ÂØπÂ∫îÁöÑÁªÑÂêàÊï∞Ë°®$\\implies 1e3*1e4+1e5&lt;1e8 \\implies AC$ View Code ‚Äãcpp #include &lt;iostream&gt; #include &lt;cstdio&gt; #include &lt;string.h&gt; #include &lt;cmath&gt; #include &lt;algorithm&gt; using namespace std; #define mod 1000000007 typedef long long ll; const int maxn = 1e4+5; int T; ll n,m,p,d[1500][maxn]; int flag[maxn],prime[maxn],pnum=0,has[maxn]; ll ksm(ll a,ll b) { if(b==0) return 1; ll ans=ksm(a,b/2)%p; ans=ans*ans%p; if(b&amp;1) ans=ans*a%p; return ans; } void InitPrime() { for(int i=0;i&lt;=1e4;i++) flag[i]=1; for(int i=2;i&lt;=1e4;i++) { if(flag[i]==1) has[i]=pnum,prime[pnum++]=i; for(int j=0;j&lt;pnum&amp;&amp;prime[j]*i&lt;=1e4;j++) { flag[prime[j]* i]=0; if(i%prime[j]==0) break; } } //cout&lt;&lt;pnum&lt;&lt;endl;//1229 } void init() { InitPrime(); for(int k=0;k&lt;pnum;k++) { d[k][0]=1; for(int i=1;i&lt;=prime[k];i++) { d[k][i]=d[k][i-1]* i%prime[k]; } } } ll C(ll a,ll b) { //cout&lt;&lt;has[p]&lt;&lt;endl; if(b&gt;a) return 0; return d[has[p]][a]* ksm(d[has[p]][b],p-2)%p*ksm(d[has[p]][a-b],p-2)%p; } ll lucas(ll a,ll b) { if(b==0) return 1; return C(a%p,b%p)* lucas(a/p,b/p)%p; } int main() { int t=1; init(); while(~scanf(&quot;%lld%lld%lld&quot;,&amp;n,&amp;m,&amp;p)) { if(m&lt;=n/2) printf(&quot;Case #%d: %lld\\n&quot;,t++,(n-m+lucas(n+1,m))%p); else printf(&quot;Case #%d: %lld\\n&quot;,t++,(m+lucas(n+1,n-m))%p); } return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"ÁªÑÂêàÊï∞Â≠¶","slug":"ÁªÑÂêàÊï∞Â≠¶","permalink":"http://WigginsLi.github.io/categories/ÁªÑÂêàÊï∞Â≠¶/"}],"tags":[{"name":"Ë¥πÈ©¨Â∞èÂÆöÁêÜ","slug":"Ë¥πÈ©¨Â∞èÂÆöÁêÜ","permalink":"http://WigginsLi.github.io/tags/Ë¥πÈ©¨Â∞èÂÆöÁêÜ/"},{"name":"ÁªÑÂêàÊï∞","slug":"ÁªÑÂêàÊï∞","permalink":"http://WigginsLi.github.io/tags/ÁªÑÂêàÊï∞/"},{"name":"GCD","slug":"GCD","permalink":"http://WigginsLi.github.io/tags/GCD/"},{"name":"Êù®Ëæâ‰∏âËßí","slug":"Êù®Ëæâ‰∏âËßí","permalink":"http://WigginsLi.github.io/tags/Êù®Ëæâ‰∏âËßí/"},{"name":"ÈÄÜÂÖÉ","slug":"ÈÄÜÂÖÉ","permalink":"http://WigginsLi.github.io/tags/ÈÄÜÂÖÉ/"},{"name":"ÂÆπÊñ•ÂéüÁêÜ","slug":"ÂÆπÊñ•ÂéüÁêÜ","permalink":"http://WigginsLi.github.io/tags/ÂÆπÊñ•ÂéüÁêÜ/"},{"name":"lucasÂÆöÁêÜ","slug":"lucasÂÆöÁêÜ","permalink":"http://WigginsLi.github.io/tags/lucasÂÆöÁêÜ/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"ÁªÑÂêàÊï∞Â≠¶","slug":"ÁªÑÂêàÊï∞Â≠¶","permalink":"http://WigginsLi.github.io/categories/ÁªÑÂêàÊï∞Â≠¶/"}]},{"title":"< Êï∞‰Ωçdp > 2019 GDUT Winter Training III","slug":"swDP-trainning","date":"2019-03-05T00:09:28.000Z","updated":"2019-03-15T05:30:37.390Z","comments":true,"path":"2019/03/05/swDP-trainning/","link":"","permalink":"http://WigginsLi.github.io/2019/03/05/swDP-trainning/","excerpt":"$ \\implies $‰∏ìÈ¢òÂú∞ÂùÄÊï∞‰Ωç$ dp $Â±û‰∫éÂ•óÊ®°ÊùøÁ±ªÂûãÁöÑÈ¢òÔºå‰∏îÊú¨Ë∫´ÈùûÂ∏∏ÂÜ∑Èó®ÔºåËµõÂú∫‰∏äÁ¢∞Âà∞ÁöÑÂèØËÉΩÊÄßÂæà‰ΩéÔºå‰ΩÜÊàë‰ª¨ËøòÊòØÂæóÂ≠¶Âïä„ÄÇ$ \\implies $‰∏çÈîôÁöÑÂçöÂÆ¢ËÆ≤Ëß£Âà∑‰∏äÂá†ÈÅìÈ¢òÂü∫Êú¨Â∞±ÁêÜËß£‰∫Ü(ÔΩ°ÔΩ•œâÔΩ•ÔΩ°)$ ps $ :Êú¨ÊñáÈ¶ñÊ¨°ÈááÁî®$ mathjax $","text":"$ \\implies $‰∏ìÈ¢òÂú∞ÂùÄÊï∞‰Ωç$ dp $Â±û‰∫éÂ•óÊ®°ÊùøÁ±ªÂûãÁöÑÈ¢òÔºå‰∏îÊú¨Ë∫´ÈùûÂ∏∏ÂÜ∑Èó®ÔºåËµõÂú∫‰∏äÁ¢∞Âà∞ÁöÑÂèØËÉΩÊÄßÂæà‰ΩéÔºå‰ΩÜÊàë‰ª¨ËøòÊòØÂæóÂ≠¶Âïä„ÄÇ$ \\implies $‰∏çÈîôÁöÑÂçöÂÆ¢ËÆ≤Ëß£Âà∑‰∏äÂá†ÈÅìÈ¢òÂü∫Êú¨Â∞±ÁêÜËß£‰∫Ü(ÔΩ°ÔΩ•œâÔΩ•ÔΩ°)$ ps $ :Êú¨ÊñáÈ¶ñÊ¨°ÈááÁî®$ mathjax $ Êï∞‰Ωç$ dp $ Êï∞‰Ωç$ dp $Áî®‰∫éÊ±ÇËß£Âú®Êüê‰∏ÄÊÆµËåÉÂõ¥(ÊûÅÂ§ß)ÂÜÖÊª°Ë∂≥Êù°‰ª∂ÁöÑÊï∞ÁöÑ‰∏™Êï∞Ôºå‰∏îÊù°‰ª∂‰∏éÊï∞ÁöÑÊØè‰∏™‰ΩçÊï∞ÊúâÂÖ≥ Êàë‰ª¨‰ªéÈ¢òÁõÆÂÖ•ÊâãÁêÜËß£Ôºö K:Bomb Â§ßÊÑè Ôºö Ê±Ç $ x \\in [1,n] $ ‰∏≠Êª°Ë∂≥ $ x $ ÁöÑ‰ΩçÊï∞‰∏≠Â≠òÂú® 49ÁöÑÊï∞Â≠ó‰∏™Êï∞ ÂÆö‰πâ‰∏Ä‰∏™Áä∂ÊÄÅ $ pre $ Ë°®Á§∫Ââç‰∏Ä‰ΩçÊòØÂê¶‰∏∫4Ôºå$ pos $Ë°®Á§∫ÂΩìÂâç‰ΩçÔºå$num[pos]==9\\&amp;\\&amp;pre==1 $ Êó∂ÔºåËØ•Êï∞Êª°Ë∂≥Êù°‰ª∂„ÄÇ Áî®‰∫éÁÜüÊÇâÊ®°ÊùøÁöÑÊ∞¥È¢ò„ÄÇ Êîæ‰∏§‰∏™Ê®°Êùø View CodeÂèØÂà§Êñ≠ÂâçÂØºÈõ∂c++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; #include &lt;cstdio&gt; #include &lt;cmath&gt; using namespace std; typedef long long ll; const int maxn = 1e5; int T; ll l,r,len,a[maxn],dp[20][10]; ll dfs(int pos,int pre,int lead,int limit) { if(pos&gt;len) return 1; if(dp[pos][pre]!=-1&amp;&amp;!limit&amp;&amp;!lead) return dp[pos][pre]; ll ret=0; int res=limit?a[len-pos+1]:9;//resÂΩìÂâç‰∏∫ËÉΩÂèñÂà∞ÁöÑÊúÄÂ§ßÂÄº for(int i=0;i&lt;=res;i++) { if(pre&amp;&amp;i==9) continue; //ÊúâÂâçÂØºÈõ∂Âπ∂‰∏îÂΩìÂâç‰Ωç‰πüÊòØÂâçÂØºÈõ∂ if((!i)&amp;&amp;lead) ret+=dfs(pos+1,0,1,i==res&amp;&amp;limit); //ÊúâÂâçÂØºÈõ∂‰ΩÜÂΩìÂâç‰Ωç‰∏çÊòØÂâçÂØºÈõ∂ÔºåÂΩìÂâç‰ΩçÊòØÊúÄÈ´ò‰Ωç else if(i&amp;&amp;lead) ret+=dfs(pos+1,i==4,0,i==res&amp;&amp;limit); else ret+=dfs(pos+1,i==4,0,i==res&amp;&amp;limit); } if(!limit&amp;&amp;!lead) dp[pos][pre]=ret; return ret; } ll part(ll x) { len=0; while(x) a[++len]=x%10,x/=10; memset(dp,-1,sizeof(dp)); return dfs(1,0,1,1); } int main() { scanf(&quot;%d&quot;,&amp;T); while(T--) { scanf(&quot;%lld&quot;,&amp;r); printf(&quot;%lld\\n&quot;,r-part(r)+1);//[l,r](l!=0) } return 0; } ViewCodeÁúÅÁï•ÂâçÂØºÈõ∂Âà§Êñ≠c++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; #include &lt;cstdio&gt; #include &lt;cmath&gt; using namespace std; typedef long long ll; const int maxn = 1e5; int T; ll l,r,len,a[maxn],dp[20][10]; ll dfs(int pos,int pre,int limit) { if(pos&gt;len) return 1; if(dp[pos][pre]!=-1&amp;&amp;!limit) return dp[pos][pre]; ll ret=0; int res=limit?a[len-pos+1]:9;//resÂΩìÂâç‰∏∫ËÉΩÂèñÂà∞ÁöÑÊúÄÂ§ßÂÄº for(int i=0;i&lt;=res;i++) { if(pre&amp;&amp;i==9) continue; ret+=dfs(pos+1,i==4,i==res&amp;&amp;limit); } if(!limit) dp[pos][pre]=ret; return ret; } ll part(ll x) { len=0; while(x) a[++len]=x%10,x/=10; memset(dp,-1,sizeof(dp)); return dfs(1,0,1); } int main() { scanf(&quot;%d&quot;,&amp;T); while(T--) { scanf(&quot;%lld&quot;,&amp;r); printf(&quot;%lld\\n&quot;,r-part(r)+1);//[l,r](l!=0) } return 0; } L:‰∏çË¶Å62 Â§ßÊÑè Ôºö $ x \\in [n,m] $ ‰∏≠Â§öÂ∞ëÊï∞‰∏çÂê´62Êàñ4 Âêå‰∏äÈ¢òÔºåÊ∑ªÂä†‰∏Ä‰∏™Êù°‰ª∂Âà§Êñ≠$ num[pos] == 4 $Âç≥ÂèØ ÂèàÊòØ‰∏ÄÈÅìÁªÉÊ®°ÊùøÁöÑÊ∞¥È¢ò ViewCodec++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; #include &lt;cstdio&gt; #include &lt;cmath&gt; using namespace std; typedef long long ll; ll l,r,len,a[20],dp[20][10]; ll dfs(int pos,int pre,int limit) { if(pos&gt;len) return 1; if(dp[pos][pre]!=-1&amp;&amp;!limit) return dp[pos][pre]; ll ret=0; int res=limit?a[len-pos+1]:9;//resÂΩìÂâç‰∏∫ËÉΩÂèñÂà∞ÁöÑÊúÄÂ§ßÂÄº for(int i=0;i&lt;=res;i++) { if(i==4||(pre&amp;&amp;i==2)) continue; ret+=dfs(pos+1,i==6,i==res&amp;&amp;limit); } if(!limit) dp[pos][pre]=ret; return ret; } ll part(ll x) { len=0; while(x) a[++len]=x%10,x/=10; memset(dp,-1,sizeof(dp)); return dfs(1,0,1); } int main() { while(scanf(&quot;%lld %lld&quot;,&amp;l,&amp;r)&amp;&amp;r) { if(l) printf(&quot;%lld\\n&quot;,part(r)-part(l-1));//[l,r](l!=0) else printf(&quot;%lld\\n&quot;,part(r)-part(l));//‰ªé0ÂºÄÂßãË¶ÅÁâπÂà§ } return 0; } ‰∏ãÈù¢ÊòØÁ®çÂæÆÈ´òÁ∫ß‰∏ÄÁÇπÁöÑ A:Round Numbers Â§ßÊÑè Ôºö Ëã•NÁöÑ‰∫åËøõÂà∂‰∏≠ÁöÑ0ÁöÑ‰∏™Êï∞ $ \\geq $ 1ÁöÑ‰∏™Êï∞$ \\implies $N‰∏∫Round Number ÂÆö‰πâ‰∏§‰∏™Áä∂ÊÄÅ$ zero $, $ one $ËÆ∞ÂΩï0,1ÁöÑ‰∏™Êï∞,ÂΩìÈÅçÂéÜÂÆå‰∏Ä‰∏™Êï∞ÁöÑÊâÄÊúâ‰ΩçÊó∂Âà§Êñ≠Âç≥ÂèØ„ÄÇ View Codec++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; #include &lt;cstdio&gt; #include &lt;cmath&gt; using namespace std; typedef long long ll; const int maxn = 64; ll l,r,len,a[maxn],dp[maxn][maxn][maxn]; ll dfs(int pos,int pre,int st,int lead,int limit) { if(pos&gt;len) return pre&gt;=st; if(dp[pos][pre][st]!=-1&amp;&amp;!limit&amp;&amp;!lead) return dp[pos][pre][st]; ll ret=0; int res=limit?a[len-pos+1]:1;//resÂΩìÂâç‰∏∫ËÉΩÂèñÂà∞ÁöÑÊúÄÂ§ßÂÄº for(int i=0;i&lt;=res;i++) { //ÊúâÂâçÂØºÈõ∂Âπ∂‰∏îÂΩìÂâç‰Ωç‰πüÊòØÂâçÂØºÈõ∂ if((!i)&amp;&amp;lead) ret+=dfs(pos+1,0,0,1,i==res&amp;&amp;limit); //ÊúâÂâçÂØºÈõ∂‰ΩÜÂΩìÂâç‰Ωç‰∏çÊòØÂâçÂØºÈõ∂ÔºåÂΩìÂâç‰ΩçÊòØÊúÄÈ´ò‰Ωç else if(i&amp;&amp;lead) ret+=dfs(pos+1,i==0,i==1,0,i==res&amp;&amp;limit); else { ret+=dfs(pos+1,pre+(i==0),st+(i==1),0,i==res&amp;&amp;limit); } } if(!limit&amp;&amp;!lead) dp[pos][pre][st]=ret; return ret; } ll part(ll x) { len=0; while(x) a[++len]=x%2,x/=2; memset(dp,-1,sizeof(dp)); return dfs(1,0,0,1,1); } int main() { scanf(&quot;%lld %lld&quot;,&amp;l,&amp;r); printf(&quot;%lld\\n&quot;,(part(r)-part(l-1))); return 0; } B:Balanced Number Â§ßÊÑèÔºöÂØπ‰∫éÊúâ$ m $ ‰ΩçÁöÑÊï∞ $ N $ ÔºåÂ≠òÂú®‰Ωç $ b_i $ ,‰Ωø $$ b_{i-1} \\times 1 +b_{i-2} \\times 2+ \\cdots +b_1 \\times a = b_{i+1}\\times 1+b_{i+2}\\times 2+ \\cdots + b_{m}\\times b $$ ÂÖ∂‰∏≠a+b+1=m ÂÆö‰πâ‰∏Ä‰∏™ $ sum $ Áä∂ÊÄÅ,Êûö‰∏æ‰∏≠ËΩ¥ÂøÉ $ b_i $ ÂÜçËøõË°å $ DFS $ ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºåÂØπ‰∫é0Ëøô‰∏™Êï∞Â≠¶ÔºåÊØè‰∏™ËΩ¥ÂøÉÈÉΩÊàêÁ´ãÂØºËá¥Â§öÁÆó$len-1$Ê¨° View Codec++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; #include &lt;cstdio&gt; #include &lt;cmath&gt; using namespace std; typedef long long ll; const int maxn = 1e5; int T; ll l,r,len,a[20],dp[20][20][5000]; ll dfs(int pos,int mid,int sum,int lead,int limit) { if(pos&lt;1) return sum?0:1; if(sum&lt;0) return 0; if(dp[pos][mid][sum]!=-1&amp;&amp;!limit&amp;&amp;!lead) return dp[pos][mid][sum]; ll ret=0; int res=limit?a[pos]:9;//resÂΩìÂâç‰∏∫ËÉΩÂèñÂà∞ÁöÑÊúÄÂ§ßÂÄº for(int i=0;i&lt;=res;i++) { //ÊúâÂâçÂØºÈõ∂Âπ∂‰∏îÂΩìÂâç‰Ωç‰πüÊòØÂâçÂØºÈõ∂ if((!i)&amp;&amp;lead) ret+=dfs(pos-1,mid,sum,1,i==res&amp;&amp;limit); //ÊúâÂâçÂØºÈõ∂‰ΩÜÂΩìÂâç‰Ωç‰∏çÊòØÂâçÂØºÈõ∂ÔºåÂΩìÂâç‰ΩçÊòØÊúÄÈ´ò‰Ωç else if(i&amp;&amp;lead) ret+=dfs(pos-1,mid,sum+(pos-mid)*i,0,i==res&amp;&amp;limit); else ret+=dfs(pos-1,mid,sum+(pos-mid)*i,0,i==res&amp;&amp;limit); } if(!limit&amp;&amp;!lead) dp[pos][mid][sum]=ret; return ret; } ll part(ll x) { len=0; while(x) a[++len]=x%10,x/=10; ll ans=0; for(int i=1;i&lt;=len;i++) { ans+=dfs(len,i,0,1,1); } return ans-(len-1); } int main() { scanf(&quot;%d&quot;,&amp;T); memset(dp,-1,sizeof(dp)); while(T--) { scanf(&quot;%lld%lld&quot;,&amp;l,&amp;r); printf(&quot;%lld\\n&quot;,part(r)-part(l-1));//[l,r](l!=0) } return 0; } C:F(x) Â§ßÊÑèÔºöÂØπ‰∫é$ A(A_nA_{n-1}A_{n-2} \\ldots A_1) $ .Êúâ$$ F(A)=A_1\\times 1+A_2\\times 2+\\cdots+A_{n-1}\\times 2^n$$Ê±ÇÊª°Ë∂≥$ F(x) \\leq F(A),x\\subseteq[0,B] $ÁöÑ$x$ÁöÑÊï∞Èáè ‰∏é‰∏äÈ¢òÂ∑Æ‰∏çÂ§öÁöÑÊÄùË∑Ø ËøôÈáåÂÖàÁÆóÂá∫$F(A)$,ÁÑ∂ÂêéÂÜçÂáèÁöÑÂÜôÊ≥ïÊØîËæÉÂ•ΩÂÜôÔºå‰ΩÜÊòØË¶ÅÊ≥®ÊÑèÂ∞è‰∫é0Êó∂ÂèäÊó∂Ë∑≥Âá∫ÔºåÂê¶ÂàôÊï∞ÁªÑË∂äÁïåÈîôËØØ View Codec++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; #include &lt;cstdio&gt; #include &lt;cmath&gt; using namespace std; typedef long long ll; int T; ll l,r,len,a[15],dp[15][50005]; ll F(int x) { ll sum=0,e=1; while(x) { sum+=x%10*e; x/=10; e*=2; } return sum; } ll dfs(int pos,int sum,int limit) { if(pos&lt;0) return sum&gt;=0; if(sum&lt;0) return 0; if(dp[pos][sum]!=-1&amp;&amp;!limit) return dp[pos][sum]; ll ret=0; int res=limit?a[pos]:9;//resÂΩìÂâç‰∏∫ËÉΩÂèñÂà∞ÁöÑÊúÄÂ§ßÂÄº for(int i=0;i&lt;=res;i++) { ret+=dfs(pos-1,sum-i*(1&lt;&lt;pos),i==res&amp;&amp;limit); } if(!limit) dp[pos][sum]=ret; return ret; } ll part(ll x) { len=0; while(x) a[len++]=x%10,x/=10; return dfs(len-1,F(l),1); } int main() { scanf(&quot;%d&quot;,&amp;T); int t=0; memset(dp,-1,sizeof(dp)); while(++t&lt;=T) { scanf(&quot;%lld %lld&quot;,&amp;l,&amp;r); printf(&quot;Case #%d: %lld\\n&quot;,t,part(r)); } return 0; } ÊØîËæÉÈöæÁöÑËøõÈò∂È¢òÁõÆ D:Beautiful Numbers Â§ßÊÑèÔºöÂØπ‰∫é‰∏Ä‰∏™Êï∞$N$,Ëã•ÂÖ∂ÂèØË¢´‰ªªÊÑèÁªÑÊàêÂÆÉÁöÑ‰ΩçÊï¥Èô§,Âç≥ÂèØÁß∞‰∏∫$Beautiful Number$ ÂÆπÊòìÊÉ≥Âà∞Ôºå$N$ÂèØË¢´‰ªªÊÑè‰ΩçÊï¥Èô§ $\\Leftrightarrow N\\%lcm(b_1,b_2, \\ldots ,b_n)=0$‰∏î $lcm(1,2,3,\\ldots,9)=2520$$\\,\\,\\,\\,\\, \\Longrightarrow ÈúÄË¶Å \\underbrace{[20]}_{‰ΩçÊï∞} \\times \\underbrace{[N\\%2520]}_{N\\%lcm=N\\%2520\\%lcm}\\times \\underbrace{[2520]}_{lcmÁä∂ÊÄÅÊï∞}$ÁöÑÁä∂ÊÄÅ(20 * 2520* 2520 $\\approx$ 1e8) * 10 = 1e9 $\\rightarrow$ TLE$\\,\\,\\,\\,\\,\\Longrightarrow$Êàë‰ª¨ÂèëÁé∞Ôºå1-9ÈöèÊú∫ÁªÑÂêàÁöÑ$lcm$ÊúÄÂ§öÂè™Êúâ48Áßç,ÂØπ2520Á¶ªÊï£Êàê48,ÈÇ£‰πàÁä∂ÊÄÅÁº©ÂáèËá≥20* 2520* 50*10 $\\approx$ 2e7 ViewCodec++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; #include &lt;cstdio&gt; #include &lt;cmath&gt; using namespace std; typedef long long ll; int T,has[2600],fhas[50]; ll l,r,len,a[20],dp[20][2600][50]; int mygcd(int a,int b) { if(b==0) return a; return mygcd(b,a%b); } int mylcm(int a,int b) { return (a*b)/mygcd(a,b); } ll dfs(int pos,int sum,int nlcm,int lead,int limit) { //cout&lt;&lt;sum&lt;&lt;&quot; &quot;&lt;&lt;fhas[nlcm]&lt;&lt;endl; if(pos&lt;1) return sum%fhas[nlcm]==0; if(dp[pos][sum][nlcm]!=-1&amp;&amp;!limit) return dp[pos][sum][nlcm]; ll ret=0; int res=limit?a[pos]:9;//resÂΩìÂâç‰∏∫ËÉΩÂèñÂà∞ÁöÑÊúÄÂ§ßÂÄº for(int i=0;i&lt;=res;i++) { int u=fhas[nlcm]; if(i) u=mylcm(fhas[nlcm],i); //cout&lt;&lt;u&lt;&lt;&quot; &quot;&lt;&lt;fhas[nlcm]&lt;&lt;&quot; &quot;&lt;&lt;nlcm&lt;&lt;&quot; &quot;&lt;&lt;i&lt;&lt;endl; int p=(sum*10+i)%2520; ret+=dfs(pos-1,p,has[u],0,i==res&amp;&amp;limit); } if(!limit) dp[pos][sum][nlcm]=ret; return ret; } ll part(ll x) { len=0; while(x) a[++len]=x%10,x/=10; return dfs(len,0,1,1,1); } int init() { int tot=1; for(int i=1;i&lt;=2520;i++) { if(2520%i==0) { has[i]=tot; fhas[tot]=i; //cout&lt;&lt;i&lt;&lt;endl; tot++; } } } int main() { init(); scanf(&quot;%d&quot;,&amp;T); memset(dp,-1,sizeof(dp)); while(T--) { scanf(&quot;%I64d %I64d&quot;,&amp;l,&amp;r); printf(&quot;%I64d\\n&quot;,part(r)-part(l-1));//[l,r](l!=0) } return 0; }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}],"tags":[{"name":"DP","slug":"DP","permalink":"http://WigginsLi.github.io/tags/DP/"},{"name":"Êï∞‰ΩçDP","slug":"Êï∞‰ΩçDP","permalink":"http://WigginsLi.github.io/tags/Êï∞‰ΩçDP/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}]},{"title":"ÂæÖË°• < Ê¶ÇÁéáDP > 2019 GDUT Winter Training II","slug":"gailv-dp-training","date":"2019-03-01T23:57:42.000Z","updated":"2019-03-15T05:29:46.150Z","comments":true,"path":"2019/03/02/gailv-dp-training/","link":"","permalink":"http://WigginsLi.github.io/2019/03/02/gailv-dp-training/","excerpt":"‰∏ìÈ¢ò‰∫åvjÈìæÊé• ÊàñËÆ∏ÊòØÁü•ËØÜÂÇ®Â§á‰∏çË∂≥ÔºåÂç≥‰æøÊääÊ¶ÇÁéáDPÁöÑ‰∏ìÈ¢òÂÅö‰∫Ü‰∏ÄÈÅçÔºå‰πü‰∏çËÉΩÂæàÂ•ΩÂú∞ÂèÇÈÄèÊñπÁ®ãÁöÑÊÑè‰πâ„ÄÇ ÁâπÂú∞ÊääÊ¶ÇÁéáDPÂÜôÊàêÁã¨Á´ãÁöÑ‰∏Ä‰ªΩ„ÄÇ Ëøô‰πüÊÑèÂë≥ÁùÄËøô‰ªΩËÆ≠ÁªÉÊä•ÂëäÂèØËÉΩ‰ºöÊåñ‰∏ãÂæàÂ§öÂùëÔºåÂ∏åÊúõÈìÅÁâåÈÄâÊâãWiLe‰πãÂêéËÉΩÂõûÊù•Ë°•Âë¢„ÄÇ(‡πë*‚ó°*‡πë)","text":"‰∏ìÈ¢ò‰∫åvjÈìæÊé• ÊàñËÆ∏ÊòØÁü•ËØÜÂÇ®Â§á‰∏çË∂≥ÔºåÂç≥‰æøÊääÊ¶ÇÁéáDPÁöÑ‰∏ìÈ¢òÂÅö‰∫Ü‰∏ÄÈÅçÔºå‰πü‰∏çËÉΩÂæàÂ•ΩÂú∞ÂèÇÈÄèÊñπÁ®ãÁöÑÊÑè‰πâ„ÄÇ ÁâπÂú∞ÊääÊ¶ÇÁéáDPÂÜôÊàêÁã¨Á´ãÁöÑ‰∏Ä‰ªΩ„ÄÇ Ëøô‰πüÊÑèÂë≥ÁùÄËøô‰ªΩËÆ≠ÁªÉÊä•ÂëäÂèØËÉΩ‰ºöÊåñ‰∏ãÂæàÂ§öÂùëÔºåÂ∏åÊúõÈìÅÁâåÈÄâÊâãWiLe‰πãÂêéËÉΩÂõûÊù•Ë°•Âë¢„ÄÇ(‡πë*‚ó°*‡πë) Ê¶ÇÁéáDPËôΩÁÑ∂ÂêçÂ≠óÂè´Ê¶ÇÁéáÔºå‰ΩÜ‰∏ÄËà¨Êù•ËØ¥Ê±ÇÂæóÊòØÊúüÊúõÂÄºÔºåÊúâÂè•ËØùÁªèÂ∏∏ÁúãÂà∞:&quot;Ê¶ÇÁéáÊòØÈ°∫ÁùÄÊ±ÇÁöÑÔºå ÊúüÊúõÊòØÈÄÜÁùÄÊ±ÇÁöÑ&quot;,‰∏çËÉΩÁêÜËß£(tcl orz)„ÄÇ‰ΩÜÁ°ÆÂÆûÊ≠£Á°Æ„ÄÇ J:Dice (III) Â§ßÊÑè:Ê±ÇÂ∞Ü‰∏Ä‰∏™Á≠õÂ≠êÊâîÂá∫n‰∏™Èù¢Ë¶ÅÊâîÊ¨°Êï∞ÁöÑÊúüÊúõÂÄº„ÄÇ ÂàÜÊûê:gugugu View Codec++ #include &lt;iostream&gt; #include &lt;cstdio&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; using namespace std; int T,n; int main() { scanf(&quot;%d&quot;,&amp;T); int t=1; while(t&lt;=T) { scanf(&quot;%d&quot;,&amp;n); double ans=0; for(int i=1;i&lt;=n;i++) { ans+=n/(double)i; } printf(&quot;Case %d: %lf\\n&quot;,t++,ans); } return 0; } K:Discovering Gold Â§ßÊÑè:‰ªé1Âà∞nÁöÑÁ∫øÊÄßÈÅìË∑ØÔºåËµ∑ÁÇπÂú®1stÔºåÊØèÊ¨°Êé∑È™∞Â≠êÂâçËøõÔºåÂà∞nthÁªìÊùüÔºåËµ∞Âà∞ÊØè‰∏™Ê†ºÂ≠êÂèØ‰ª•ÂæóÂà∞ÂêÑËá™ÁöÑÂàÜÊï∞ÔºåÊ±ÇËµ∞Âà∞ÁªàÁÇπÁöÑÊúüÊúõÂàÜÊï∞„ÄÇ ÂàÜÊûêÔºögugugu View Codec++ #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; using namespace std; const int N=105; int a[N],n,T; double f[N]; int main() { scanf(&quot;%d&quot;,&amp;T); int t=0; while(++t&lt;=T) { scanf(&quot;%d&quot;,&amp;n); for(int i=1;i&lt;=n;i++) {scanf(&quot;%lf&quot;,&amp;f[i]);} for(int i=n-1;i&gt;=1;i--) { double x=min(6,n-i); for(int j=i+1;j&lt;=i+x;j++) { f[i]+=f[j]/x; } } printf(&quot;Case %d: %lf\\n&quot;,t,f[1]); } return 0; } L:Flipping Coins Â§ßÊÑèÔºöÁªôÂÆön‰∏™Á°¨Â∏ÅÔºåÂàùÂßãÂÖ®ÈÉ®ÂèçÈù¢Êúù‰∏äÔºåÂèØ‰ª•‰∏îÂøÖÈ°ªÊäõkÊ¨°Á°¨Â∏ÅÔºà‰ªªÈÄâÔºâÔºåÊ±ÇÊúüÊúõÂæóÂà∞ÁöÑÈáëÈ¢ù(ÂæóÂà∞ËØ•Á°¨Â∏ÅÂΩì‰∏î‰ªÖÂΩìÊ≠£Èù¢Êúù‰∏ä) ÂàÜÊûêÔºögugugu View Codec++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstdio&gt; #include &lt;string.h&gt; using namespace std; const int maxn=450; double dp[maxn][maxn]; int main() { int n,k; cin&gt;&gt;n&gt;&gt;k; memset(dp,0,sizeof(dp)); dp[0][0]=1; for(int i=0; i&lt;k; i++) { for(int j=0; j&lt;n; j++) { dp[i+1][j]+=dp[i][j]*0.5; dp[i+1][j+1]+=dp[i][j]*0.5; } dp[i+1][n]+=dp[i][n]*0.5; dp[i+1][n-1]+=dp[i][n]*0.5; } double ans=0; for(int i=1; i&lt;=n; i++) ans+=(dp[k][i]*i); printf(&quot;%.10f\\n&quot;,ans); }","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}],"tags":[{"name":"Ê¶ÇÁéáDP","slug":"Ê¶ÇÁéáDP","permalink":"http://WigginsLi.github.io/tags/Ê¶ÇÁéáDP/"},{"name":"DP","slug":"DP","permalink":"http://WigginsLi.github.io/tags/DP/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}]},{"title":"ËÆ∞pytrochÂÆâË£ÖÂèäÂÖ•Èó®","slug":"pytroch-install","date":"2019-03-01T01:17:59.000Z","updated":"2019-05-27T14:21:01.522Z","comments":true,"path":"2019/03/01/pytroch-install/","link":"","permalink":"http://WigginsLi.github.io/2019/03/01/pytroch-install/","excerpt":"Êò®Â§©‰∏ä‰∫ÜÂë®ËÄÅÂ∏àÁöÑÊ∑±Â∫¶Â≠¶‰π†ËØæÁ®ãÁöÑÈÄâ‰øÆÔºå‰ªãÁªçÂà∞pytorchÔºå‰πãÂâçÂè™‰∫ÜËß£ËøáTensorFlowÔºåÈ©¨‰∏äinstallÊù•Êç£ÈºìÊç£Èºì„ÄÇÊú¨ÊñáÂ∞èËÆ∞‰∏Ä‰∏ãÂÆâË£ÖËøáÁ®ãÂíåÂùëÁÇπ(:–∑„Äç‚à†) 3-3update:Ê≤°ÊÉ≥Âà∞Âõ†‰∏∫‰∏ÄÂºÄÂßãÊ≤°ÊúâÊ∑ªÂä†Ê∫êÂØºËá¥ÁöÑ‰∏ãËΩΩÂ§±Ë¥•Ôºå‰∏≠Èó¥‰∏ÄÈÉ®ÂàÜÊñá‰ª∂Áº∫Â§±‰∫ÜÔºåÂàõÂª∫ËôöÊãüÁéØÂ¢ÉÁöÑÊó∂ÂÄôÂ§±Ë¥•ÔºåË∞∑Ê≠å‰∫ÜÊâçÂèëÁé∞Ëøô‰∏™ÈóÆÈ¢ò(:–∑„Äç‚à†) ÔºåÊó†Â•àÈáçË£Ö„ÄÇ‰πãÂêé‰∏ÄÂàáÊ≠£Â∏∏„ÄÇ","text":"Êò®Â§©‰∏ä‰∫ÜÂë®ËÄÅÂ∏àÁöÑÊ∑±Â∫¶Â≠¶‰π†ËØæÁ®ãÁöÑÈÄâ‰øÆÔºå‰ªãÁªçÂà∞pytorchÔºå‰πãÂâçÂè™‰∫ÜËß£ËøáTensorFlowÔºåÈ©¨‰∏äinstallÊù•Êç£ÈºìÊç£Èºì„ÄÇÊú¨ÊñáÂ∞èËÆ∞‰∏Ä‰∏ãÂÆâË£ÖËøáÁ®ãÂíåÂùëÁÇπ(:–∑„Äç‚à†) 3-3update:Ê≤°ÊÉ≥Âà∞Âõ†‰∏∫‰∏ÄÂºÄÂßãÊ≤°ÊúâÊ∑ªÂä†Ê∫êÂØºËá¥ÁöÑ‰∏ãËΩΩÂ§±Ë¥•Ôºå‰∏≠Èó¥‰∏ÄÈÉ®ÂàÜÊñá‰ª∂Áº∫Â§±‰∫ÜÔºåÂàõÂª∫ËôöÊãüÁéØÂ¢ÉÁöÑÊó∂ÂÄôÂ§±Ë¥•ÔºåË∞∑Ê≠å‰∫ÜÊâçÂèëÁé∞Ëøô‰∏™ÈóÆÈ¢ò(:–∑„Äç‚à†) ÔºåÊó†Â•àÈáçË£Ö„ÄÇ‰πãÂêé‰∏ÄÂàáÊ≠£Â∏∏„ÄÇ ÂÆâË£Öanaconda ÂÆòÁΩë‰ºº‰πéÈúÄË¶ÅÊ¢ØÂ≠êÔºåÈÄüÂ∫¶ÂæàÊÖ¢„ÄÇËøôÈáåËøòÊòØÊé®ËçêÊ∏ÖÂçéÈïúÂÉèÊãâÂà∞ÊúÄ‰∏ãÈù¢ÈÄâÊã©ÊúÄÊñ∞ÁöÑÈÄÇÂêàËá™Â∑±Á≥ªÁªüÁöÑÁâàÊú¨Â∞±Â•ΩÂï¶ÔºåËøôÈáå‰∏çÂ§öËµòËø∞ Ê∑ªÂä†ÈïúÂÉèÊ∫ê Â¶ÇÊûúÊ≤°ÊúâÊ¢ØÂ≠êÁöÑËØùÔºåconda installÊûÅÊÖ¢‰∏î‰∏çÁ®≥ÂÆöÔºåÂèÇÁÖßËøôÈáåÊàë‰ª¨Âú®cmdÈáåÈù¢ËæìÂÖ•‰ª•‰∏ãÊåá‰ª§ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/ conda config --set show_channel_urls yes ps:ÊàêÂäüÂØºÂÖ•ÊòØÊ≤°ÊúâÊèêÁ§∫ÁöÑÔºåÂ¶ÇÊûúÈáçÂ§çÂØºÂÖ•‰ºöÊúâÊèêÁ§∫ Êü•ÁúãCUDAÁâàÊú¨ ÊâìÂºÄÊéßÂà∂Èù¢ÊùøÔºåÂú®Âè≥‰∏äËßíÈÄâÊã©Â∞èÂõæÊ†áÔºåÊâæÂà∞NVIDIAÊéßÂà∂Èù¢Êùø Â∏ÆÂä©-&gt;Á≥ªÁªü‰ø°ÊÅØ ÁªÑ‰ª∂ÔºåÂæóÂà∞ÁâàÊú¨ÔºåÂ¶Ç‰∏ãÂõæÔºåÊàëÊòØ9.1 ÂÆâË£ÖpytorchÂèäÂÖ∂ÁªÑ‰ª∂ ÊâìÂºÄÂÆòÁΩë ÈÄâÊã©Ëá™Â∑±ÁöÑÁ≥ªÁªü„ÄÅPythonÁâàÊú¨Á≠âÁ≠â ËøôÊòØÊ†πÊçÆÊàëÁöÑÊÉÖÂÜµÈÄâÊã©ÁöÑÁâàÊú¨ Â∞Ü‰∏ãÈù¢ÁöÑ‰ª£Á†ÅËæìÂÖ•cmdÔºàÊ≥®ÊÑèÔºöÂõ†‰∏∫Êàë‰ª¨ÈúÄË¶ÅÁî®Âà∞Ê∏ÖÂçéÊ∫êÔºåÊâÄ‰ª•ÂéªÊéâÂêéÈù¢ÁöÑ-c pytorchÔºâÂç≥ÔºåÊàëËæìÂÖ• conda install pytorch torchvision cudatoolkit=9.0 Âç≥ÂèØ ÂèØ‰ª•ÁúãÂà∞ËøôÈáåÂ∑≤Áªè‰ΩøÁî®‰∫ÜÊ∏ÖÂçéÊ∫êÔºåÔºàÂà´Âú®ÊÑèÊàëÈúÄË¶Å‰∏ãËΩΩÁöÑ‰∏úË•øÂèØËÉΩÂíå‰Ω†‰ª¨ÁöÑÊúâÂ∑ÆÂà´ÔºåÊàëËøôÈáåÊòØÈáçËØï‰∫ÜÂæàÂ§öÊ¨°‰πãÂêéÈÉ®ÂàÜÂ∑≤Áªè‰∏ãÂ•Ω‰∫ÜÁöÑÁªìÊûú(:–∑„Äç‚à†) Ôºâ ÈôÑ‰∏ä‰∏ÄÂºÄÂßãÊ≤°Êúâ‰ΩøÁî®Ê∏ÖÂçéÊ∫êÁöÑÊÉ®Ââß ÂÆâË£ÖÂÆåÊàêÂêéÁöÑÊµãËØïÔºåall is readyÔºÅ","categories":[{"name":"Experience","slug":"Experience","permalink":"http://WigginsLi.github.io/categories/Experience/"},{"name":"Êú∫Âô®Â≠¶‰π†","slug":"Êú∫Âô®Â≠¶‰π†","permalink":"http://WigginsLi.github.io/categories/Êú∫Âô®Â≠¶‰π†/"}],"tags":[{"name":"pytroch","slug":"pytroch","permalink":"http://WigginsLi.github.io/tags/pytroch/"},{"name":"Ê∑±Â∫¶Â≠¶‰π†","slug":"Ê∑±Â∫¶Â≠¶‰π†","permalink":"http://WigginsLi.github.io/tags/Ê∑±Â∫¶Â≠¶‰π†/"}],"keywords":[{"name":"Experience","slug":"Experience","permalink":"http://WigginsLi.github.io/categories/Experience/"},{"name":"Êú∫Âô®Â≠¶‰π†","slug":"Êú∫Âô®Â≠¶‰π†","permalink":"http://WigginsLi.github.io/categories/Êú∫Âô®Â≠¶‰π†/"}]},{"title":"ÂæÖË°• < ÁÆÄÂçïDP > 2019 GDUT Winter Training II","slug":"DP-training","date":"2019-02-27T18:59:34.000Z","updated":"2019-03-15T05:31:36.878Z","comments":true,"path":"2019/02/28/DP-training/","link":"","permalink":"http://WigginsLi.github.io/2019/02/28/DP-training/","excerpt":"‰∏ìÈ¢òÂú∞ÂùÄÁé∞Âú®ËøòÂú®ÁÆÄÂçïDPÁöÑÊµÖÊµ∑ÊâëËÖæÊâëËÖædalao‰ª¨Â∑≤ÁªèÂèØ‰ª•ËÉ°‰π±ÂÜôÂá∫Ê≠£Á°ÆËΩ¨ÁßªÊñπÁ®ã‰∫Ü(:–∑„Äç‚à†)","text":"‰∏ìÈ¢òÂú∞ÂùÄÁé∞Âú®ËøòÂú®ÁÆÄÂçïDPÁöÑÊµÖÊµ∑ÊâëËÖæÊâëËÖædalao‰ª¨Â∑≤ÁªèÂèØ‰ª•ËÉ°‰π±ÂÜôÂá∫Ê≠£Á°ÆËΩ¨ÁßªÊñπÁ®ã‰∫Ü(:–∑„Äç‚à†) ËÉåÂåÖ ËÉåÂåÖÈóÆÈ¢òÂÖ∑‰ΩìÁöÑËÆ≤Ëß£ÁúüÁöÑËÆ≤‰∏çÊù•ÔºåËøòÊòØÂèÇËÄÉÊùÉÂ®ÅÊïôÁ®ã‚ÄìËÉåÂåÖ‰πùËÆ≤Âêß(:–∑„Äç‚à†) 01ËÉåÂåÖ01ËÉåÂåÖ==&gt;0/1==&gt;ÈÄâ/‰∏çÈÄâ,ËÄÉËôëÁöÑÈóÆÈ¢òÂ∞±ÊòØÂ¶Ç‰ΩïÈÄâÂèñÁâ©ÂìÅÊó∂ËÉåÂåÖ‰ª∑ÂÄºÊúÄÂ§ß„ÄÇ ÊÄùË∑ØÁúãËøáËµÑÊñô‰πãÂêéÂèØËÉΩ‰ºö‰∏ÄÂ§¥ÈõæÊ∞¥,ÁúãÁùÄ‰ª£Á†ÅÊ®°Êãü‰∏Ä‰∏ãdpËøáÁ®ãËÉΩÂä†Ê∑±ÁêÜËß£ „Éæ(‚óç¬∞‚àá¬∞‚óç)ÔæâÔæû A:Bone Collector Â§ßÊÑèÔºöÁªôÂÆö‰∏Ä‰∏™ÊúâVÂÆπÈáèÁöÑËÉåÂåÖ,ÁªôÂá∫N‰∏™Áâ©‰ΩìÁöÑ‰ΩìÁßØÂíå‰ª∑ÂÄº,Ê±ÇËÉΩË£ÖÂá∫Êù•ÁöÑÊúÄÂ§ß‰ª∑ÂÄº ÂàÜÊûê:01ËÉåÂåÖÊ®°ÊùøÈ¢ò,Ê≥®ÊÑèÂ≠¶‰π†‰ªé‰∫åÁª¥Êï∞ÁªÑÂà∞‰∏ÄÁª¥Êï∞ÁªÑÁöÑÁ©∫Èó¥‰ºòÂåñ ‰ª£Á†ÅÂ¶Ç‰∏ã:‰∫åÁª¥Êï∞ÁªÑÁâàÊú¨: View Codec++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstdio&gt; #include &lt;string.h&gt; using namespace std; const int maxn = 1e3+5; int f[maxn][maxn],T,n,v,c[maxn],w[maxn]; int main() { scanf(&quot;%d&quot;,&amp;T); while(T--) { scanf(&quot;%d %d&quot;,&amp;n,&amp;v); for(int i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;c[i]); for(int i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;w[i]); memset(f,0,sizeof(f)); for(int i=1;i&lt;=n;i++) { for(int j=0;j&lt;=v;j++) { if(j&lt;w[i]) f[i][j]=f[i-1][j]; else f[i][j]=max(f[i-1][j-w[i]]+c[i],f[i-1][j]); } } cout&lt;&lt;f[n][v]&lt;&lt;endl; } return 0; } ‰∏ÄÁª¥Êï∞ÁªÑ‰ºòÂåñÁâàÊú¨: View Codec++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstdio&gt; #include &lt;string.h&gt; using namespace std; const int maxn = 1e3+5; int f[maxn],T,n,v,c[maxn],w[maxn]; int main() { scanf(&quot;%d&quot;,&amp;T); while(T--) { scanf(&quot;%d %d&quot;,&amp;n,&amp;v); for(int i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;c[i]); for(int i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;w[i]); memset(f,0,sizeof(f)); for(int i=1;i&lt;=n;i++) { for(int j=v;j&gt;=w[i];j--) { f[j]=max(f[j-w[i]]+c[i],f[j]); } } cout&lt;&lt;f[v]&lt;&lt;endl; } return 0; } B:CD Â§ßÊÑè:ÁªôÂÆöM‰∏™CD,ÊúâÂêÑËá™ÁöÑÊó∂Èïø,Ê±ÇÁªôÂÆöÊó∂ÈôêÂÜÖËÉΩËææÂà∞ÁöÑÊúÄÂ§ßCDÊí≠ÊîæÊó∂ÈïøÈúÄË¶ÅËæìÂá∫Êí≠ÊîæÁöÑÊØè‰∏™CD. ÂàÜÊûê:ËøòÊòØ01ËÉåÂåÖË£∏È¢ò,Âè™ÊòØ‰ª∑ÂÄºÂíå‰ΩìÁßØÁõ∏Âêå.ÈöæÁÇπÊòØËæìÂá∫dpË∑ØÂæÑ(1*) (1*):ÂΩìÊàë‰ª¨ÈÄâÂèñÂΩìÂâçCD,ËÆ∞[i][j]=1,ÊúÄÂêéÂæóÂá∫ÊúÄÂ§ß‰ª∑ÂÄº Êó∂ÔºåÂæÄÂâçÂáè‰ª∑ÂÄºÂç≥ÂèØÂæóÂá∫Ë∑ØÂæÑ(Ë°®Ëææ‰∏çÊòØÂæàÊ∏ÖÊ•ö,ÂÖ∑‰ΩìÁúã‰ª£Á†Å) View Codec++ #include &lt;cstdio&gt; #include &lt;cmath&gt; #include &lt;string.h&gt; #include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;algorithm&gt; using namespace std; const int N=10000+5; int f[25][N],n,v,a[N],g[25][N]; int main() { while(~scanf(&quot;%d %d&quot;,&amp;v,&amp;n)) { for(int i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;a[i]); memset(f,0,sizeof(f)); memset(g,0,sizeof(g)); for(int i=1;i&lt;=n;i++) { for(int j=v;j&gt;=0;j--) { if(j&lt;a[i]) f[i][j]=f[i-1][j]; else{ if(f[i-1][j]&lt;=f[i-1][j-a[i]]+a[i]) { f[i][j]=f[i-1][j-a[i]]+a[i]; g[i][j]=1; }else{ f[i][j]=f[i-1][j]; } } } } vector&lt;int&gt; ve; for(int i=n,j=v;i&gt;0;i--) { if(g[i][j]) { ve.push_back(a[i]); j=j-a[i]; } } for(int i=ve.size()-1;i&gt;=0;i--) { printf(&quot;%d &quot;,ve[i]); } printf(&quot;sum:%d\\n&quot;,f[n][v]); } return 0; } ÂÆåÂÖ®ËÉåÂåÖÂÆåÂÖ®ËÉåÂåÖÊ±ÇËß£ÁöÑÈóÆÈ¢òÂíå01ËÉåÂåÖÁ±ª‰ººÔºå‰ΩÜÁâ©ÂìÅÁöÑÈÄâÂèñÂèò‰∏∫Êó†Èôê‰∏™ÔºåÂç≥ÂèØ‰ª•Êó†ÈôêÈÄâÂèñÔºå ÂèØ‰ª•ÊÉ≥Âà∞ÔºåÊØè‰ª∂Áâ©ÂìÅÊúÄÂ§öËÉΩÊãøfloor(V/ci)‰∏™ÔºåÈÇ£‰πàÂèØ‰ª•ÊääËøô‰∫õÂàÜÊàê‰∏Ä‰∏™‰∏™Âè™ËÉΩÊãø‰∏ÄÊ¨° ÁöÑÁâ©ÂìÅÔºåËøôÊ†∑Â∞±ÂèàËΩ¨Êç¢‰∏∫01ËÉåÂåÖÈóÆÈ¢òÔºå‰ΩÜÊòØËøôÊ†∑‰ºöÂæàÊÖ¢ÔºåÈúÄË¶Å‰ºòÂåñ(Â§öÈáçËÉåÂåÖ‰ºöËÆ≤Âà∞‰∫åËøõÂà∂‰ºòÂåñ)„ÄÇ ËøôÈáåÊàë‰ª¨ÈááÁî®O(VN)ÁöÑÁÆóÊ≥ï(ËØ¶ËßÅËÉåÂåÖ‰πùËÆ≤) D:Piggy-Bank È¢òÊÑèÔºöÁªôÂÆö‰∏Ä‰∏™ËÉåÂåÖÔºåÁî®ÁªôÂÆöÁöÑn‰∏™Áâ©ÂìÅË£ÖÊª°ÔºåÂèØÊó†ÈôêÈÄâÁî®Ôºå‰Ωø‰ª∑ÂÄºÊúÄ‰Ωé ÂàÜÊûê:ÂÆåÂÖ®ËÉåÂåÖÊ®°ÊùøÈ¢òÔºå‰ΩÜÊòØÊúâ‚ÄúÈúÄË¶ÅË£ÖÊª°‚ÄùÁöÑÊù°‰ª∂(1*) (1*):ÂºïÁî®ËÉåÂåÖ‰πùËÆ≤ÁöÑËßÇÁÇπ(ÂÅöÁ¨îËÆ∞ÂÅöÁ¨îËÆ∞)Ôºö Ë¶ÅÊ±ÇÊÅ∞Â•ΩË£ÖÊª°ËÉåÂåÖÔºåÈÇ£‰πàÂú®ÂàùÂßãÂåñÊó∂Èô§‰∫Ü F[0] ‰∏∫ 0 ÔºåÂÖ∂ÂÆÉ F[1..V ] ÂùáËÆæ‰∏∫ ‚àí‚àû ÔºåËøôÊ†∑Â∞±ÂèØ‰ª•‰øùËØÅÊúÄÁªàÂæóÂà∞ÁöÑ F[V ] ÊòØ‰∏ÄÁßçÊÅ∞Â•ΩË£ÖÊª°ËÉåÂåÖÁöÑÊúÄ‰ºòËß£„ÄÇ Â¶ÇÊûúÂπ∂Ê≤°ÊúâË¶ÅÊ±ÇÂøÖÈ°ªÊääËÉåÂåÖË£ÖÊª°ÔºåËÄåÊòØÂè™Â∏åÊúõ‰ª∑Ê†ºÂ∞ΩÈáèÂ§ßÔºåÂàùÂßãÂåñÊó∂Â∫îËØ•Â∞Ü F[0..V ] ÂÖ®ÈÉ®ËÆæ‰∏∫ 0 „ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö View Codec++ #include &lt;cstdio&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; using namespace std; const int maxn=500+10; int f[10000+5],T,S,F,v,n,p[maxn],w[maxn]; int main() { scanf(&quot;%d&quot;,&amp;T); while(T--) { scanf(&quot;%d %d %d&quot;,&amp;S,&amp;F,&amp;n); for(int i=1;i&lt;=n;i++) scanf(&quot;%d %d&quot;,&amp;p[i],&amp;w[i]); v=F-S; for(int i=1;i&lt;=v;i++) f[i]=1e8; f[0]=0; for(int i=1;i&lt;=n;i++) { for(int j=w[i];j&lt;=v;j++) { f[j]=min(f[j],f[j-w[i]]+p[i]); } } if(f[v]==1e8) { printf(&quot;This is impossible.\\n&quot;); }else { printf(&quot;The minimum amount of money in the piggy-bank is %d.\\n&quot;,f[v]); } } } Â§öÈáçËÉåÂåÖÂíåÂÆåÂÖ®ËÉåÂåÖ‰∏çÂêåÁöÑÊòØÔºåÂ§öÈáçËÉåÂåÖÁöÑÊØè‰∏™Áâ©ÂìÅÊúâÊúâÈôê‰∏™ÁöÑÊï∞ÁõÆ„ÄÇÂΩìÁÑ∂ÔºåÊàë‰ª¨‰ªçÁÑ∂ÂèØ‰ª•ËΩ¨Êç¢Êàê 01ËÉåÂåÖÊ±ÇËß£„ÄÇ‰ΩÜÂõø‰∫éÂ§çÊùÇÂ∫¶ËøáÈ´òÔºå‰∏çÂæó‰∏çËøõË°å‰ºòÂåñ„ÄÇËøôÈáå‰ªãÁªç‰∫åËøõÂà∂‰ºòÂåñ(ËßÅEÈ¢ò)„ÄÇ E:Dividing È¢òÊÑèÔºöÁªôÂá∫‰∏ÄÂ†ÜÈù¢È¢ùÂàÜÂà´‰∏∫1-6ÁöÑÁ°¨Â∏ÅÔºåÈóÆÊòØÂê¶ÂèØ‰ª•ÂàÜ‰∏∫Á≠âÈ¢ùÁöÑ‰∏§Â†Ü ÂàÜÊûê:ÊòØÂê¶ËÉΩÂàÜ‰∏∫Á≠âÈ¢ùÁöÑ‰∏§Â†Ü&lt;==&gt;ËÉΩÂê¶Ë£ÖÊª°ÊÄªÈù¢È¢ù‰∏ÄÂçäÁöÑÈù¢È¢ù ==&gt;(ÂøÖÈ°ªË£ÖÊª°ÁöÑ)Â§öÈáçËÉåÂåÖÈóÆÈ¢ò„ÄÇ==&gt;ÂàÜËß£Êàê01ËÉåÂåÖÂ§çÊùÇÂ∫¶O(V*sigema(C)) ==&gt;Â¶Ç‰ΩïÈôç‰ΩéÂ§çÊùÇÂ∫¶(1*) (1*):ÂÅáËÆæ‰∏Ä‰∏™Áâ©ÂìÅÂè™ËÉΩÂèñl‰ª∂ÔºåÂ∞ÜlÂàÜËß£Êàê2^0+2^1+...+2^n+M,Ë°®Á§∫Â∞Ül‰ª∂Áâ©ÂìÅÂàÜËß£ ÊàêÁ≥ªÊï∞‰∏∫2^0,2^1,...,2^n,MÁöÑu‰ª∂Áâ©ÂìÅÔºåÊØîÂ¶ÇËØ¥Ôºå13‰ª∂‰ª∑ÂÄº‰∏∫1ÁöÑÁâ©ÂìÅÔºåÂàÜËß£Êàê1,2,4,6 Ëøô4‰ª∂Áâ©ÂìÅÔºå‰ª∑Ê†ºÂàÜÂà´‰∏∫1*1,2*1,4*1,6*1„ÄÇ ‰∏∫‰ªÄ‰πàËøô‰∏™ÁÆóÊ≥ïÊòØÊ≠£Á°ÆÁöÑÂë¢ÔºüÊàëËá™Â∑±ÁöÑÁêÜËß£ÊòØÔºåÈ¶ñÂÖàÊàë‰ª¨Áü•ÈÅìÊØè‰∏™Êï∞ÈÉΩÂèØ‰ª•Áî±Ëã•Âπ≤‰∏™ 2ÁöÑÂπÇÊ¨°Êï∞Áõ∏Âä†ÂæóÂà∞„ÄÇÁÑ∂Âêé,‰∏æÂàöÂàöÁöÑ13‰ª∂Áâ©ÂìÅ‰∏∫‰æãÔºåÂàÜËß£‰πãÂêéÔºåËøô4‰∏™‰ª∑Ê†ºÂ∑≤ÁªèÂèØ‰ª•Ë£ÖÊª°Ôºå (1,13)‰∏≠Ôºå3=1+2,5=1+4,7=1+2+4,8=2+6,9=1+2+6,10=4+6,11=1+4+6,12=2+4+6. Â§ßÂÆ∂ÂèØ‰ª•ÂèëÁé∞ÔºåÊØè‰∏™‰ª∑ÂÄºÈÉΩÂèØ‰ª•Áî±Ëøô4‰∏™Èù¢È¢ùÊê≠ÈÖçÂæóÂà∞ÔºåÂπ∂‰∏îÈÉΩÂè™ÈÄâÁî®‰∏ÄÊ¨°„ÄÇÁÆóÊ≥ïÊ≠£Á°ÆÊÄßÊòæÁÑ∂„ÄÇ (ÊàëÁü•ÈÅì‰∏ç‰∏•Ë∞®ÔºåÂà´ÊâìÊàëÊàëÊòØÂºüÂºü) ÂÖ∑‰ΩìÁúã‰ª£Á†Å‰∏ª‰Ωì: View Codec++ #include &lt;iostream&gt; #include &lt;cstdio&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; #include &lt;cmath&gt; using namespace std; const int N=5e5; int c[7],f[N],t=0; int main() { while(1) { int sum=0; for(int i=1;i&lt;=6;i++) { scanf(&quot;%d&quot;,&amp;c[i]); sum+=i*c[i]; } if(sum==0) break; if(sum%2!=0) { printf(&quot;Collection #%d:\\n&quot;,++t); printf(&quot;Can&#39;t be divided.\\n\\n&quot;); continue; } sum/=2; for(int i=1;i&lt;=sum;i++) f[i]=-1e9; f[0]=0; for(int i=1;i&lt;=6;i++) { int l=min(c[i],sum/i); for(int k=1;l&gt;0;k*=2) { if(k&gt;l) k=l; l-=k; for(int j=sum;j&gt;=i*k;j--) { f[j]=max(f[j],f[j-i*k]+i*k); } } } printf(&quot;Collection #%d:\\n&quot;,++t); if(f[sum]&lt;0) { printf(&quot;Can&#39;t be divided.\\n\\n&quot;); }else{ printf(&quot;Can be divided.\\n\\n&quot;); } } return 0; } F:Coins Â§ßÊÑèÔºöÁªôÂá∫Á°¨Â∏ÅÈù¢È¢ùÂèäÊØèÁßçÁ°¨Â∏ÅÁöÑ‰∏™Êï∞ÔºåÊ±Ç‰ªé1Âà∞mËÉΩÂáëÂá∫Èù¢È¢ùÁöÑ‰∏™Êï∞„ÄÇ ÂàÜÊûê:‰ªÖÈúÄË¶ÅÁü•ÈÅìÊòØÂê¶ËÉΩÂæóÂà∞ËØ•Èù¢È¢ù==&gt;Â§öÈáçËÉåÂåÖÁöÑÂèØË°åÊÄßÈóÆÈ¢ò Â¶ÇÊûúÊàë‰ª¨‰ªçÈÄâÁî®‰∏ä‰∏ÄÈÅìÈ¢òÁöÑËß£Ê≥ïÔºåÂç≥‰æøÈááÁî®‰∫åËøõÂà∂‰ºòÂåñÔºåO(V*sigema(log(ci))*M) ‰πüÊâøÊãÖ‰∏çËµ∑Ôºå‰ΩÜÊòØÊàë‰ª¨ÂèØ‰ª•ÊÉ≥Âà∞ËøôÈÅìÈ¢ò‰∏çÈúÄË¶ÅÁü•ÈÅìË£ÖÊª°ËØ•ÂÆπÈáèÁöÑÊúÄÂ§ß‰ª∑ÂÄº(ÂÆûÈôÖ‰∏ä‰∏ä‰∏Ä È¢ò‰πü‰∏çÈúÄË¶ÅÔºåÂè™ÊòØ‰∏∫‰∫ÜÂ≠¶‰π†‰∫åËøõÂà∂‰ºòÂåñËÄåÊïÖÊÑè‰ΩøÁî®ÁöÑ)ÔºåËøôÈáåÈù¢ÊàñËÆ∏ÂèØ‰ª•‰ºòÂåñ„ÄÇ ==&gt;ËÆæ F[i,j] Ë°®Á§∫‚ÄúÁî®‰∫ÜÂâç i ÁßçÁâ©ÂìÅÂ°´Êª°ÂÆπÈáè‰∏∫ j ÁöÑËÉåÂåÖÂêéÔºåÊúÄÂ§öËøòÂâ© ‰∏ãÂá†‰∏™Á¨¨ i ÁßçÁâ©ÂìÅÂèØÁî®‚ÄùÔºåÂ¶ÇÊûú F[i,j] = ‚àí1 ÂàôËØ¥ÊòéËøôÁßçÁä∂ÊÄÅ‰∏çÂèØË°åÔºåËã•ÂèØË°åÂ∫îÊª°Ë∂≥ 0 ‚â§ F[i,j] ‚â§ M i ÂÖ∑‰ΩìÁúã‰ª£Á†Å (=¬¥œâÔΩÄ=)Ôºö(Á¨¨‰∫åÂ±ÇÁöÑ‰∏§‰∏™Âæ™ÁéØÂèØ‰ª•ÂêàÂπ∂ÔºåÂáèÂ∞ë‰∏Ä‰∫õÂ∏∏Êï∞Â§çÊùÇÂ∫¶Ôºå‰∏çÁÑ∂ÁºñËØëÂô®ÈÄâÁöÑ‰∏çÂ•ΩÂ∞±‰ºöTÔºàÈÄÉ~) View Codec++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstdio&gt; #include &lt;string.h&gt; using namespace std; const int N=1e5+5; int f[N],n,m,cut[105],w[105]; int main() { while(~scanf(&quot;%d %d&quot;,&amp;n,&amp;m)&amp;&amp;n&amp;&amp;m) { for(int i=1;i&lt;=n;i++) {scanf(&quot;%d&quot;,&amp;w[i]);} for(int i=1;i&lt;=n;i++) {scanf(&quot;%d&quot;,&amp;cut[i]);} for(int j=1;j&lt;=m;j++) {f[j]=-1;} f[0]=0; for(int i=1;i&lt;=n;i++) { for(int j=0;j&lt;=m;j++) { if(f[j]&gt;=0) { f[j]=cut[i]; }else{ f[j]=-1; } } for(int j=0;j&lt;=m-w[i];j++) { if(f[j]&gt;0) { f[j+w[i]]=max(f[j+w[i]],f[j]-1); } } } int ans=0; for(int j=1;j&lt;=m;j++) { if(f[j]&gt;=0) ans++; } printf(&quot;%d\\n&quot;,ans); } return 0; } Êï∞Â°îÈóÆÈ¢òdp‰∏≠ÊØîËæÉÁÆÄÂçïÁöÑÁ±ªÂûã,ÊúÄÁÆÄÂçïÁöÑÂç≥ÈáëÂ≠óÂ°îÈóÆÈ¢ò,‰ªéÈ°∂Á´ØÂà∞Â∫ïÈÉ®ÁöÑÊúÄÁü≠Ë∑ùÁ¶ª ÂàùÂ≠¶ËÄÖÂÆπÊòìËØØËÆ§‰∏∫ÂèØ‰ª•Áî®Ë¥™ÂøÉËß£ÂÜ≥(ÂØπÂ∞±ÊòØÊàë)o(‚ï•Ôπè‚ï•)o C:Unidirectional TSP Â§ßÊÑèÔºö‰∏Ä‰∏™‰∫∫‰ªéÂ∑¶ËæπÁßªÂä®Âà∞Âè≥Ëæπ,ÂèØ‰ª•Ëµ∞‰∏â‰∏™ÊñπÂêë(ÂèØÂÆûÁé∞Á¨¨‰∏ÄÊéíÁßªÂä®Âà∞ÊúÄ‰∏ãÈù¢‰∏ÄÊéíÁöÑÁ©øË∂ä) ÂàÜÊûê:Êï∞Â°îÈóÆÈ¢òÁöÑËøõÈò∂,ÁûéÊêûÊêûÂèØËÉΩ‰πüËÉΩËøá(ÂàíÊéâ)ÔºåÂõ†‰∏∫Ë¶ÅËæìÂá∫Â≠óÂÖ∏Â∫èÊúÄÂ∞è,ÂÖ≥ÈîÆÊòØÂ¶Ç‰ΩïÂ∑ßÂ¶ô Ëß£ÂÜ≥ÂèØ‰ª•Á©øË∂äÁöÑÈóÆÈ¢ò(1*)„ÄÇ 1*:ÂØπ‰∫éÂΩìÂâçËäÇÁÇπÔºåÊääÂèØ‰ª•ÁßªÂä®Âà∞ËØ•ËäÇÁÇπÁöÑ‰∏â‰∏™ÂùêÊ†áÁöÑÂàóÊï∞ËÆ∞ÂΩï‰∏ãÊù•ÔºåËøõË°å‰∏Ä‰∏™ÊéíÂ∫è,ËøôÊ†∑ ÂèØ‰ª•Êää‰∏ä‰∏ã‰∏§ÊéíÁöÑÂà§Êñ≠‰∏ÄËà¨ÂåñÔºå‰∏çÈúÄË¶ÅÁâπÂà§ÔºåÁº©Âáè‰ª£Á†ÅÈáèÔºå‰πü‰∏çÂÆπÊòìÂÜôÈîô ÂÖ∑‰Ωì‰ª£Á†ÅÔºö View Codec++ #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; using namespace std; const int N=105; const int INF=1e9; int m,n,d[15][N],nxt[15][N],a[15][N]; int main() { while(~scanf(&quot;%d %d&quot;,&amp;m,&amp;n)) { for(int i=0;i&lt;m;i++) { for(int j=0;j&lt;n;j++) { scanf(&quot;%d&quot;,&amp;a[i][j]); } } int ans=INF,first=0; for(int j=n-1;j&gt;=0;j--) { for(int i=0;i&lt;m;i++) { if(j==n-1) d[i][j]=a[i][j]; else { int rows[3]={i,i-1,i+1}; if(i==0) rows[1]=m-1; if(i==m-1) rows[2]=0; sort(rows,rows+3); d[i][j]=INF; for(int k=0;k&lt;3;k++) { int v=d[rows[k]][j+1]+a[i][j]; if(v&lt;d[i][j]) {d[i][j]=v;nxt[i][j]=rows[k];} } } if(j==0&amp;&amp;d[i][j]&lt;ans){ans=d[i][j];first=i;} } } printf(&quot;%d&quot;,first+1); for(int i=nxt[first][0],j=1;j&lt;n;i=nxt[i][j],j++) printf(&quot; %d&quot;,i+1); printf(&quot;\\n%d\\n&quot;,ans); } return 0; } LCS(ÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàó) &amp;&amp; LIS(ÊúÄÈïøÂçïË∞ÉÂ≠êÂ∫èÂàó)ÊØîËæÉÁÆÄÂçïÁöÑDPÁ±ªÂûã,ÂÖ∑‰ΩìÁöÑËÆ≤Ëß£ÂèØ‰ª•ÂèÇËÄÉ ËøôÈáå(Â∏∏ËßÅÁöÑÂä®ÊÄÅËßÑÂàíÈóÆÈ¢òÂàÜÊûê‰∏éÊ±ÇËß£) G:Common Subsequence Â§ßÊÑèÔºöÊ±Ç‰∏§Â≠óÁ¨¶‰∏≤ÁöÑÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàó ÂàÜÊûêÔºöË£∏ÁöÑLCSÊ®°ÊùøÔºåÁõ¥Êé•Êîæ‰ª£Á†ÅÂï¶(&gt;œâÔΩ•* )Ôæâ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö View Codec++ #include &lt;iostream&gt; #include &lt;string.h&gt; #include &lt;algorithm&gt; #include &lt;cmath&gt; using namespace std; int f[1005][1005]; char c1[1005],c2[1005]; int main() { while(~scanf(&quot;%s %s&quot;,c1,c2)) { int len1=strlen(c1),len2=strlen(c2); memset(f,0,sizeof(f)); for(int i=1;i&lt;=len1;i++) { for(int j=1;j&lt;=len2;j++) { if(c1[i-1]==c2[j-1]) { f[i][j]=f[i-1][j-1]+1; }else { f[i][j]=max(f[i-1][j],f[i][j-1]); } } } printf(&quot;%d\\n&quot;,f[len1][len2]); } return 0; } H:ÊúÄÂ∞ëÊã¶Êà™Á≥ªÁªü Â§ßÊÑè:ÂØºÂºπÊã¶Êà™Á≥ªÁªüÂèØÈÄíÂáèÈ´òÂ∫¶Âú∞Êã¶Êà™ÂØºÂºπÔºåÊ±ÇÊã¶Êà™ÂÖ®ÈÉ®ÂØºÂºπÊúÄÂ∞ëÈúÄË¶ÅÂ§öÂ∞ëÂ•óÁ≥ªÁªü„ÄÇ ÂàÜÊûêÔºöÊ≠£ÂêëÁî®LISÊàë‰ª¨ÂèØ‰ª•Áü•ÈÅìÁ≥ªÁªüÂèØ‰ª•Êã¶Êà™ÁöÑÊúÄÂ§öÁöÑÂØºÂºπÊòØÂ§öÂ∞ëÔºåÂèçËøáÊù•‰æøÂèØ‰ª• Ê±ÇÂæóÊúÄÂ∞ëÈúÄË¶ÅÂ§öÂ∞ëÂ•óÁ≥ªÁªü(Ê≠§Â§ÑÈúÄË¶ÅDilworthÂÆöÁêÜÔºå‰∏ç‰ºöÔºåÂÖàÊåñ‰∏™Âùë) Áõ¥Êé•‰∏ä‰ª£Á†ÅÔºö View Codec++ #include &lt;cstdio&gt; #include &lt;string.h&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; using namespace std; const int maxn = 1e5+10; int n,f[maxn],num[maxn],d[maxn]; int main() { //freopen(&quot;1020.txt&quot;,&quot;r&quot;,stdin); while(~scanf(&quot;%d&quot;,&amp;n)){ int t=0; for(int i=1;i&lt;=n;i++) { scanf(&quot;%d&quot;,&amp;num[i]); f[i]=1; //cout&lt;&lt;num[i]&lt;&lt;endl; for(int j=t;j&gt;=1;j--) { //cout&lt;&lt;num[j]&lt;&lt;&quot; &quot;; if(num[i]&gt;num[d[j]]){ f[i]=max(f[i],f[d[j]]+1); } } t=max(t,f[i]); d[f[i]]=i; } cout&lt;&lt;t&lt;&lt;endl; } return 0; } I:Super Jumping! Jumping! Jumping! Â§ßÊÑèÔºö‰ªéËµ∑ÁÇπÂæÄÁªàÁÇπË∑≥Ë∑ÉÔºåÂè™ËÉΩÂà∞ÊØîÂΩìÂâçÊ†ºÂ≠ê‰∏•Ê†ºÂ∞èÁöÑÊ†ºÂ≠êÔºå‰∏çËÉΩÂõûÂ§¥ÔºåÂàÜÊï∞‰∏∫Ë∑≥ËøáÁöÑÊ†ºÂ≠ê‰ª∑ÂÄºÊÄªÂíå„ÄÇ ÂàÜÊûêÔºöLISË£∏È¢òÔºåÂè™‰∏çËøáf[i]‰ªéË°®Á§∫ÈïøÂ∫¶Êîπ‰∏∫Ë°®Á§∫sum ‰ª£Á†ÅÊù•ÂíØ||„ÉΩ(Ôø£‚ñΩÔø£)„Éé„Éü|–Æ View Codec++ #include &lt;cstdio&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; #include &lt;iostream&gt; using namespace std; const int maxn = 1000+10; int f[maxn],n,a[maxn]; int main() { while(~scanf(&quot;%d&quot;,&amp;n)&amp;&amp;n) { for(int i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;a[i]); memset(f,0,sizeof(f)); int ans=-1; for(int i=1;i&lt;=n;i++) { f[i]=a[i]; for(int j=1;j&lt;i;j++) { if(a[j]&lt;a[i]) { f[i]=max(f[i],f[j]+a[i]); } } ans=max(ans,f[i]); } printf(&quot;%d\\n&quot;,ans); } return 0; } Á®çÂæÆÂ§çÊùÇM:Hills Â§ßÊÑèÔºö ÂàÜÊûêÔºö View Codec++ #include &lt;cstdio&gt; #include &lt;cstring&gt; #include &lt;algorithm&gt; using namespace std; #define N 5005 typedef long long ll; int n,a[N]; ll f[N][N&gt;&gt;1][2]; int main() { scanf(&quot;%d&quot;,&amp;n); int i,j; for(i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;a[i]); int lim=(n+1)&gt;&gt;1; memset(f,0x3f,sizeof(f)); f[0][0][0]=0; f[1][0][0]=f[1][1][1]=0; for(i=2;i&lt;=n;i++) { f[i][0][0]=0; for(j=1;j&lt;=i;j++) { f[i][j][1]=min(f[i-1][j-1][0]+max(0,a[i-1]-a[i]+1), f[i-2][j-1][1]+max(0,a[i-1]-min(a[i-2],a[i])+1)); f[i][j][0]=min(f[i-1][j][0],f[i-1][j][1]+max(0,a[i]-a[i-1]+1)); } } for(i=1;i&lt;=lim;i++) printf(&quot;%lld &quot;,min(f[n][i][0],f[n][i][1])); return 0; } N:Jury Compromise Â§ßÊÑèÔºö ÂàÜÊûêÔºö","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}],"tags":[{"name":"DP","slug":"DP","permalink":"http://WigginsLi.github.io/tags/DP/"},{"name":"ËÉåÂåÖ","slug":"ËÉåÂåÖ","permalink":"http://WigginsLi.github.io/tags/ËÉåÂåÖ/"},{"name":"Êï∞Â°îÈóÆÈ¢ò","slug":"Êï∞Â°îÈóÆÈ¢ò","permalink":"http://WigginsLi.github.io/tags/Êï∞Â°îÈóÆÈ¢ò/"},{"name":"LIS","slug":"LIS","permalink":"http://WigginsLi.github.io/tags/LIS/"},{"name":"LCS","slug":"LCS","permalink":"http://WigginsLi.github.io/tags/LCS/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://WigginsLi.github.io/categories/Âä®ÊÄÅËßÑÂàí/"}]},{"title":"ÂæÖË°• < DFS+BFS > 2019 GDUT Winter Training I","slug":"dfs-bfs-training","date":"2019-02-26T16:00:13.000Z","updated":"2019-03-15T05:29:26.975Z","comments":true,"path":"2019/02/27/dfs-bfs-training/","link":"","permalink":"http://WigginsLi.github.io/2019/02/27/dfs-bfs-training/","excerpt":"ÁúãÂà∞ÂêÑ‰ΩçdalaoÈÉΩÊääÈ¢òËß£ÂíåcfË°•ÂÆå‰∫Ü,ÂøÉÈáåÊÖåÂæó‰∏ÄÊâπ,È©¨‰∏ägunÊù•Ë°•È¢òËß£ÊÄªÁªì(„ÄÉ‚Äô‚ñΩ‚Äô„ÄÉ)‰∏ìÈ¢òÈìæÊé•","text":"ÁúãÂà∞ÂêÑ‰ΩçdalaoÈÉΩÊääÈ¢òËß£ÂíåcfË°•ÂÆå‰∫Ü,ÂøÉÈáåÊÖåÂæó‰∏ÄÊâπ,È©¨‰∏ägunÊù•Ë°•È¢òËß£ÊÄªÁªì(„ÄÉ‚Äô‚ñΩ‚Äô„ÄÉ)‰∏ìÈ¢òÈìæÊé• BFS(Breadth-first search):È°æÂêçÊÄù‰πâ,ÂπøÂ∫¶‰ºòÂÖàÊêúÁ¥¢Âç≥‰ºòÂÖàÂêÑ‰∏™ÊñπÂêëÂêëÂ§ñÊâ©Âº†,ËÄå‰∏çÊòØ‰∏ìÊ≥®‰∫éÊüê‰∏™ÊñπÂêë‰∏äÁöÑÊ∑±Â∫¶(DFS), Êó¢ÁÑ∂Â¶ÇÊ≠§,ÈÇ£‰πàBFS‰∏ÄÂ±Ç‰∏ÄÂ±ÇÂêëÂ§ñÂª∂‰º∏ÁöÑÁâπÁÇπÂèØÁî®‰∫éÊ±ÇËß£ÊúÄÁü≠Ë∑ØÈóÆÈ¢ò ‰∏ãÈù¢Âá†ÈÅì‰æãÈ¢òË∞ÉÊïô‰∏Ä‰∏ãÂêß(Ôø£‚ñΩÔø£)Ôºè K:Safe Path Â§ßÊÑè:ÁªôÂÆönm(2&lt;=nm&lt;=2e5)ÁöÑÂú∞Âõæ,ÂèØ‰∏ä‰∏ãÂ∑¶Âè≥ÁßªÂä®,Ê±Ç‰ªéSÁÇπÂà∞FÁÇπÁöÑÊúÄÁü≠Ë∑Ø,ÂêåÊó∂Âú∞ÂõæÊúâËã•Âπ≤ÊÄ™ÂÖΩM,ÂÖ∂(ÊõºÂìàÈ°øË∑ùÁ¶ª)[]‰∏∫d(0&lt;=d&lt;=2e5)ÁöÑÁÇπÂùá‰∏çÂèØËµ∞ ÂàÜÊûêÔºöÂ¶ÇÊûúÈ¢òÁõÆÊ≤°ÊúâÊÄ™ÂÖΩÁöÑÊù°‰ª∂,ÈÇ£‰πàÂ∞±ÊòØ‰∏ÄÈÅìBFSË£∏È¢òÔºåÈô§‰∫ÜÈúÄË¶ÅËÄÉËôëÂ¶Ç‰ΩïÂ≠òÂú∞Âõæ(*1). Â≠òÂú®ÊÄ™ÂÖΩÁöÑÊÉÖÂÜµ‰∏ã,ÂØπ‰∫éÊØè‰∏™ÊÄ™ÂÖΩÂ¶ÇÊûúÂÖ®ÈÉ®Êö¥ÂäõÊ†áËÆ∞‰∏çËÉΩËµ∞ÁöÑÁÇπ,ÈÇ£‰πàÂ≠òÂú®‰∏ÄÁæ§ÊÄ™ÂÖΩËÅöÂú®‰∏ÄËµ∑ Êó∂Ôºå‰ºöÂØπ‰∫éÊüê‰∫õÁÇπËøõË°åÂ§öÊ¨°Ê†áËÆ∞ÁöÑÂ§ö‰ΩôÊìç‰Ωú,Áõ¥Êé•T.(*2) Ëß£ÂÜ≥ÂäûÊ≥ïÔºö (*1)¬∑2e5*2e5‰∫åÁª¥Êï∞ÁªÑÂºÄ‰∏ç‰∏ã,ÂèØ‰ª•ËΩ¨Êç¢‰∏∫2e5‰∏ÄÁª¥Êï∞ÁªÑ. ¬∑Âõ†‰∏∫ËæìÂÖ•Êï∞ÊçÆÊòØÂ≠óÁ¨¶‰∏≤,‰πüÂèØ‰ª•ËÄÉËôëstringÂ≠òÂõæ.(STLÂ§ßÊ≥ïÂ•Ω) Êï¥Êï∞ÁöÑËØùÂèØ‰ª•Áî®vector. (*2)Êàë‰ª¨ÂõûÊÉ≥bfsÁöÑÊÄßË¥®ÔºåÂ¶ÇÊûú‰ªéÊØè‰∏™ÁâõÂêåÊó∂ÂºÄÂßãBFSËøõË°åÊ†áËÆ∞ÔºåÈÇ£‰πàÊüê‰∏§‰∏™ÁâõÁöÑÈáçÂêàÂå∫Âüü Â∞ÜÂè™‰ºöË¢´ÂÖ∂‰∏≠‰∏ÄÂè™ÁâõÊ†áËÆ∞ÔºåÈÇ£‰πàÂèØ‰ª•‰øùËØÅÊï¥Âº†ÂõæÊØè‰∏™ÁÇπÊúÄÂ§öÂè™Ë¢´Ê†áËÆ∞‰∏ÄÊ¨° ‰ª£Á†ÅÂ¶Ç‰∏ã‰ª£Á†ÅÈáåÈù¢ÊääÊØè‰∏™ÁÇπÁöÑ4‰∏™Êñπ‰ΩçÊúÄËøúÁÇπÂ≠òËøõÂéªÊòØÁÖûÁ¨îÊìç‰ΩúÁÆÄÊ¥ÅÂÜôÊ≥ïÊòØËÆ∞ÂΩïÊØè‰∏™ÊÄ™ÂÖΩÂùêÊ†áÔºåÊúÄÂêé‰∏ÄËµ∑‰∏¢ËøõqueueÈáåÈù¢ËøõË°åBFSÂç≥ÂèØ View Codec++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstdio&gt; #include &lt;queue&gt; #include &lt;map&gt; #include &lt;string.h&gt; using namespace std; const int maxn = 2e5+5; string a[maxn]; int n,m,d,sx,sy,fx,fy; int dir[5]={0,-1,0,1,0}; queue&lt;pair&lt;pair&lt;int,int&gt;,int&gt; &gt; q; map&lt;pair&lt;int,int&gt;,int&gt; ha; int main() { scanf(&quot;%d %d %d&quot;,&amp;n,&amp;m,&amp;d); getchar(); for(int i=0;i&lt;n;i++) { cin&gt;&gt;a[i]; getchar(); } for(int i=0;i&lt;n;i++) { for(int j=0;j&lt;m;j++) { if(a[i][j]==&#39;S&#39;) { sx=i,sy=j; }else if(a[i][j]==&#39;F&#39;){ fx=i,fy=j; }else if(a[i][j]==&#39;M&#39;) { q.push(make_pair(make_pair(i,j),1)); //shabiÊìç‰Ωú if(i+d&lt;n) q.push(make_pair(make_pair(i+d,j),1)),ha[make_pair(i+d,j)]=1; if(i-d&gt;=0) q.push(make_pair(make_pair(i-d,j),1)),ha[make_pair(i-d,j)]=1; if(j+d&lt;n) q.push(make_pair(make_pair(i,j+d),1)),ha[make_pair(i,j+d)]=1; if(j-d&gt;=0) q.push(make_pair(make_pair(i,j-d),1)),ha[make_pair(i,j-d)]=1; ha[make_pair(i,j)]=1; while(!q.empty()) { int x=q.front().first.first; int y=q.front().first.second; q.pop(); for(int k=-1;k&lt;=1;k++) { for(int kk=-1;kk&lt;=1;kk++) { int nx=x+k,ny=y+kk; if(nx&gt;=0&amp;&amp;nx&lt;n&amp;&amp;ny&gt;=0&amp;&amp;ny&lt;m&amp;&amp;!ha.count(make_pair(nx,ny))&amp;&amp;a[nx][ny]!=&#39;M&#39;&amp;&amp;abs(nx-i)+abs(ny-j)&lt;=d) { //printf(&quot;%d %d %d %d\\n&quot;,nx,ny,i,j); a[nx][ny]=&#39;O&#39;; ha[make_pair(nx,ny)]=1; q.push(make_pair(make_pair(nx,ny),1)); } } } } } } } /* for(int i=0;i&lt;n;i++) { for(int j=0;j&lt;n;j++) { cout&lt;&lt;a[i][j]; } cout&lt;&lt;endl; } */ if(a[sx][sy]==&#39;S&#39;&amp;&amp;a[fx][fy]==&#39;F&#39;) { q.push(make_pair(make_pair(sx,sy),1)); ha[make_pair(sx,sy)]=1; while(!q.empty()){ int x=q.front().first.first; int y=q.front().first.second; int lv=q.front().second; //cout&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;endl; q.pop(); for(int i=0;i&lt;4;i++) { int nx=x+dir[i],ny=y+dir[i+1]; if(nx&gt;=0&amp;&amp;nx&lt;n&amp;&amp;ny&gt;=0&amp;&amp;ny&lt;m&amp;&amp;!ha.count(make_pair(nx,ny))&amp;&amp;a[nx][ny]!=&#39;O&#39;&amp;&amp;a[nx][ny]!=&#39;M&#39;) { if(a[nx][ny]==&#39;F&#39;) { cout&lt;&lt;lv&lt;&lt;endl; return 0; } ha[make_pair(nx,ny)]=1; q.push(make_pair(make_pair(nx,ny),lv+1)); } } } cout&lt;&lt;-1&lt;&lt;endl; }else{ printf(&quot;-1\\n&quot;); } return 0; } L:Find The Multiple Â§ßÊÑè:ÁªôÂÆöÊï¥Êï∞n(1&lt;=n&lt;=200),Ê±ÇG=m*nÂè™Â≠òÂú®1 or 0,(m&lt;=1e100),ËæìÂá∫G(‰∏çÂîØ‰∏Ä) ÂàÜÊûê:Â¶ÇÊûúÊåâÁÖßÈ¢òÊÑèÈÅçÂéÜnÁöÑÂÄçÊï∞ ==&gt; 1e100/1e2=1e98 ==&gt; TLE ÂèçËøáÊù•ÊÉ≥,Â¶ÇÊûúÂè™ÈÅçÂéÜÊâÄÊúâÂè™Êúâ1Êàñ0ÁöÑÊï¥Êï∞,ÈÇ£‰πàÁ∫¶Êúâ2^100‚âà1e30 ÊâìË°®‰πãÂêéÂèëÁé∞‰ºº‰πéÂπ∂‰∏çÈúÄË¶ÅËøô‰πàÂ§öÔºålong longÂ∞±ËÉΩË£Ö‰∏ã‰∫ÜÔºå‰∏ç‰ºöËØÅÊòéÔºåÈÄÉ~~ ÂÜôÊ≥ï:Áª¥Êä§‰∏Ä‰∏™queue,ÂÖàpush(1),ÊØèÊ¨°ÂèñÈòüÂ§¥x,x*10Âíåx*10+1ÁªßÁª≠pushËøõÂéª,Áõ¥Âà∞ÊâæÂà∞ ËÉΩÊï¥Èô§nÁöÑÊï¥Êï∞ÔºåËæìÂá∫ÔºåÁªìÊùü ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö View Codec++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstdio&gt; #include &lt;queue&gt; #include &lt;string.h&gt; using namespace std; typedef long long ll; int n; queue&lt;ll&gt; q; int main() { while(scanf(&quot;%d&quot;,&amp;n)&amp;&amp;n&gt;0) { while(!q.empty()) q.pop(); q.push(1); while(!q.empty()) { ll u=q.front(); q.pop(); if(u%n==0) { printf(&quot;%lld\\n&quot;,u); break; } q.push(u*10); q.push(u*10+1); } } return 0; } M:Prime Path Â§ßÊÑèÔºöÁªôÂÆö‰∏Ä‰∏™Âõõ‰ΩçÊï∞ÔºåÊØèÊ¨°‰øÆÊîπÂÖ∂‰∏≠‰∏Ä‰ΩçÔºåÊ±ÇÂà∞Ëææ‰∏Ä‰∏™Á¥†Êï∞ÁöÑÊúÄÁü≠Ë∑ØÂæÑ ÂàÜÊûê:Ê∂âÂèäÁ¥†Êï∞,ÈÇ£Â∞±ÂÖàÊâìÂá∫Á¥†Êï∞Ë°® ÈÇ£‰πàÂèØ‰ª•Ê®°ÊãüÈ¢òÊÑèËøõË°åBFS,ÊØèÊ¨°ÂèñÈòüÂ§¥,Êö¥ÂäõÂá∫ÊâÄÊúâÂèØ‰ª•Êç¢ÁöÑÊï∞Â≠ó (Ê≥®ÊÑèÁ¨¨‰∏Ä‰Ωç‰∏çËÉΩ‰∏∫0),Â≠òËøõÈòüÂàó ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö View Codec++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;string.h&gt; #include &lt;queue&gt; #include &lt;cstdio&gt; #include &lt;cmath&gt; using namespace std; const int maxn = 1e5; int T,p[maxn],vis[maxn],s,f; queue&lt;pair&lt;int,int&gt; &gt; q; void init() { memset(p,0,sizeof(p)); int m=sqrt(maxn+0.5); for(int i=2;i&lt;=m;i++) if(!p[i]) { for(int j=i*i;j&lt;=maxn;j+=i) p[j]=1;//1Ë°®Á§∫‰∏çÊòØ_(:–∑„Äç‚à†)_ } } int fun(int a,int n) { int u=1; for(int i=1;i&lt;n;i++) { a/=10; u*=10; } return a%10*u; } int mypow(int x,int y) { int u=1; for(int i=1;i&lt;=y;i++) { u*=x; } return u; } int main() { init(); scanf(&quot;%d&quot;,&amp;T); while(T--) { memset(vis,0,sizeof(vis)); scanf(&quot;%d %d&quot;,&amp;s,&amp;f); int ok=0; while(!q.empty()) q.pop(); q.push(make_pair(s,0)); vis[s]=1; while(!q.empty()) { int nownum=q.front().first; int nowlv=q.front().second; //printf(&quot;%d %d\\n&quot;,nownum,nowlv); q.pop(); if(nownum==f) { cout&lt;&lt;nowlv&lt;&lt;endl; ok=1; break; } for(int i=1;i&lt;=4;i++) { int c=nownum; c-=fun(c,i); //printf(&quot;%d %d\\n&quot;,nownum,c); for(int j=0;j&lt;=9;j++) { if(c+j*mypow(10,i-1)&gt;1000&amp;&amp;!vis[c+j*mypow(10,i-1)]&amp;&amp;!p[c+j*mypow(10,i-1)]) { q.push(make_pair(c+j*mypow(10,i-1),nowlv+1)); vis[c+j*mypow(10,i-1)]=1; } } } } if(!ok) { printf(&quot;Impossible\\n&quot;); } } return 0; } DFS(Depth-first search)Ê∑±Â∫¶‰ºòÂÖàÈÅçÂéÜÔºåÊúâÂà´‰∫éÂπøÂ∫¶‰ºòÂÖàÔºåÊØèÊ¨°ÊêúÁ¥¢ÈÉΩ‰ºö‚Äú‰∏ÄÊù°Ë∑ØËµ∞Âà∞Èªë‚Äù,ÂèØ‰ª•Áî®‰∫éÊ±ÇËß£ ÊòØÂê¶Â≠òÂú®ÂèØË°åËß£ÔºåÈÖçÂêàÂõûÊ∫Ø„ÄÅÂâ™ÊûùÊõ¥ÁæéÂë≥Âì¶Œ®(Ôø£‚àÄÔø£)Œ® G:Lake Counting Â§ßÊÑèÔºöÁªôÂÆön*mÁöÑÂú∞Âõæ,Ê±ÇwËÅîÈÄöÂùóÊï∞Èáè,ËøûÈÄöÁöÑÊù°‰ª∂ÊòØ8‰∏™ÊñπÂêë‰∏äÊúâÊé•Ëß¶. ÂàÜÊûê:Ë£∏DFSÔºåÊ≥®ÊÑè‰∏Ä‰∏ãÊ†áÂáÜÂÜôÊ≥ï„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö View Codec++ #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;string.h&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; using namespace std; const int maxn = 100; int ans=0,n,m,vis[maxn][maxn]; char map[maxn][maxn]; int dir[3]={0,-1,1}; int dfs(int x,int y) { for(int i=0;i&lt;3;i++) { for(int j=0;j&lt;3;j++) { int nx=x+dir[i],ny=y+dir[j]; if(nx&gt;=0&amp;&amp;ny&gt;=0&amp;&amp;nx&lt;n&amp;&amp;ny&lt;m&amp;&amp;!vis[nx][ny]&amp;&amp;map[nx][ny]==&#39;W&#39;){ vis[nx][ny]=1; dfs(nx,ny); } } } return 0; } int main() { memset(vis,0,sizeof(vis)); scanf(&quot;%d %d&quot;,&amp;n,&amp;m); getchar(); for(int i=0;i&lt;n;i++) { gets(map[i]); } for(int i=0;i&lt;n;i++) { for(int j=0;j&lt;m;j++) { if(!vis[i][j]&amp;&amp;map[i][j]==&#39;W&#39;) { ans++; vis[i][j]=1; dfs(i,j); } } } cout&lt;&lt;ans&lt;&lt;endl; return 0; } I:Red and Black Â§ßÊÑè:ÁªôÂÆöN*MÁöÑÂú∞Âõæ,Ê±ÇÂá∫Ëµ∑ÁÇπ@ËÉΩÂæÄÂ§ñËµ∞ÁöÑÊ†ºÂ≠ê‰∏™Êï∞ ÂàÜÊûê:dfsË£∏È¢òÔºåÊâæÂà∞Ëµ∑ÁÇπÔºåÂºÄÂßãdfsÈÄíÂΩíÔºåÊ†áËÆ∞Ëµ∞ËøáÁöÑÊ†ºÂ≠êÔºåÊúÄÂêéÁªüËÆ°‰∏Ä‰∏ãÊúâÂ§öÂ∞ë‰∏™ Ê†áËÆ∞Âç≥ÂèØ ‰ª£Á†ÅÂ¶Ç‰∏ã: View Codec++ #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;string.h&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; using namespace std; const int maxn = 50; int ans=0,n,m,vis[maxn][maxn]; char map[maxn][maxn]; int dir[5]={0,-1,0,1,0}; int dfs(int x,int y) { for(int i=0;i&lt;4;i++) { int nx=x+dir[i],ny=y+dir[i+1]; if(nx&gt;=0&amp;&amp;ny&gt;=0&amp;&amp;nx&lt;n&amp;&amp;ny&lt;m&amp;&amp;!vis[nx][ny]&amp;&amp;map[nx][ny]==&#39;.&#39;){ vis[nx][ny]=1; dfs(nx,ny); } } return 0; } int main() { while(scanf(&quot;%d %d&quot;,&amp;m,&amp;n)&amp;&amp;n&gt;0&amp;&amp;m&gt;0) { memset(vis,0,sizeof(vis)); getchar(); for(int i=0;i&lt;n;i++) { gets(map[i]); } for(int i=0;i&lt;n;i++) { for(int j=0;j&lt;m;j++) { if(map[i][j]==&#39;@&#39;) { vis[i][j]=1; dfs(i,j); } } } ans=0; for(int i=0;i&lt;n;i++) { for(int j=0;j&lt;m;j++) { if(vis[i][j]) { ans++; } } } cout&lt;&lt;ans&lt;&lt;endl; } return 0; } H:Sticks ËøòÊ≤°Ë°•or2 J:AND Graph ÂêåÊ†∑Ê≤°ÂÅö(/œâÔºº) ÂêéËÆ∞:‰∏ìÈ¢ò‰∏ÄÁöÑÁÆÄÂçïÊÄªÁªìÁªìÊùüÔºå‰∏ìÈ¢ò‰∫åÁöÑDPÁªßÁª≠Âä†Ê≤πÂïäWiLeËíüËíª‚à†( ¬∞œâ¬∞)Ôºè","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"ÂõæËÆ∫","slug":"ÂõæËÆ∫","permalink":"http://WigginsLi.github.io/categories/ÂõæËÆ∫/"}],"tags":[{"name":"DFS","slug":"DFS","permalink":"http://WigginsLi.github.io/tags/DFS/"},{"name":"BFS","slug":"BFS","permalink":"http://WigginsLi.github.io/tags/BFS/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"},{"name":"ÂõæËÆ∫","slug":"ÂõæËÆ∫","permalink":"http://WigginsLi.github.io/categories/ÂõæËÆ∫/"}]},{"title":"ËΩ¨Êàòvim(ÈôÑÈÖçÁΩÆ)","slug":"vim-use","date":"2019-01-31T17:41:57.000Z","updated":"2019-05-27T12:54:41.336Z","comments":true,"path":"2019/02/01/vim-use/","link":"","permalink":"http://WigginsLi.github.io/2019/02/01/vim-use/","excerpt":"Áªà‰∫éÁóõÂøÉÁñæÈ¶ñ‰∏ãÂÆöÂ±ÖÂøÉÊäõÂºÉDevÔºåÈô™ÁùÄÊâì‰∫ÜÂá†Âπ¥oiÁöÑËÄÅ‰ºô‰º¥Â∑≤Áªè‰∏çÈÄÇÁî®‰∫éACM‰∫Ü Â∑≤ÁªèÊäõÂºÉÂéüÁîüvim(ÂÆûÂú®‰∏ë,È¢úÊéßÊçÇËÑ∏),vscodeÊàñËÄÖatomÁöÑvimÊ®°ÂºèÊõ¥Â•ΩÁúã","text":"Áªà‰∫éÁóõÂøÉÁñæÈ¶ñ‰∏ãÂÆöÂ±ÖÂøÉÊäõÂºÉDevÔºåÈô™ÁùÄÊâì‰∫ÜÂá†Âπ¥oiÁöÑËÄÅ‰ºô‰º¥Â∑≤Áªè‰∏çÈÄÇÁî®‰∫éACM‰∫Ü Â∑≤ÁªèÊäõÂºÉÂéüÁîüvim(ÂÆûÂú®‰∏ë,È¢úÊéßÊçÇËÑ∏),vscodeÊàñËÄÖatomÁöÑvimÊ®°ÂºèÊõ¥Â•ΩÁúã ËøôÂá†Â§©ÂÖàÊòØÊç£Èºì‰∫Üwin‰∏ãÁöÑgvimÔºåÂèëÁé∞ÊÄé‰πàÁî®ÊÄé‰πàÂà´Êâ≠ÔºåÂè™Â•ΩËΩ¨ËôöÊãüÊú∫ÁöÑUbuntuÔºåvimÁÆÄÂçï‰∏äÊâãÊâì‰∫Ü‰∏ÄÂú∫cfÊ®°ÊãüËµõÔºàËøòÂ•ΩÂè™ÊòØÊ®°ÊãüÔºå‰∏çÁÑ∂‰πüÊòØÂæóÊéâÂàÜ‰∫ÜÔºâupdateÔºöËøòÊòØÂõûÂà∞winÁéØÂ¢É‰∏ãÊØîËæÉ‰π†ÊÉØÔºåÊØïÁ´üÂæàÂ§öÈÖçÁΩÆ‰πãÁ±ªÁöÑ‰∏çËÉΩÂÖ±‰∫´ÔºåËÄå‰∏îLinux‰∏ãÂèàÊâæ‰∏çÂà∞ÂêàÈÄÇÁöÑ‰ª£ÊõøÂ∏∏Áî®ËΩØ‰ª∂ÁöÑÊõø‰ª£ÂìÅOrz win‰∏ãÁªàÁ´ØÁöÑËØùÂõ†‰∏∫cmdÂÆûÂú®Â§™‰∏ë‰∫ÜÔºåÊé®Ëçêgit bash vimÂú®Êüê‰∫õÊñπÈù¢ÈùûÂ∏∏Â•ΩÁî®ÔºåÊØîÂ¶ÇÊ†áÂáÜÊ®°Âºè‰∏ã‚Äôgg=G‚ÄôËá™Âä®Â§ÑÁêÜ‰ª£Á†ÅÁº©ËøõÔºå‰ΩÜÊòØÊüê‰∫õÊñπÈù¢ÂØπ‰∫éÊàëËøô‰∏™winÂÖöÈÄ†Êàê‰∫ÜÊûÅÂ§ßÁöÑ‰º§ÂÆ≥ÔºåCtrl C„ÄÅVÈªòËÆ§‰∏çÊòØÂ§çÂà∂Á≤òË¥¥,ÊØèÊ¨°ÊåâÂá∫‰∏™‚Äù^c‚Äù‰πãÁ±ªÁöÑ,ÂÜÖÂøÉ‰∏áÂçÉËçâÊ≥•È©¨„ÄÇ ‰∏ãÈù¢ÈôÑ‰∏äÈÖçÁΩÆ &quot;Ëá™Âä®Êã¨Âè∑ÂåπÈÖç imap {&lt;CR&gt; {&lt;CR&gt;}&lt;ESC&gt;O imap [ []&lt;LEFT&gt; imap ( ()&lt;LEFT&gt; imap &lt; &lt;&gt;&lt;LEFT&gt; syntax on set nu set nocompatible set cindent set mouse=a set autoindent set shiftwidth=4 set tabstop=4 set softtabstop=4 set expandtab set cursorline nmap&lt;F2&gt; : vs %&lt;.in &lt;CR&gt; &quot;nmap&lt;F8&gt; : !./%&lt; &lt; %&lt;.in &lt;CR&gt; nmap&lt;F8&gt; : !./%&lt; &lt; %&lt;.in &lt;CR&gt; &quot;nmap&lt;F4&gt; : !gedit % &lt;CR&gt; nmap&lt;F4&gt; : !notepad % &lt;CR&gt; &quot;nmap&lt;F5&gt; : !./%&lt; &lt;CR&gt; nmap&lt;F5&gt; : !%&lt;.exe &lt;CR&gt; nmap&lt;F7&gt; : !g++ % -o %&lt; -O2 -g -Wall &lt;CR&gt; psÔºöÊ≥®ÈáäÊéâÁöÑÊòØLinux‰∏ã‰ΩøÁî®ÁöÑ ‰ª•‰∏ä","categories":[{"name":"Experience","slug":"Experience","permalink":"http://WigginsLi.github.io/categories/Experience/"}],"tags":[{"name":"vim","slug":"vim","permalink":"http://WigginsLi.github.io/tags/vim/"}],"keywords":[{"name":"Experience","slug":"Experience","permalink":"http://WigginsLi.github.io/categories/Experience/"}]},{"title":"< Â∞∫Âèñ,‰∫åÂàÜ,‰∏âÂàÜ > 2019 GDUT Winter Training I","slug":"19_1_16","date":"2019-01-16T20:45:29.000Z","updated":"2019-08-09T11:06:35.106Z","comments":true,"path":"2019/01/17/19_1_16/","link":"","permalink":"http://WigginsLi.github.io/2019/01/17/19_1_16/","excerpt":"ÂØíÂÅáÈõÜËÆ≠‰∏ìÈ¢ò‰∏ÄÔºàÂØπÊ≤°ÈîôÊú¨ËíüËíªÊù•CtrlCVÂ§ßÊ≥ïÂÜôÈ¢òËß£+ÊÄªÁªì‰∫ÜÔºâ‰∏ìÈ¢ò‰∏Ä(ÁÇπËøôÈáå)ÂåÖÊã¨Â∞∫ÂèñÔºå‰∫åÂàÜÔºå‰∏âÂàÜÔºådfsÔºåbfs(ÊêúÁ¥¢Â•ΩÈöæ(:–∑„Äç‚à†))ËøôÁØáÊñáÂ≠óÂ∞±ÁÆÄÂçïËÆ≤ËÆ≤Â∞∫Âèñ„ÄÅ‰∫åÂàÜ„ÄÅ‰∏âÂàÜÂêß 19.3.5 update : ‰øÆÂ§ç‰∫Ü‰∏Ä‰∫õÊéíÁâàÁöÑÂ∞èbug","text":"ÂØíÂÅáÈõÜËÆ≠‰∏ìÈ¢ò‰∏ÄÔºàÂØπÊ≤°ÈîôÊú¨ËíüËíªÊù•CtrlCVÂ§ßÊ≥ïÂÜôÈ¢òËß£+ÊÄªÁªì‰∫ÜÔºâ‰∏ìÈ¢ò‰∏Ä(ÁÇπËøôÈáå)ÂåÖÊã¨Â∞∫ÂèñÔºå‰∫åÂàÜÔºå‰∏âÂàÜÔºådfsÔºåbfs(ÊêúÁ¥¢Â•ΩÈöæ(:–∑„Äç‚à†))ËøôÁØáÊñáÂ≠óÂ∞±ÁÆÄÂçïËÆ≤ËÆ≤Â∞∫Âèñ„ÄÅ‰∫åÂàÜ„ÄÅ‰∏âÂàÜÂêß 19.3.5 update : ‰øÆÂ§ç‰∫Ü‰∏Ä‰∫õÊéíÁâàÁöÑÂ∞èbug Â∞∫ÂèñÂü∫Êú¨ÊÄùË∑ØÔºöÂ∞∫Âèñ‰πüË¢´Áß∞‰∏∫‚ÄúÊØõÊØõËô´Ê≥ï‚ÄùÔºåÈ°æÂêçÊÄù‰πâÔºåÂú®Ê±Ç‰∏ÄÊÆµËøûÁª≠Â≠êÂå∫Èó¥Êó∂ÔºåÂ∑¶Âè≥ËæπÁïåËøõË°åÊå™Âä®‰ªéËÄåÂæóÂà∞Ëß£„ÄÇÔºàËøô‰∏çÊòØÂ∫üËØùÂòõË∞ÅÁü•ÈÅì‰Ω†Âú®ËÆ≤‰ªÄ‰πàÔºâÈÇ£‰πàÊé•‰∏ãÊù•‰ªé‰æãÂ≠êÂÖ•Êâã„ÄÇ ‰æãÈ¢ò‰∏Ä(AÈ¢ò) Â§ßÊÑèÔºöÊòØÁªô‰∏ÄÊÆµn‰∏™Ê≠£Êï¥Êï∞ÁöÑÂ∫èÂàóÔºåËÆ©‰Ω†ÊâæÂá∫ÊúÄÁü≠ÁöÑÊª°Ë∂≥Âå∫Èó¥ÂíåÂ§ß‰∫éSÁöÑÂ≠êÂ∫èÂàóÁöÑÈïøÂ∫¶ ÂØπ‰∫éËøôÈÅìÈ¢òÔºåÊàë‰ª¨ÂèØ‰ª•ËÄÉËôëÁª¥Êä§l„ÄÅrË°®Á§∫ÂΩìÂâçÂå∫Èó¥ÁöÑËæπÁïåÔºåÂàùÂßãl,rÊåáÂêëÂ∫èÂàóÂ§¥ÔºåÂØπ‰∫éÂΩìÂâçÂå∫Èó¥ÔºåÂ¶ÇÊûúÂå∫Èó¥Âíå‰ªçÂ∞è‰∫éSÔºåÈÇ£‰πàÊàë‰ª¨ÈúÄË¶Å‰ΩørÂæÄÂâçÁßªÔºàÂ∞±ÂÉèÊØõÊØõËô´ÁöÑÂ§¥ÂæÄÂâçÊå™ÔºâÔºåÁõ¥Âà∞ÂΩìÂâçÂå∫Èó¥ÂíåÂ§ß‰∫éÁ≠â‰∫éSÔºåËÆ∞ÂΩï‰∏ãÂΩìÂâçÂå∫Èó¥ÈïøÂ∫¶ËøôÊó∂ÂÄôÂ¶ÇÊûúrÁªßÁª≠ÂâçÁßªÔºåÈÇ£‰πàËôΩÁÑ∂ÂΩìÂâçÂå∫Èó¥Êª°Ë∂≥Êù°‰ª∂Ôºå‰ΩÜÈïøÂ∫¶ÂøÖÂÆöÊØîÂ∑≤ÁªèËÆ∞ÂΩïÁöÑÂÄºÊõ¥ÈïøÔºåÊâÄ‰ª•Êàë‰ª¨ÈúÄË¶ÅlÂâçÁßªÔºàÊØõÊØõËô´ÁöÑÂ∞æÂ∑¥Ôºâ„ÄÇÈáçÂ§ç‰∏äËø∞ËøáÁ®ãÔºåÁõ¥Âà∞‚ÄúÊØõÊØõËô´‚ÄùÁà¨ÂÆåÊï¥‰∏™Â∫èÂàó„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ã View Codec++ #include &lt;cstdio&gt; #include &lt;algorithm&gt; #include &lt;iostream&gt; using namespace std; const int maxn = 1e5+10; int T,n,s,num[maxn]; int main() { scanf(&quot;%d&quot;,&amp;T); while(T--) { scanf(&quot;%d %d&quot;,&amp;n,&amp;s); for(int i=1;i&lt;=n;i++) { scanf(&quot;%d&quot;,&amp;num[i]); } int l=1,r=1,sum=num[1],ans=maxn; while(l&lt;=r&amp;&amp;r&lt;=n) { //cout&lt;&lt;sum&lt;&lt;endl; if(sum&gt;=s) { if(sum-num[l]&gt;=s) sum-=num[l++]; else{ //cout&lt;&lt;l&lt;&lt;&quot; &quot;&lt;&lt;r&lt;&lt;endl; ans=min(r-l+1,ans); sum-=num[l++]; } }else{ sum+=num[++r]; } } if(ans==maxn) cout&lt;&lt;0&lt;&lt;endl; else cout&lt;&lt;ans&lt;&lt;endl; } return 0; } ‰æãÈ¢ò‰∫å(BÈ¢ò) Â§ßÊÑèÔºöÊòØÊ±Ç1-n‰∏≠Âì™‰∏ÄÊÆµÂ≠êÂå∫Èó¥ÁöÑÂπ≥ÊñπÂíåÁ≠â‰∫éS„ÄÇÊåâÂ≠óÂÖ∏Â∫èËæìÂá∫ÂÖ®ÈÉ®ÊÉÖÂÜµ„ÄÇ Âü∫Êú¨ÊÄùË∑ØÂíå‰æãÈ¢ò‰∏ÄÁ±ª‰ººÔºåÂîØ‰∏Ä‰∏çÂêåÁöÑÊòØÈúÄË¶ÅËæìÂá∫Â∫èÂàóÔºåÂèØ‰ª•ËÄÉËôëÁî®Êï∞ÁªÑËÆ∞ÂΩï‰∏ãl,rÔºåËæìÂá∫Á≠îÊ°àÊó∂ÂÜçËæìÂá∫Âç≥ÂèØ„ÄÇ ÈÇ£Â∞±Áõ¥Êé•Ë¥¥‰ª£Á†Å‰∫Ü(Âè™ÊòØÊáíÂæóÂÜçÂÜô‰∏ÄÈÅçÈ¢òËß£)Ôºö View Code‚Äãc++ #include &lt;cstdio&gt; #include &lt;cmath&gt; #include &lt;algorithm&gt; #include &lt;iostream&gt; using namespace std; typedef long long ll; const int maxn = 1e7; ll n,x[maxn],y[maxn],ans=0; int main() { scanf(&quot;%lld&quot;,&amp;n); ll l=1,r=1,sum=1,len=sqrt(n)+2; while(l&lt;=r&amp;&amp;r&lt;=len) { //cout&lt;&lt;sum&lt;&lt;endl; if(sum&gt;=n) { if(sum==n) { ++ans; x[ans]=l,y[ans]=r; } sum-=l*l; l++; }else{ r++; sum+=r*r; } } cout&lt;&lt;ans&lt;&lt;endl; for(int i=1;i&lt;=ans;i++) { cout&lt;&lt;y[i]-x[i]+1&lt;&lt;&quot; &quot;; for(int j=x[i];j&lt;=y[i];j++) { cout&lt;&lt;j&lt;&lt;&quot; &quot;; } cout&lt;&lt;endl; } return 0; } Â∞èÁªìÔºöÂ∞∫ÂèñÂèØ‰ª•Âú®O(n)ÁöÑÊó∂Èó¥ÂæóÂá∫Á±ª‰ººÁöÑÊ±Ç‰∏ÄÊÆµËøûÁª≠Â≠êÂå∫Èó¥ÁöÑËß£ÔºåËôΩÁÑ∂ÈÄÇÁî®ÊÄß‰∏çÂπø(Ëá≥Â∞ëÂú®ÊàëÁúãÊù•Ôºå‰πüÂèØËÉΩÊòØÂõ†‰∏∫ÊàëËèúQAQ)Ôºå‰∏çËøáËØ•Áî®‰∏äÁöÑÊó∂ÂÄô‰πü‰ºöÊúâ‰∏çÈîôÁöÑÊïàÊûú„ÄÇ ‰∫åÂàÜÂü∫Êú¨ÊÄùË∑ØÔºö‰∫åÂàÜÁöÑÊÄùÊÉ≥ÊúÄÊó©ÂèØ‰ª•‰ªé‰∏≠Â≠¶Â≠¶ËøáÁöÑÁâõÈ°øËø≠‰ª£Ê±ÇÊ†πÂºÄÂßãÊé•Ëß¶Âà∞ÔºåÁÆÄÂçïÊù•ËØ¥ÔºåÂÅáÂ¶ÇË¶ÅÂú®‰∏ÄÊÆµÂçïË∞ÉÊÄßÂîØ‰∏Ä(ÂÅáÂÆöÊòØÂçïÂ¢û)ÁöÑÂ∫èÂàó‰∏≠ÊâæÂà∞‰∏Ä‰∏™ÂÄºÔºåÁª¥Êä§Âå∫Èó¥ËæπÁïål,rÔºåÊØèÊ¨°Âèñl,r‰∏≠ÁÇπÂÄº‰∏éÈúÄË¶ÅÊâæÁöÑÂÄº‰ΩúÊØîËæÉÔºåËã•ËøáÂ§ßÔºåÂàôÂè≥ËæπÁïåÂ∑¶ÁßªËá≥‰∏≠ÁÇπÂ§ÑÔºåÂèç‰πãÂàôÂ∑¶ËæπÁïåÂè≥ÁßªÂà∞‰∏≠ÁÇπÂ§ÑÔºåÂ¶ÇÊ≠§ÂæÄÂ§çÔºåÈÇ£‰πàÂú®ÊØèÊ¨°ÊäòÂçäÂêéÔºåÊúÄÂ§öÂè™ÈúÄË¶Ålog2(n)Ê¨°‰æøÂèØ‰ª•Ê£ÄÁ¥¢Âà∞Ëß£„ÄÇ ‰∏ãÈù¢‰∏âÈÅì‰æãÈ¢òÔºö ‰æãÈ¢ò‰∏â(CÈ¢ò) Â§ßÊÑèÔºöÊòØÁªôÂá∫n‰∏™‰ΩçÁΩÆÔºåÈÄâÂá∫ÂÖ∂‰∏≠m‰∏™‰ΩçÁΩÆÔºå‰ΩøÂæóm‰∏™‰ΩçÁΩÆ‰πãÈó¥ÁöÑÊúÄÁü≠Ë∑ùÁ¶ªÊúÄÂ§ß„ÄÇËæìÂá∫ÊúÄÂ§ßÁöÑÊúÄÁü≠Ë∑ùÁ¶ª„ÄÇ ËøôÈÅìÈ¢òÂèØ‰ª•ÂØπË∑ùÁ¶ªËøõË°å‰∫åÂàÜÔºåÈ¶ñÂÖàÂØπ‰ΩçÁΩÆÊéíÂ∫èÔºåÂØπ‰∫éÊØè‰∏™Ë∑ùÁ¶ªÔºåÂ¶ÇÊûúËÉΩÊª°Ë∂≥ÂèØ‰ª•ÈÄâÊã©ÁöÑ‰ΩçÁΩÆÂ§ß‰∫éÁ≠â‰∫ém‰∏™ÔºåÈÇ£‰πàËØ•Ë∑ùÁ¶ª‰∏∫ÂêàÊ≥ïË∑ùÁ¶ª„ÄÇËÄÉËôëÁª¥Êä§Âå∫Èó¥ËæπÁïål,r,‰∏≠ÁÇπmidÔºåÂ¶ÇÊûúmid‰∏∫ÂêàÊ≥ïË∑ùÁ¶ªÈÇ£‰πàÂå∫Èó¥ÂêëÂè≥ÁßªÔºåÂ¶ÇÊûúmid‰∏çÂêàÊ≥ïÔºåÈÇ£‰πàÂå∫Èó¥Â∫îËØ•ÂæÄÂ∑¶ÁßªÊâçËÉΩÂæóÂà∞ÂêàÊ≥ïË∑ùÁ¶ª„ÄÇ ÂÖ∑‰ΩìÁúã‰ª£Á†ÅÂè≠Ôºö View Codec++ #include &lt;cstdio&gt; #include &lt;string.h&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; using namespace std; const int maxn = 1e9+5; int num[100000+5],n,c; int check(int o) { int u=1,now=1; for(int i=2;i&lt;=n;i++) { while(i&lt;=n&amp;&amp;num[i]-num[now]&lt;o) { i++; } if(i&lt;=n) { now=i; u++; } } if(u&gt;=c) { return 1; }else{ return 0; } } int main() { scanf(&quot;%d %d&quot;,&amp;n,&amp;c); for(int i=1;i&lt;=n;i++) { scanf(&quot;%d&quot;,&amp;num[i]); } sort(num+1,num+n+1); int l=0,r=maxn; while(l&lt;r-1) { int mid=(l+r)/2; //cout&lt;&lt;l&lt;&lt;&quot; &quot;&lt;&lt;mid&lt;&lt;&quot; &quot;&lt;&lt;r&lt;&lt;endl; if(check(mid)) { l=mid; }else{ r=mid; } } if(check(l))printf(&quot;%d\\n&quot;,l); else printf(&quot;%d\\n&quot;,r); return 0; } ‰æãÈ¢òÂõõ(DÈ¢ò) Â§ßÊÑèÔºö‰∏ÄÊ†πÊ£çÂ≠êÊ®™Á´ã‰∏é‰∏§Èù¢Â¢ô‰πãÈó¥ÔºåÂΩìÊ£çÂ≠êÂèóÁÉ≠ËÜ®ËÉÄÂêé‰ºöÂºØÊàêÂºìÂΩ¢ÔºàÂèØ‰ª•ÁúãÂÅöÂúÜÂºßÁöÑ‰∏ÄÈÉ®ÂàÜÔºâÔºåÊ±ÇÂºØÊõ≤ÁöÑÊ£çÂ≠ê‰∏éÂéüÊ£çÂ≠êÁöÑ‰∏≠ÁÇπÁöÑË∑ùÁ¶ª„ÄÇ È¢òÁõÆÊÄùË∑Ø‰∏çÈöæÊÉ≥ÔºåËÆæÈïøÂ∫¶‰∏∫xÔºåÈÇ£‰πàÊ†πÊçÆÂãæËÇ°ÂÆöÁêÜÂíå‰∏âËßíÂáΩÊï∞Â∞±ÂèØ‰ª•ÂàóÂá∫‰∏ÄÁ≥ªÂàóÊñπÁ®ãÔºåÈÇ£‰πàÂè™Ë¶ÅÂØπxËøõË°å‰∫åÂàÜÔºå‰πüÂ∞±ÊòØÂâçÊñáÊèêÂà∞ÁöÑÁâõÈ°øËø≠‰ª£Ê±ÇËß£ÁöÑËøáÁ®ãÔºåÂ∞±ÂèØ‰ª•ÂæóÂà∞Ëß£„ÄÇÔºàÁÑ∂ËÄåËøôÈÅìÈ¢òÊàë‰∫§‰∫Ü30ÂèëÁöÑWAÔºåÁõ¥Âà∞ÊàëÊääËØÑÊµãÂß¨‰ªég++ÊîπÊàêc++ÔºåwaÁöÑ‰∏ÄÂ£∞Âì≠Âá∫Êù•Ôºâ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö View Code‚Äãc++ #include &lt;cstdio&gt; #include &lt;string.h&gt; #include &lt;cmath&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; using namespace std; #define eps 1e-6 double L,LL,n,c; int main() { while(~scanf(&quot;%lf %lf %lf&quot;,&amp;L,&amp;n,&amp;c)) { if(L&lt;0&amp;&amp;n&lt;0&amp;&amp;c&lt;0) break; LL=L*(1.0+n*c); double R,l=0.0,r=L*0.5,mid; while(r-l&gt;eps) { mid=(l+r)/2.0; if(2 * asin((L / 2) / ((L*L + 4 * mid*mid) / (8 * mid)))*((L*L + 4 * mid*mid) / (8 * mid))&gt;=LL) { r=mid; }else{ l=mid; } } printf(&quot;%.3lf\\n&quot;,mid); } return 0; } ‰æãÈ¢ò‰∫î(FÈ¢ò) Â§ßÊÑèÔºöÁÆÄÂçï‰∫åÂàÜ+‰∫§‰∫íÔºåÂÖ∑‰ΩìÁúãÂéüÈ¢ò CFÁöÑÁâπÊúâÈ¢òÔºå‰∫§‰∫íÂæàÊúâÊÑèÊÄù‰∏ÄËà¨‰πü‰∏çÈöæÔºåÂä†‰∏äfflush(stdout)ÊàñËÄÖÁî®endlÂ∞±ÈóÆÈ¢ò‰∏çÂ§ß‰∫ÜÔºåÊ≤°ÁúãÊ∏ÖÈ¢òÂèØËÉΩ‰ºöÂêÉ‰∫èÔºåÔºàÊâãÂä®ÊâìÁ†ÅÔºâÊàëÊâç‰∏ç‰ºöÂëäËØâ‰Ω†ËøôÈÅìÈ¢òÊàëÁúãÈîô‰∫ÜÂ§ß‰∫éÂ∞è‰∫éÂè∑WA‰∫ÜËøëÂçÅÂèë„ÄÇÔºà‰∏ìÈ¢òÊÑüËßâÂÉèÂàíÊ∞¥‰∏ÄÊ†∑ÈöèÈöè‰æø‰æøÂ∞±‰∫§È¢ò‰∫ÜÂ§™‰∏çËÆ§Áúü‰∫ÜorzÔºâ ‰ª£Á†ÅÔºö View Codec++ #include &lt;iostream&gt; #include &lt;cstdio&gt; #include &lt;cstring&gt; #include &lt;cstdlib&gt; #include &lt;algorithm&gt; using namespace std; const int maxn = 1e9; int main() { int l=0,r=1e9,mid; while(1) { mid=(l+r)/2; cout&lt;&lt;&quot;Q &quot;&lt;&lt;mid&lt;&lt;endl; string c; cin&gt;&gt;c; cout.flush(); if(c==&quot;=&quot;) exit(0); else if(c==&quot;&lt;&quot;) { r=mid; }else { l=mid+1; } } return 0; } Â∞èÁªìÔºö‰∫åÂàÜ‰Ωú‰∏∫‰∏Ä‰∏™Â∏∏Áî®ÁÆóÊ≥ïÔºåÂÜôËµ∑Êù•Ëøò‰∏çÊòØÁâπÂà´È°∫ÊâãÔºåÂ∏àÂÖÑËØ¥cf‰∏≠Èó¥Â§ßÈÉ®ÂàÜÈÉΩÊòØ‰∫åÂàÜÈ¢òÂïä„ÄÇ ‰∏âÂàÜ‰æãÈ¢ò6ÔºöEÈ¢ò Â§ßÊÑèÔºöÂØπÂ§ö‰∏™ÊñπÁ®ã$ s_i(x) = ax^2+bx+c $ ,Âèñ$ F(x) = max(s_i(x)),x \\in [0,1000] $ Ê†áÂáÜ‰∏âÂàÜÔºå‰∏çËß£ÈáäÂï¶(‡≤•_‡≤•) ‰ª£Á†ÅÔºö View Code‚Äãc++ #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstdio&gt; #include &lt;string.h&gt; #include &lt;cmath&gt; using namespace std; const int maxn=1e4+5; int T,n,a[maxn],b[maxn],c[maxn]; int main() { scanf(&quot;%d&quot;,&amp;T); while(T--) { scanf(&quot;%d&quot;,&amp;n); for(int i=1;i&lt;=n;i++) { scanf(&quot;%d %d %d&quot;,&amp;a[i],&amp;b[i],&amp;c[i]); } double l=0,r=1000,mid1,mid2,now1,now2; while(r-l&gt;0.00000000001) { mid1=(l+r)/2; mid2=(mid1+r)/2; now1=a[1]*mid1*mid1+b[1]*mid1+c[1]; now2=a[1]*mid2*mid2+b[1]*mid2+c[1]; for(int i=2;i&lt;=n;i++) { now1=max(now1,a[i]*mid1*mid1+b[i]*mid1+c[i]); now2=max(now2,a[i]*mid2*mid2+b[i]*mid2+c[i]); } //printf(&quot;%lf-%lf:%lf=%lf %lf=%lf\\n&quot;,l,r,mid1,now1,mid2,now2); if(now1&gt;now2) { l=mid1; }else{ r=mid2; } } printf(&quot;%.4lf\\n&quot;,now1); } return 0; } ÂêéËÆ∞ÔºöÔºàÁ¨¨‰∏ÄÁØáÊÄªÁªìÊä•ÂëäÂÜôÂæóÂÉèÁøî‰∏ÄÊ†∑Êàë‰πüÊ≤°ÊúâÂäûÊ≥ïÈ∏≠(:–∑„Äç‚à†)Ôºâ","categories":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"}],"tags":[{"name":"‰∫åÂàÜ","slug":"‰∫åÂàÜ","permalink":"http://WigginsLi.github.io/tags/‰∫åÂàÜ/"},{"name":"Â∞∫Âèñ","slug":"Â∞∫Âèñ","permalink":"http://WigginsLi.github.io/tags/Â∞∫Âèñ/"},{"name":"‰∏âÂàÜ","slug":"‰∏âÂàÜ","permalink":"http://WigginsLi.github.io/tags/‰∏âÂàÜ/"}],"keywords":[{"name":"Training","slug":"Training","permalink":"http://WigginsLi.github.io/categories/Training/"}]},{"title":"Âà∑È¢òËÆ°ÂàíÔºàÈõÜËÆ≠ÈòüËÆ°ÂàíÂ§ñÔºâ","slug":"plan","date":"2019-01-10T12:25:28.000Z","updated":"2019-02-26T09:51:33.890Z","comments":true,"path":"2019/01/10/plan/","link":"","permalink":"http://WigginsLi.github.io/2019/01/10/plan/","excerpt":"Ëøô‰∏™ÂçöÂÆ¢Áªà‰∫éÊàêÂûã‰∫Ü‰∏ÄÊääËæõÈÖ∏Ê≥™ÔºåÈ©¨‰∏äÂºÄÂßãËá™Èó≠ÂºÄÂøÉÂà∑È¢òÈ∏≠ 2019.1.10update:Ë°•ÂÖÖ‰∫ÜÊù≠ÁîµÂÖ•Èó®ÂèäpojÈ¢òÂçï","text":"Ëøô‰∏™ÂçöÂÆ¢Áªà‰∫éÊàêÂûã‰∫Ü‰∏ÄÊääËæõÈÖ∏Ê≥™ÔºåÈ©¨‰∏äÂºÄÂßãËá™Èó≠ÂºÄÂøÉÂà∑È¢òÈ∏≠ 2019.1.10update:Ë°•ÂÖÖ‰∫ÜÊù≠ÁîµÂÖ•Èó®ÂèäpojÈ¢òÂçï WATERÈ¶ñÂÖàHDUÊ∞¥È¢ò100ÂæóÂÅöÂÆåÂêß(:–∑„Äç‚à†)‚Äî‚Äî-&gt;HDU100Ê∞¥È¢òËøòÊúâ‰∏Ä‰∏™Êù≠ÁîµÂÖ•Èó®È¢òÂçï‚Äî‚Äî-&gt;hduÂÖ•Èó® ÁÑ∂ÂêéÊòØÊ¥õË∞∑ÊôÆÂèäÁªÑÁöÑËØïÁÇºÂú∫ÔºàÊàëÊâç‰∏ç‰ºöÂëäËØâ‰Ω†ÊòØÂõ†‰∏∫ÊàëtqlËèúÁöÑÁúüÂÆûÔºâ‚Äî‚Äî-&gt;Ê¥õË∞∑ÊôÆÂèäÁªÑ ÁÑ∂ÂêéÁöÑÁÑ∂ÂêéÔºåkuangbinÂ∏¶‰Ω†È£ûÁ≥ªÂàóÔºå‚ÄúÂ∞ëÊ∞¥Áæ§Â§öÂà∑È¢ò‚Äù ‚Äî‚ÄîkuangbinËíüËíªÂÖàclone‰∏Ä‰∏™‰∏ìÈ¢ò‰∏ÄÂêßemmm‚Äî‚Äî-&gt;kuangbin‰∏ìÈ¢ò‰∏Ä‚Äî‚Äî-&gt;kuangbinÂÖ®Á≥ªÂàó ËøõÈò∂Â∞±Êù•‰∏Ä‰∏™pojÈ¢òÂçïÂêß‚Äî‚Äî-&gt;pojÂæàÂ•ΩÂæàÊúâÂ±ÇÊ¨°ÊÑü Hard(‰πüËÆ∏ÊòØÊúâÁîü‰πãÂπ¥Á≥ªÂàóÔºàÂ§ßÈõæ))‰∏Ä‰ªΩcodeforcesÈ¢òÂçï‚Äî‚Äî-&gt;cfÈ¢òÂçï To be continue‚Ä¶","categories":[{"name":"Experience","slug":"Experience","permalink":"http://WigginsLi.github.io/categories/Experience/"}],"tags":[{"name":"ËÆ°Âàí","slug":"ËÆ°Âàí","permalink":"http://WigginsLi.github.io/tags/ËÆ°Âàí/"}],"keywords":[{"name":"Experience","slug":"Experience","permalink":"http://WigginsLi.github.io/categories/Experience/"}]},{"title":"HelloMyDearFriend","slug":"HelloMyDearFriend","date":"2019-01-08T16:49:00.000Z","updated":"2019-03-15T05:28:29.527Z","comments":true,"path":"2019/01/09/HelloMyDearFriend/","link":"","permalink":"http://WigginsLi.github.io/2019/01/09/HelloMyDearFriend/","excerpt":"(ÔΩûÔø£‚ñΩÔø£)ÔΩûÂãáÂ£´Ôºå‰ºº‰πé‰Ω†ÂèëÁé∞‰∫ÜÊú™Áü•ÁöÑÈ¢ÜÂüü","text":"(ÔΩûÔø£‚ñΩÔø£)ÔΩûÂãáÂ£´Ôºå‰ºº‰πé‰Ω†ÂèëÁé∞‰∫ÜÊú™Áü•ÁöÑÈ¢ÜÂüü #include &lt;iostream&gt; using namespace std; int main() { cout&lt;&lt;&quot;Hello World!&quot;&lt;&lt;endl; return 0; }","categories":[{"name":"Experience","slug":"Experience","permalink":"http://WigginsLi.github.io/categories/Experience/"}],"tags":[{"name":"Hello","slug":"Hello","permalink":"http://WigginsLi.github.io/tags/Hello/"}],"keywords":[{"name":"Experience","slug":"Experience","permalink":"http://WigginsLi.github.io/categories/Experience/"}]}]}